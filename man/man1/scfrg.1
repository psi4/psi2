
.ds OS UNIX

.\"     @(#)tmac.an 1.37 90/02/04 SMI;
.ds ]W Psi Release 1.1
'	# month name
.  \".if "\nd"0" .nr m \n(mo-1
.  \".if "\nm"0" .ds ]m January
.  \".if "\nm"1" .ds ]m February
.  \".if "\nm"2" .ds ]m March
.  \".if "\nm"3" .ds ]m April
.  \".if "\nm"4" .ds ]m May
.  \".if "\nm"5" .ds ]m June
.  \".if "\nm"6" .ds ]m July
.  \".if "\nm"7" .ds ]m August
.  \".if "\nm"8" .ds ]m September
.  \".if "\nm"9" .ds ]m October
.  \".if "\nm"10" .ds ]m November
.  \".if "\nm"11" .ds ]m December
'	# set the date
.  \".if n \{.nr m \nm+1
.  \".	 ie \nd .ds ]W Modified \nm/\nd/\ny
.  \".	 el .ds ]W Printed \n(mo/\n(dy/\n(yr\}
.  \".if t \{.ie \nd .ds ]W \*(]m \nd, 19\ny
.  \".	 el .ds ]W \*(]m \n(dy, 19\n(yr\}
'	# end of commented out chunk
.if t .tr *\(**
.ie n \{\
.	ds lq \&"\"
.	ds rq \&"\"
.\}
.el \{\
.	ds rq ''
.	ds lq ``
.\}
.de UC
.  \".if t \{\
.  \".	ie "\\$1"" .ds ]W 3rd Berkeley Distribution
.  \".	ie "\\$1"4" .ds ]W \\$1th Berkeley Distribution
.  \".	el .ds ]w \\$2 \\$1 BSD
.  \".\}
..
'	# reset the basic page layout
.de }E
.}f
.in \\n()Ru+\\n(INu
.ll \\n(LLu
..
'	# default tabs
.de DT
'ta .5i 1i 1.5i 2i 2.5i 3i 3.5i 4i 4.5i 5i 5.5i 6i 6.5i
..
'	# set type font and size
.de }f
.ps 10
.ft 1
..
'	# handle the head of the page
.de }H
.ev 1
.}C
'sp .5i
.ft 1
.ps 10
.tl \\*(]H\\*(]D\\*(]H
'sp .5i
.ev
.ns
..
'	# handle the foot of the page
.de }F
.ev 1
.ft 1
.ps 10
'sp .5i
.if !\\nD .tl \\*(]W\\*(]L\\*(PN%
.if  \\nD .if o .tl \\*(]W\\*(]L\\*(PN%
.if  \\nD .if e .tl \\*(PN%\\*(]L\\*(]W
.if !\\nX 'bp
.if \\nX .if \\n%>=\\nX \{\
.ds PN \\n%
.pn 1
.af % a
.nr X 0
'bp 1\}
.if \\nX .if \\n%<\\nX 'bp
.ev
..
'	# the cut mark -- we don't need this -- Henry
.  \".if n .ig
.  \".de }C
.  \".po .1i
.  \".tl '-'
.  \".po
.  \"..
'	# the final cut mark -- we don't need this -- Henry
.  \".de }M
.  \".}N
.  \".wh -1p }C
.  \".ll \\n(LLu
.  \"..
'	# no runout unless there was a .TH
.de }K
.}N
.pl 1
.ll \\n(LLu
..
.em }K
'	# set title and heading
.de TH
.PD
.DT
.if n .nr IN .5i
.if t .nr IN .5i
.ll 6.5i
.nr LL \\n(.l
.ds ]H \\$1\|(\|\\$2\|)
.ds ]D MISC. REFERENCE MANUAL PAGES
.if '\\$2'1' .ds ]D PSI COMMANDS FOR \\*(pT
.if '\\$2'2' .ds ]D PSI COMMON INPUT FOR \\*(pT
.if '\\$2'3' .ds ]D PSI PROCEDURES FOR \\*(pT
.if '\\$2'4' .ds ]D PSI EXAMPLES FOR \\*(pT
.if '\\$2'5' .ds ]D PSI LIBRARY
.if !'\\$4''  .ds ]W \\$4
.if !'\\$5''  .ds ]D \\$5
.wh 0 }H
.if t .wh -1i }F
.if n .wh -1.167i }F
.em }M
.if !\\n(nl .if !\\nP .nr P 1
.if !\\n(nl .if \\nP .pn \\nP
.if \\nX .if \\nP>=\\nX \{\
.ds PN \\nP
.pn 1
.af % a
.nr X 0 \}
.if !\\n(nl .if \\nP .nr P 0
.if  \\nC .if \\n(nl .bp
.if  !\\nC .if \\n(nl .bp 1
.ds ]L Last change: \\$3
.}E
.DT
.nr )I .5i
.nr )R 0
.  \".if n .na
.mk ka
.if !'\\n(ka'-1' .bp
..
'	# IX - Make an Index Entry
.de IX
.if \\nF .tm .IE\tENTRY\t\\$1\t\\$2\t\\$3\t\\$4\t\\$5\t\\$6\t\\*(PN\\n%
..
'	# TX - Resolve a Title Reference
.de TX
.ds Tx "UNKNOWN TITLE ABBREVIATION: \\$1
.if '\\$1'GSBG' .ds Tx "Getting Started 
.if '\\$1'SUBG' .ds Tx "Customizing SunOS
.if '\\$1'SHBG' .ds Tx "Basic Troubleshooting
.if '\\$1'SVBG' .ds Tx "SunView User's Guide
.if '\\$1'MMBG' .ds Tx "Mail and Messages
.if '\\$1'DMBG' .ds Tx "Doing More with SunOS
.if '\\$1'UNBG' .ds Tx "Using the Network
.if '\\$1'GDBG' .ds Tx "Games, Demos & Other Pursuits
.if '\\$1'CHANGE' .ds Tx "SunOS 4.1 Release Manual
.if '\\$1'INSTALL' .ds Tx "Installing SunOS 4.1
.if '\\$1'ADMIN' .ds Tx "System and Network Administration
.if '\\$1'SECUR' .ds Tx "Security Features Guide
.if '\\$1'PROM' .ds Tx "PROM User's Manual
.if '\\$1'DIAG' .ds Tx "Sun System Diagnostics
.if '\\$1'SUNDIAG' .ds Tx "Sundiag User's Guide
.if '\\$1'MANPAGES' .ds Tx "SunOS Reference Manual
.if '\\$1'REFMAN' .ds Tx "SunOS Reference Manual
.if '\\$1'SSI' .ds Tx "Sun System Introduction
.if '\\$1'SSO' .ds Tx "System Services Overview
.if '\\$1'TEXT' .ds Tx "Editing Text Files
.if '\\$1'DOCS' .ds Tx "Formatting Documents
.if '\\$1'TROFF' .ds Tx "Using \&\fBnroff\fP and \&\fBtroff\fP
.if '\\$1'INDEX' .ds Tx "Global Index
.if '\\$1'CPG' .ds Tx "C Programmer's Guide
.if '\\$1'CREF' .ds Tx "C Reference Manual
.if '\\$1'ASSY' .ds Tx "Assembly Language Reference
.if '\\$1'PUL' .ds Tx "Programming Utilities and Libraries
.if '\\$1'DEBUG' .ds Tx "Debugging Tools
.if '\\$1'NETP' .ds Tx "Network Programming
.if '\\$1'DRIVER' .ds Tx "Writing Device Drivers
.if '\\$1'STREAMS' .ds Tx "STREAMS Programming
.if '\\$1'SBDK' .ds Tx "SBus Developer's Kit
.if '\\$1'WDDS' .ds Tx "Writing Device Drivers for the SBus
.if '\\$1'FPOINT' .ds Tx "Floating-Point Programmer's Guide
.if '\\$1'SVPG' .ds Tx "SunView\ 1 Programmer's Guide
.if '\\$1'SVSPG' .ds Tx "SunView\ 1 System Programmer's Guide
.if '\\$1'PIXRCT' .ds Tx "Pixrect Reference Manual
.if '\\$1'CGI' .ds Tx "SunCGI Reference Manual
.if '\\$1'CORE' .ds Tx "SunCore Reference Manual
.if '\\$1'4ASSY' .ds Tx "Sun-4 Assembly Language Reference
.if '\\$1'SARCH' .ds Tx "\s-1SPARC\s0 Architecture Manual
.	# non-Sun titles
.if '\\$1'KR' .ds Tx "The C Programming Language
\fI\\*(Tx\fP\\$2
..
'	# section heading
.de SH
.}X 0
.nr )E 2
\&\\$1 \|\\$2 \|\\$3 \|\\$4 \|\\$5 \|\\$6
..
'   # sub section heading
.de SS
.}X .25i "" ""
.nr )E 2
\&\\$1 \|\\$2 \|\\$3 \|\\$4 \|\\$5 \|\\$6
.br
..
'	# subroutine for section heading
.de }X
.}E
.ti \\$1
.sp \\n()Pu
.ne 2
.nr )R 0
.fi
.it 1 }N
.SM
.B
..
'	# end of SH (cf }X above and }N below)
.de }2
.nr )E 0
.}E
.nr )I .5i
.ns
..
'	# italic
.de I
.ft 2
.it 1 }N
.if !"\\$1"" \&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6
..
'	# bold
.de B
.ft 3
.it 1 }N
.if !"\\$1"" \&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6
..
'	# small
.de SM
.ps 9
.it 1 }N
.if !"\\$1"" \&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6
..
'	# combinations of Roman, italic, bold
.de RI
.}S 1 2 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de VS
'if '\\$1'4' .mc \s12\(br\s0
..
.de VE
'mc
..
.de RB
.}S 1 3 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de IR
.}S 2 1 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de IB
.}S 2 3 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de BR
.}S 3 1 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de BI
.}S 3 2 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
'	# make special case of shift out of italic
.de }S
.ds ]F
.if "\\$1"2" .if !"\\$5"" .ds ]F\^
.ie !"\\$4"" .}S \\$2 \\$1 "\\$3\f\\$1\\$4\\*(]F" "\\$5" "\\$6" "\\$7" "\\$8" "\\$9"
.el \\$3
.}f
..
'	# small and boldface
.de SB
\&\fB\s-1\&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6\s0\fR
..
'	# paragraph
.de LP
.PP
..
.de PP
.sp \\n()Pu
.ne 2
.}E
.nr )I .5i
.ns
..
'	# paragraph distance
.de PD
.if t .nr )P .4v
.if n .nr )P 1v
.if !"\\$1"" .nr )P \\$1v
..
'	# hanging indent
.de HP
.sp \\n()Pu
.ne 2
.if !"\\$1"" .nr )I \\$1n
.ll \\n(LLu
.in \\n()Ru+\\n(INu+\\n()Iu
.ti \\n()Ru+\\n(INu
.}f
..
'	# indented paragraph
.de IP
.TP \\$2
\&\\$1
..
'	# hanging label
.de TP
.if !"\\$1"" .nr )I \\$1n
.sp \\n()Pu
.in \\n()Ru
.nr )E 1
.ns
.it 1 }N
.di ]B
..
'	# end of TP (cf }N below)
.de }1
.ds ]X \&\\*(]B\\
.nr )E 0
.if !"\\$1"" .nr )I \\$1n
.}f
.ll \\n(LLu
.in \\n()Ru+\\n(INu+\\n()Iu
.ti \\n(INu
.ie !\\n()Iu+\\n()Ru-\w\\*(]Xu-3p \{\\*(]X
.br\}
.el \\*(]X\h|\\n()Iu+\\n()Ru\c
.}f
..
'	# handle end of 1-line features
.de }N
.if \\n()E .br
.di
.if "\\n()E"0" .}f
.if "\\n()E"1" .}1
.if "\\n()E"2" .}2
.nr )E 0
..
'	# increase relative indent
.de RS
.nr ]\\n+()p \\n()I
.nr )\\n()p \\n()R
.ie !"\\$1"" .nr )R +\\$1n
.el .nr )R +\\n()I
.nr )I .5i
.}E
..
'	# decrease relative indent
.de RE
.if !"\\$1"" \{.ie "\\$1"0" .nr )p 1 1
.		el .nr )p \\$1 1\}
.ds ]i \\*(]I\\n()p
.ds ]r \\*(]R\\n()p
.nr )I \\*(]i
.nr )R \\*(]r
.if \\n()p .nr )p -1
.}E
..
.nr )p 0 1
.ds ]I \\\\n(]
.ds ]R \\\\n()
.bd S 3 3
.if t .ds R \(rg
.if n .ds R (Reg.)
.ds S \s10
.hy 14

.if !'\*(Lv'ADVANCED' .ig
.ds pT \*(Lv \*(OS USERS
..
.if '\*(Lv'ADVANCED' .ig
.ds pT \*(OS USERS
..

.ds ]W Psi Release 2.0

.\" This is used to ignore blanks on a line
.\" Its purpose is to make the troff input look prettier.
.de __
\\$1
..

.\" Start List
.de sL                  \" .sL: start an optional list
.di dL
.LP   \" This resets some things, apparently
.nf
..

.\" End List
.de eL                  \" .eL: end an optional list under heading $1
.di
.fi
.\" The number 40 on the following line must be change if sL or eL are changed
.if \\n(dn>40  \{\
.\"SH \\$1 -- \\n(dn \" Use this line for debugging
.SH \\$1
.nf
.dL
.fi
.\}
..

.\" The input skip string, used to space headings.
.ds sS \0\0\0\0\0\0\0

.\" Input Section Header
.iS
.de iS
.LP
.nf
\\$1
.fi
..

.\" Input Line
.de iL
.IP "\\$1" 7
.if !'\\$2'' \{\
\\$2
.\}
..

.\" Input Option
.de iO
.IP "\\*(sS\\$1" 14
.if !'\\$2'' \{\
\\$2
.\}
..

.\" Input Option Value
.de iV
.IP "\\*(sS\\*(sS\\$1" 21
.if !'\\$2'' \{\
\\$2
.\}
..

.\" Start CMS
.de sC
.if !'\\*(OS'CMS' .ig eC
..
.\" End Advanced with .eC

.\" Start UNIX
.de sU
.if !'\\*(OS'UNIX' .ig eU
..
.\" End Advanced with .eU

.\" Start Advanced
.de sA
.if !'\\*(Lv'ADVANCED' .ig eA
..
.\" End Advanced with .eA

.\" Start Beginner
.de sB
.if !'\\*(Lv'' .ig eB
..
.\" End Beginner with .eB

.\" Psi Name
.de pN                  \" .pN: convert a generic file name to a specific name
.ta 2.5in
.if '\*(OS'CMS' \{\
. ds pO \\$1
. if '\\$1'OUTPUT' .ds pO             \" Unix only
. if '\\$1'BASIS' .ds pO BASIS DATA
. if '\\$1'PBASIS' .ds pO PBASIS DATA
. if '\\$1'HVIB_IN'  .ds pO HVIB15
. if '\\$1'HVIB_OUT' .ds pO FILE15
. if '\\$1'FILE91A' .ds pO FILE91
. if '\\$1'FILE92A' .ds pO FILE92
. if !'\\*(pO'' \\$3\\*(pO\\$2
.\}
.if '\*(OS'UNIX' \{\
. ds pO \\$1
. if '\\$1'INPUT' .ds pO input.dat
. if '\\$1'LMO' .ds pO lmo.dat
. if '\\$1'CONTOUR' .ds pO contour.ps
. if '\\$1'CMO' .ds pO cmo.dat
. if '\\$1'BASIS' .ds pO basis.dat
. if '\\$1'PBASIS' .ds pO pbasis.dat
. if '\\$1'RESUL1' .ds pO resul1.dat
. if '\\$1'RESUL2' .ds pO resul2.dat
. if '\\$1'RESUL3' .ds pO             \" CMS only
. if '\\$1'SLOFILE' .ds pO            \" CMS only
. if '\\$1'INTDERO' .ds pO            \" CMS only
. if '\\$1'MAKEFT' .ds pO resul3.dat
. if '\\$1'INTDER1' .ds pO intder1.dat
. if '\\$1'INTDIFO' .ds pO intdifo.dat
. if '\\$1'IDER'   .ds pO ider.dat
. if '\\$1'OPDM48' .ds pO file51.dat
. if '\\$1'HVIB_IN' .ds pO file15.dat
. if '\\$1'HVIB_OUT' .ds pO file16.dat
. if '\\$1'FILE12A' .ds pO file12a.dat
. if '\\$1'FILE16A' .ds pO file16a.dat
. if '\\$1'FILE21A' .ds pO file21a.dat
. if '\\$1'FILE11' .ds pO file11.dat
. if '\\$1'FILE12' .ds pO file12.dat
. if '\\$1'FILE13' .ds pO file13.dat
. if '\\$1'FILE14' .ds pO file14.dat
. if '\\$1'TOTAL15' .ds pO total15.dat
. if '\\$1'TOTAL20' .ds pO total20.dat
. if '\\$1'FILE15' .ds pO file15.dat
. if '\\$1'FILE16' .ds pO file16.dat
. if '\\$1'FILE17' .ds pO file17.dat
. if '\\$1'FILE18' .ds pO file18.dat
. if '\\$1'FILE19' .ds pO file19.dat
. if '\\$1'FILE20' .ds pO file20.dat
. if '\\$1'FILE21' .ds pO file21.dat
. if '\\$1'FILE22' .ds pO file22.dat
. if '\\$1'FILE23' .ds pO file23.dat
. if '\\$1'FILE24' .ds pO file24.dat
. if '\\$1'FILE25' .ds pO file25.dat
. if '\\$1'FILE91A' .ds pO file91a.dat
. if '\\$1'FILE92A' .ds pO file92a.dat
. if '\\$1'CHECK' .ds pO tape3.dat
. if '\\$1'OUTPUT' .ds pO output.dat\" Unix only
. if '\\$1'FILE6' .ds pO              \" CMS only
. if '\\$1'BMAT' .ds pO input.dat
. if '\\$1'INTCO' .ds pO intco.dat
. if '\\$1'GEOM' .ds pO geom.dat
. if '\\$1'FCONST' .ds pO fconst.dat
. if !'\\*(pO'' \\$3\\*(pO\\$2
.\}
..                      \" End of .pN macro definition

.TH scfrg 1 "26 August, 1991" "\*(]W" "\*(]D"
.SH NAME
scfrg \- solves the Hartree-Fock equations

.SH DESCRIPTION
.LP
The program
.B scfrg
carries out the iterative procedure to solve the
Hartree-Fock equations.  It is intended for use with the
.B oscc4
program.

.LP
This program is restricted to
.if n D2h
.if t D\s-2\d2h\u\s0
symmetry and its subgroups
and the orbital occupations are required to be integers.
Thus, certain pure
angular momentum states derived from partial occupation of degenerate
orbitals cannot be obtained with the present codes.  For example, the
.if n 2PIu (doublet PI u)
.if t \s-2\u2\d\s0\(*P\s-2\du\u\s0
state of linear O-N-O derived from the lowest energy
linear
.if n (pi u)1
.if t \(*p\s-2\d\zu\u\u1\d\s0
configuration may only be computed as the
.if n 2B2u (doublet B2u)
.if t \s-2\u2\d\s0B\s-2\d2u\u\s0
or
.if n 2B3u (doublet B 3u)
.if t \s-2\u2\d\s0B\s-2\d3u\u\s0
component of the
.if n 2PIu (doublet PI u)
.if t \s-2\u2\d\s0\(*P\s-2\du\u\s0
state,
and the resulting spatial wavefunction will not have
.if n PI
.if t \(*P
symmetry.  In a
certain sense, however, this is desirable, as the energy will be a
continuous function of the bending angle.  Calculating the energy of
bent configurations as
.if n 2B2u (doublet B 2u)
.if t \s-2\u2\d\s0B\s-2\d2u\u\s0
or
.if n 2B3u (doublet B 3u)
.if t \s-2\u2\d\s0B\s-2\d3u\u\s0
and doing a pure
.if n 2PIu (doublet PI u)
.if t \s-2\u2\d\s0\(*P\s-2\du\u\s0
state at linear geometries results in a pronounced discontinuity.

.LP
For the most part, triplet states resulting from double occupation
of a doubly degenerate orbital, such as the
.if n 3A2 (triplet A 2)
.if t \s-2\u3\d\s0A\s-2\d2\u\s0
state resulting from the
.if n (e')2
.if t e\(fm\s-2\u2\d\s0
or
.if n (e")2
.if t e\(fm\(fm\s-2\u2\d\s0
configurations in
.if n D3h
.if t D\s-2\d3h\u\s0
symmetry, or
the
.if n 3SIGMAg (triplet SIGMA g)
.if t \s-2\u3\d\s0\(*S\s-2\dg\u\s0
state of a
.if n (pi g)2
.if t \(*p\s-2\d\zg\u\u2\d\s0
or
.if n (pi u)2
.if t \(*p\s-2\d\zu\u\u2\d\s0
configuration in
.if n Dinfh (D infinity h)
.if t D\s-2\d\(ifh\u\s0
symmetry, will have the proper spatial symetry.
The singlet states resulting from these same electronic configurations
are inherently multiconfiguration and, as such, are not well represented
by single configuration wavefunctions.

.SH REFERENCES
.LP
PK-file method:
.IP "1."
R. C. Raffenetti, Chem. Phys. Lett. 20 (1973) 335.
.LP
Molecular symmetry and closed shell HF calculations:
.IP "1."
M.Dupuis, and H.F.King, Int. J. Quant. Chem.  11 (1977) 613.
.LP
DIIS for closed shell:
.IP "1."
P. Pulay, Chem. Phys. Lett. 73 (1980) 393.
.IP "2."
P. Pulay, J. Comp. Chem. 3 (1982) 556.
.LP
Coupling coefficients (alpha and beta) for open shell:
.IP "1."
C. C. J. Roothaan, Rev. Mod. Phys. 32 (1960) 179.
.LP
Damping:
.IP "1."
D. R. Hartree, "The Calculation of Atomic Structures" (Wiley: New
York) 1957.
.IP "2."
M. C. Zerner and M. Hehenberger, Chem. Phys. Lett. 62 (1979) 550.
.LP
Level shifting:
.IP "1."
V. R. Saunders and I. H. Hillier, Int. J. Quant. Chem. 7 (1973)
699.

.sL
.pN INPUT
.pN FILE30
.pN FILE34
.eL "FILES REQUIRED"

.sL
.pN FILE92
.eL "TEMPORARY FILES USED"

.sL
.pN OUTPUT
.pN FILE30     "	(MO coefficients)"
.eL "FILES UPDATED"

.sL
.pN CHECK
.pN FILE6
.pN FILE79
.eL "FILES GENERATED"

.SH CONVERGING \fBSCF\fP
.LP
For difficult open shell cases, it is recommended
that an appropriate closed shell calculation be run first (add or
remove an extra electron) and that this SCF vector then be used as
a guess for the desired open shell wavefunction.  For
TCSCF cases, it is always wise to run a closed shell (or perhaps
the appropriate triplet) SCF first and then use this as a guess for
the TCSCF.

.LP
For open shell systems, a level shift value of
0.5 to 3.0 is recommended.  Start with a high value (2.0 - 3.0)
for the first SCF calculation and then reduce it (to 0.5 - 1.0)
for subsequent runs which use a converged SCF vector as the
starting point.

.SH INPUT FORMAT
.\" ---------------------------------------- Commonly used input here:
.LP
The
.B scfrg
program
searches through the default keyword path (first
.B SCFRG
and then
.BR DEFAULT )
for the following keywords:

.IP "\fBLABEL =\fP \fIstring\fP"
This is a character string to be included in the output.  This string is not
used by the program.
There is no default.

.IP "\fBWFN =\fP \fIstring\fP"
This is the type of wavefunction which is ultimately desired.
The default is
.BR SCF .

.IP "\fBOPENTYPE =\fP \fIstring\fP"
This specifies the state desired.  It can be one of
.B NONE
(for a closed shell singlet),
.B SINGLET
(for an open shell singlet with two singly occupied orbitals of
different irreducible representations),
.B HIGHSPIN
(for any high spin open shell system),
.B TWOCON
(for a two configuration singlet), or
.BR SPECIAL .
If \fBSPECIAL\fP is given, then
.if n alpha
.if t \(*a
and
.if n beta
.if t \(*b
coupling coefficients must be given with the
.B ALPHA
and
.B BETA
keywords.
The default is
.BR NONE .

.IP "\fBDOCC =\fP \fIinteger_vector\fP"
This gives the number of doubly occupied orbitals in each
irreducible representation.  There is no default.

.IP "\fBSOCC =\fP \fIinteger_vector\fP"
This gives the number of singly occupied orbitals in each
irreducible representation.  If \fBOPENTYPE = NONE\fP,
then this defaults to the zero vector.  Otherwise,
there is no default.

.IP "\fBDERTYPE =\fP \fIstring\fP"
This specifies the order of derivative that is to eventually be done.
It is used by the
.B scfrg
program to determine if certain files are to be written and it is
also used to determine the default convergence of the wavefunction.
The default is
.BR FIRST .

.IP "\fBMAXITER =\fP \fIinteger\fP"
This gives the maximum number of iterations.
The default is 40.

.IP "\fBCONVERGENCE =\fP \fIinteger\fP"
The convergence criterion is
.if n 10**(\-\fIinteger\fP).
.if t 10\s-2\u(\-\fIinteger\fP)\d\s0.
The default is 7
if both \fBDERTYPE = NONE\fP and \fBWFN = SCF\fP are given
and 10 otherwise.

.IP "\fBLEVELSHIFT =\fP \fIreal\fP"
This specifies the level shift. The default is 1.

.IP "\fBDAMPING =\fP \fIreal\fP"
This specifies the damping factor. The default is 0.

.\" ---------------------------------------- Uncommonly used input here:
.LP
There are also a large number of less commonly used input parameters.
If you do not understand what the following options mean, then
make sure that they do not appear in your input.  The defaults will
work in the overwhelming majority of cases.
These are specified with the following keywords:

.IP "\fBREORDER =\fP \fIboolean\fP"
The molecular orbitals will be reordered if this is true, in which
case, the MOORDER parameter must be present.
The default is false.

.IP "\fBMOORDER =\fP \fIinteger_vector\fP"
This specifies a molecular orbital reordering vector.  It will only
be used if \fBREORDER = YES\fP.  This vector contains first the
ordering for the orbitals in the first irreducible representation
and then the second and so on.  The first orbital of each
irreducible representation is numbered 1.
There is no default.

.if n .ds MM MM
.if t .ds MM n\s-2\dsocc\u\s0

.IP "\fBALPHA =\fP \fIreal_vector\fP"
If \fBOPENTYPE = SPECIAL\fR, then this parameter gives the
.if n alpha
.if t \(*a
coupling coefficients.  The number of elements in this vector is
\*(MM(\*(MM+1)/2, where \*(MM is the number of
irreducible representations containing singly
occupied molecular orbitals.
There is no default.

.IP "\fBBETA =\fP \fIreal_vector\fP"
If \fBOPENTYPE = SPECIAL\fR, then this parameter gives the
.if n beta
.if t \(*b
coupling coefficients.  The number of elements in this vector is
\*(MM(\*(MM+1)/2, where \*(MM is the number of
irreducible representations containing singly
occupied molecular orbitals.
There is no default.

.IP "\fBRESTART =\fP \fIboolean\fP"
The calculation will restart from the old wavefunction
if \fIboolean\fP is true.  If the old wavefunction does not
exist, then the
.B scfrg
program will generate its own initial guess automatically.
Possible values for this parameter are
.BR TRUE ,
.BR YES ,
.BR 1 ,
.BR FALSE ,
.BR NO ,
and
.BR 0 .
The default is true.

.IP "\fBIPRINT =\fP \fIinteger\fP"
This is a print option.
The default is 0.

.IP "\fBIPRINT2 =\fP \fIinteger\fP"
This is a print option for the TFOCK routine.
The default is 0.

.IP "\fBROTATE =\fP \fIboolean\fP"
The molecular orbitals will not be rotated if this is false.
The rotation only affects the virtual orbitals for open shell systems.
This parameter must be true for correlated gradients and it must be
false for second and higher derivatives.
The default is false if \fBWFN = SCF\fP
and true otherwise.

.IP "\fBDIISSTART =\fP \fIinteger\fP"
This gives the first iteration for which DIIS will be used.
The default is 0.

.IP "\fBEXTRAP =\fP \fIinteger\fP"
This is an extrapolation flag.  The default is 0.

.IP "\fBCUTOFF =\fP \fIinteger\fP"
Integrals smaller than
.if n 10**(\-\fIinteger\fP)
.if t 10\s-2\u(\-\fIinteger\fP)\d\s0
are ignored.
The default is 20.

.IP "\fBPOPLE =\fP \fIboolean\fP"
An alternate extrapolation method will be used if this is true.
The default is false.

.\" ---------------------------------------- Bugs:
.SH BUGS
.LP
In the present version of the program, the number printed out
as the "VIRIAL THEOREM" is incorrectly calculated for some cases
and should be ignored.

