      SUBROUTINE EIVEC(UAS,EIG,OCC,ESO,EAO,EE)
      IMPLICIT REAL*8 (A-H,O-Z)
      integer nbfao,nbfso,nbasis
      DIMENSION UAS(NBFAO,NBFSO),EIG(NBASIS),OCC(NBASIS)
      DIMENSION ESO(NBFSO,NBFSO),EAO(NBFAO,NBFSO)
cets080989 the mips compiler can't handle the next line
cets080989      DIMENSION EE(NBFAO*NBFSO)
      dimension ee(1)
      DIMENSION NLAMDA(10),NCLOSD(10),NOPEN(10),OCT(2)
      DIMENSION ALPT(15),BETT(15)
      COMMON/BASIS/NBASIS,NBFAO,NBFSO,NBATRI
      COMMON/FUNCS/NATOM,N3N,NSYM
      COMMON/SIGNS/IPQ(500),IPRNT
      COMMON/PARAS/MXCOEF,LOCVEC
      COMMON/CI101/IOPEN,IOCX,JOCX,KOCX
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' UAS MATRIX'/)
    2 FORMAT(//,2X,' NOPEN = ',10I5/)
    3 FORMAT(//,2X,' ESO MATRIX'/)
    4 FORMAT(//,2X,' EAO MATRIX'/)
C
      ITAP30=30
      CALL WREADW(ITAP30,EE,MXCOEF*2,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,EIG,NBFSO*2,LOCVEC,LOCVEC)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL MATOUT(UAS,NBFAO,NBFSO,NBFAO,NBFSO,6)
C
C   READ IN SO-MO EIGENVECTORS
  201 CONTINUE
      LOCVEC=LOCVEC+NSYM
      CALL WREADW(ITAP30,NLAMDA,NSYM,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,NCLOSD,NSYM,LOCVEC,LOCVEC)
      WRITE(3,28) (NLAMDA(I),I=1,NSYM)
   28 FORMAT(2X,' NLAMDA = ',10I5/)
      WRITE(3,29) (NCLOSD(I),I=1,NSYM)
   29 FORMAT(2X,' NCLOSD = ',10I5/)
C
C   READ IN COUPLING CONSTANTS FOR OPEN SHELLS
      WRITE(3,30) IOPEN
      IF(IPRNT.GT.2)
     *WRITE(6,30) IOPEN
   30 FORMAT(2X,' IOPEN = ',I5/)
      IF(IOPEN.NE.0) THEN
      KOPEN=IABS(IOPEN)
      CALL WREADW(ITAP30,NOPEN,NSYM,LOCVEC,LOCVEC)
      WRITE(3,2) (NOPEN(I),I=1,NSYM)
      IF(IPRNT.GT.2)
     *WRITE(6,2) (NOPEN(I),I=1,NSYM)
      CALL WREADW(ITAP30,ALPT,KOPEN*2,LOCVEC,LOCVEC)
      WRITE(3,31) (ALPT(I),I=1,KOPEN)
      IF(IPRNT.GT.2)
     *WRITE(6,31) (ALPT(I),I=1,KOPEN)
   31 FORMAT(2X,' ALPT = ',10F10.5/)
      CALL WREADW(ITAP30,BETT,KOPEN*2,LOCVEC,LOCVEC)
      WRITE(3,32) (BETT(I),I=1,KOPEN)
      IF(IPRNT.GT.2)
     *WRITE(6,32) (BETT(I),I=1,KOPEN)
   32 FORMAT(2X,' BETT = ',10F10.5/)
      END IF
      IF(IOPEN.GE.0) GO TO 202
      OCT(1)=TWO/(ONE-ALPT(1))
      OCT(2)=TWO/(ONE-ALPT(3))
C
C   FORM OCCUPATION VECTOR
  202 CONTINUE
      DO 101 I=1,NBASIS
  101 OCC(I)=ZERO
      ITC=0
      I=0
      DO 105 ISM=1,NSYM
      DO 103 J=I+1,I+NCLOSD(ISM)
      OCC(J)=TWO
  103 CONTINUE
      K=I+NCLOSD(ISM)
      IF(IOPEN.LT.0) GO TO 203
      IF(IOPEN.EQ.0) GO TO 204
      DO 104 J=K+1,K+NOPEN(ISM)
      OCC(J)=ONE
  104 CONTINUE
      GO TO 204
  203 CONTINUE
      ITC=ITC+1
      OCC(K+1)=OCT(ITC)
  204 CONTINUE
      I=I+NLAMDA(ISM)
  105 CONTINUE
C
C   FORM SO-MO EIGENVECTOR MATRIX
      DO 106 I=1,NBFSO
      DO 106 J=1,NBFSO
      ESO(I,J)=ZERO
  106 CONTINUE
      I=0
      J=0
      DO 108 ISYM=1,NSYM
      N=NLAMDA(ISYM)
      DO 107 K=J+1,J+N
      DO 107 L=J+1,J+N
      I=I+1
      ESO(L,K)=EE(I)
  107 CONTINUE
      J=J+N
  108 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 205
      WRITE(6,3)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBFSO,NBASIS,NBASIS,6)
C
C   TRANSFORM EIGENVECTORS FROM SO TO AO BASIS
  205 CONTINUE
      DO 110 I=1,NBFAO
      DO 110 J=1,NBASIS
      VALU=ZERO
      DO 109 K=1,NBFSO
      VALU=VALU+UAS(I,K)*ESO(K,J)
  109 CONTINUE
      EAO(I,J)=VALU
  110 CONTINUE
      IF(IPRNT.LE.3) GO TO 206
      WRITE(6,4)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBFAO,NBASIS,NBASIS,6)
  206 CONTINUE
C
      RETURN
      END
