.TH psi 1 "14 January, 1995" "\*(]W" "\*(]D"
.SH NAME
psi \- master execution driver for the PSI programs

.SH DESCRIPTION
.LP
The program
.B psi
reads your input deck, determines what type of calculation you are
trying to perform, and runs the appropriate programs.  
.B psi
reads the file /home/xerxes/psi/lib/psi.dat by default.  This file
contains macros for some standard calculations.  Psi is very flexible,
however, and anything in the psi.dat file can be overriden by the user.
Thus, all that is written below should be taken with a grain of salt.
Experimentation is the best way to learn the 
.B psi 
command, and nothing that is written here should be taken as gospel.
A good place to look for syntax is in the psi.dat file.  Hopefully this
man page and the psi.dat file should tell you all you need to know to get
started.

.sL
.pN INPUT
.pN psi.dat
.eL "FILES REQUIRED"

.SH INPUT FORMAT
.\" ---------------------------------------- Commonly used input here:
.LP
The
.B psi
program
searches through the default keyword path (first
.B PSI
and then
.BR DEFAULT )
for the following keywords:

.IP "\fBWFN =\fP \fIstring\fP"
This is the type of wavefunction which is ultimately desired.
As of this writing, acceptable values for WFN are SCF, CASSCF, CI, CCSD and CCSD_T.
Having WFN defined as anything else is not necessarily bad, but don't
expect 
.B psi
to be able to figure out what to do.  If you have a non-standard WFN, then
it would probably be best to provide an EXEC section (see below).
There is no default.

.IP "\fBOPENTYPE =\fP \fIstring\fP"
This specifies the state desired.  It can be one of
.B NONE
(for a closed shell singlet),
.B SINGLET
(for an open shell singlet with two singly occupied orbitals of
different irreducible representations),
.B HIGHSPIN
(for any high spin open shell system), or
.B TWOCON
(for a two configuration singlet).
The default is
.BR NONE .

.IP "\fBDERTYPE =\fP \fIstring\fP"
This specifies the order of derivative that is to eventually be done.
The default is
.BR NONE .

.IP "\fBOPT =\fP \fIboolean\fP"
Set this equal to true if you are performing a geometry optimization.
The default is false.

.IP "\fBNOPT =\fP \fIinteger\fP"
This gives the maximum number of iterations if OPT is true.
The default is 1.

.IP "\fBDISP =\fP \fIboolean\fP"
Set this equal to true if you are performing a finite displacements.
The default is false.

.IP "\fBNDISP =\fP \fIinteger\fP"
This gives the maximum number of displacements if DISP is true.
The default is 1.

.IP "\fBSTABILITY =\fP \fIboolean\fP"
Set this equal to true if you are performing a stability analysis.
The default is false.

.IP "\fBNCASITER =\fP \fIinteger\fP"
This gives the maximum number of CASSCF iterations if WFN = CASSCF.
The default is 1.

.IP "\fBCHECK =\fP \fIboolean\fP"
If this is true, then 
.B psi
will parse your input deck, and print out the sequence of commands to
be executed.  The default is false.

.IP "\fBLARGE =\fP \fIboolean\fP"
If true, then a calculation requiring large amounts of core is to be
performed.  Right now, this is only used in conjunction with the coupled
cluster codes.  The default is false.

.IP "\fBEXEC =\fP \fIstring_vector\fP"
The EXEC vector contains a list of commands to be executed by 
.BR psi .
Explicit commands can be entered in double quotes, or preset variables can
be entered using the convention $\fIvariable\fP (see examples below).
Thus if you want to run 
.B ints
at some point, you could have

.DS
psi: (
  exec = (
    ...
    "ints"
    ...
    )
  )
.DE

or

.DS
psi: (
  ints = "ints"
  exec = (
    ...
    $ints
    ...
    )
  )
.DE

in your input. 


.SH LOOP CONTROL
.LP
Loop control is handled via the "repeat" and "end" built-in commands.
The syntax is

.DS
 repeat \fIn\fP  [commands to be executed] end
.DE

where \fIn\fP is the number of times to repeat the loop.  An inspection of
the psi.dat file will show that this is how geometry optimizations and
finite displacements are performed;  in these cases \fIn\fP is set equal
to NOPT or NDISP.

.SH EXAMPLES
.LP
Let's say you want to do an scf geometry optimization. Your 
.B psi
input could then be:

.DS
default: (
  wfn = scf
  dertype = first
  opentype = none
  opt = true
  nopt = 5
  ...
  )
.DE

What \fBpsi\fP would do with this is look in psi.dat or your input for
a variable called SCFCLOSEDFIRSTOPT (you see, \fBpsi\fP catenates
the values (roughly) for LARGE, WFN, OPENTYPE, DERTYPE, and OPT/DISP,
in approximately that order (case doesn't matter)), and then executes
the commands defined in the SCFCLOSEDFIRSTOPT vector.  Got it?

.LP
So now, let's say you want to run a program "myscf" instead of whatever
scf \fBpsi\fP thinks you should run.  What you would do is put the line

.DS
 scf = "myscf"
.DE

in your input.  

.LP
Okay, one last example, then you're on your own.  I want to run
\fBproper\fP after \fBderiv\fP in my scf gradient. I would have several
ways to do this.

.IP "1) Brute force"

.DS
default: (
  exec = (
   repeat 5
     "ints"
     "cscf"
     "deriv"
     "proper"
     $geomupdate  % this is defined in psi.dat
   end
   $done
   )
  )
.DE

.IP "2) Elegant"

.DS
default: (
  SCFFirst = ($ints $scf $deriv $proper)
  )
.DE

.IP "3) Obscure"

.DS
default: (
  deriv = ("deriv" "proper")
  )
.DE

And there are others.  The only limit is your own tortured imagination.

.LP
Like I said, the best way to find out what \fBpsi\fP can do is to look in
psi.dat, and to play around for awhile.  The CHECK option is very useful
for this.  Good luck!
