      SUBROUTINE NEOTRN(RA,IA,COMTOP)
C
C VERSION TO TAKE FULL ADVANTAGE OF SYMMERTY IN TRANSFORMING INTEGRALS
C
C  TESTED ON MNCH2+ ON MAY 3, 1982;  AGREES WITH EARLIER RUNS FROM TEXAS
C  AND FROM THE NO SYM TRANSFORMATION
C
      IMPLICIT INTEGER (A-Z)
C
C
      LOGICAL FITS
      REAL*8 REPNRG,ACRCY,SEC,DRTVER,FZC,ACRVEC,RA(1)
      INTEGER STARTT,ENDD,MIN,NUCREP(2)
      INTEGER FCB2(16),FCB44(16),FCB101(16),FCB103(16),FCB105(16)
      INTEGER FCBDRT(16),IVER(1)
      integer errcod, iacrvec, iacrcy
C
      COMMON /TAPES/  IT34,IT58,IT47,IT52,IT91,IT93,IT95
      COMMON /DIMS/   SYMORB,NUMIJ,NIJ,NBF,NORBS,NMAX,NBFORB,NSYM0
      COMMON /BDIM/   AMAX2,BMAX2,CMAX2,LENR,LENAOR,IBIG,IBIGR,LENPWS
      COMMON /OUT/    IOUT6,ICHECK,IDBG,ICNT
      COMMON /COR/    FZC,REPNRG
      COMMON /LBLS/   ILBL(20),LBLDRT(26),NSYM
      common /test/   itest
C
      DIMENSION ND(20),ITYP(20),MTYPE(2,20),NSO(20),MS(150),MNL(150)
      DIMENSION IJBKT(36)
      DIMENSION IA(COMTOP)
C
      EQUIVALENCE (REPNRG,NUCREP),(IVER,DRTVER)
C
      DATA IJBKT /0,1,0,2,3,0,4,5,6,0,7,8,9,10,0,11,12,13,14,15,0,16,17,
     118,19,20,21,0,22,23,24,25,26,27,28,0/
C
C
C
C
      CALL IZERO(IA,COMTOP)
C
C  SET IDBG TO 1,2,4,8,ETC. FOR VARIOUS DEBUG OUTPUT
      IDBG=32
      IT34=34
      IT47=47
      IT52=52
      IT58=58
      IT91=91
      IT93=93
      IT95=95
      CALL RFILE(IT34)
      CALL RFILE(IT52)
      CALL RFILE(IT91)
      CALL RFILE(IT93)
      CALL RFILE(IT95)
      CALL RFILE(IT58)
C**********  RFILE REWINDS THE FILE
CTJL  CALL SREW(IT95)
CTJL  CALL SREW(IT34)
CTJL  CALL SREW(IT52)
CTJL  CALL SREW(IT91)
CTJL  CALL SREW(IT93)
CTJL  CALL SREW(IT58)
C
CTJL  OPEN (UNIT=6,OPENMODE='A')
      FITS=.TRUE.
      INTSMX=2235
      LENGAO=INTSMX*4+2
      LENAOR=LENGAO/2
      LENPWS=INTSMX*2+2
      WRITE(IOUT6,701)
  701 FORMAT (' ')
C ============================================
C 09/15/97 Modified by MLL and YY. Was 1.0D-09 
C 11/20/97 MLL: Use following defaults unless
C modification read from input
C ============================================
      errcod = frdi('INT_ACCURACY',IACRCY)
      errcod = frdi('VEC_ACCURACY',IACRVEC)
      ACRCY = 10.0D+00**(-IACRCY)
      ACRVEC = 10.0D+00**(-IACRVEC)
      if (iacrcy.eq.0) ACRCY=1.0D-12
      if (iacrvec.eq.0) ACRVEC=1.0D-12
C ============================================
      WRITE(IOUT6,10)
   10 FORMAT(70(' '),/,/,T15,'TRANSFORMATION ROUTINE BY G. FITZGERALD'
     #,', DESIGNED TO',/,T9,'TAKE FULL ADVANTAGE OF SYMMETRY VIA'
     #,' THE BENDER-SHAVITT ALGORITHMS',/,T25,'PROGRAMMED FOR D2H',
     #' AND SUBGROUPS',/)
C     COMTOP= 50000
      WRITE(IOUT6,702) COMTOP,ACRCY
  702 FORMAT (' USING ',I7,' WORDS OF CORE',//,' THRESHOLD FOR ELIMINATI
     #ON OF INTEGRALS = ',1PE10.2,/)
C
C     ----- READ DIMENSIONS ETC FROM DRT TAPE -----
C
      CALL WREADW(IT58,IVER,INTOWP(1),1,END)
      CALL WREADW(IT58,LBLDRT,26,END,END)
      CALL WREADW(IT58,NBF,1,END,END)
      CALL WREADW(IT58,NSYM,1,END,END)
      CALL WREADW(IT58,NORBS,1,END,END)
      END=END+3
      CALL WREADW(IT58,NREFS,1,END,END)
      END=END+6
      CALL WREADW(IT58,SYMORB,1,END,END)
      CALL WREADW(IT58,NUMIJ,1,END,END)
      CALL WREADW(IT58,NGROUP,1,END,END)
      END=END+1
      CALL WREADW(IT58,NMAX,1,END,END)
      END=END+3
C
C
      WRITE(IOUT6,12) LBLDRT,NBF,NSYM,NORBS,NROWS,NMAX,NUMIJ,NGROUP
   12 FORMAT (/,1X,26A3,/,/,
     1 1X,'NBF    = ',I6,/,
     2 1X,'NSYM   = ',I6,/,
     3 1X,'NORBS  = ',I6,/,
     4 1X,'NROWS  = ',I6,/,
     5 1X,'NMAX   = ',I6,/,
     6 1X,'NUMIJ  = ',I6,/,
     7 1X,'NGROUP = ',I6,/)
C
C     ----- READ INFORMATION FROM HEADER OF INTEGRAL TAPE -----
C
      CALL WREADW (IT34,NKIND,1,1,IEND)
      CALL WREADW (IT34,ICLOS,1,IEND,IEND)
      CALL WREADW (IT34,ILBL ,20,IEND,IEND)
      CALL WREADW (IT34,NUCREP,INTOWP (1),IEND,IEND)
      CALL WREADW (IT34,NSYMHF,1,IEND,IEND)
      CALL WREADW (IT34,ND,NSYMHF,IEND,IEND)
      CALL WREADW (IT34,ITYP,NSYMHF,IEND,IEND)
      CALL WREADW (IT34,NSO,NSYMHF,IEND,IEND)
      CALL WREADW (IT34,NS,1,IEND,IEND)
      CALL WREADW (IT34,MTYPE,2*NS,IEND,IEND)
      CALL WREADW (IT34,LAPU,1,IEND,IEND)
      CALL WREADW (IT34,MS,LAPU,IEND,IEND)
      CALL WREADW (IT34,MNL,LAPU,IEND,IEND)
      ITOT = 25 + INTOWP(1) + 2*NS + 2*LAPU + 3*NSYMHF
      ISADR = I2SEC(ITOT) + 1
      CALL RSETSA(IT34,ISADR)
C     READ(IT34)NKIND,ICLOS,ILBL,REPNRG,NSYMHF,(ND(I),I=1,NSYMHF),
C    1(ITYP(I),I=1,NSYMHF),(NSO(I),I=1,NSYMHF),NS,(MTYPE(I),I=1,NS),
C    2LAPU,(MS(I),I=1,LAPU),(MNL(I),I=1,LAPU)
C     CALL  RSETSA(IT34,10)
      IF (NKIND.NE.1) THEN
           WRITE(IOUT6,703)
  703      FORMAT (//,' ***** WRONG INTEGRAL PROGRAM USED *****',//)
           CALL MABORT
      END IF
      IF(NSYMHF.LE.0.OR.NSYMHF.GT.8) THEN
           WRITE(IOUT6,704) NSYMHF
  704      FORMAT (//,' ***** NSYM IN SCF IS ',I3,//)
           CALL MABORT
      END IF
      WRITE(IOUT6,705) ILBL,LBLDRT,REPNRG
  705 FORMAT (1X,'LABEL FROM INTEGRALS :   ',20A4,/,
     1        1X,'LABEL FROM DRT       :   ',26A3,/,
     2        1X,'NUCLEAR REPULSION ENERGY = ',G18.8,/)
      INPUT=150
      BIGEST=MAX(SEC2I(INPUT),IROUND(INTOWP(NUMIJ)))
      WRITE(IOUT6,719) BIGEST
  719 FORMAT (' SIZE OF BIGGEST BUFFER IS ',I6,' WORDS')
      NBFORB=NBF*NORBS
      NIJ=(NBF*(NBF+1))/2
      NSYM2=(NSYMHF*(NSYMHF+1))/2
C
C     ----- CALCULATE POINTERS INTO BLANK COMMON  FOR DRT -----
C
      KADD=WPADTI(1+NBF**2)
      LADD=KADD+SYMORB
      IJADD=LADD+SYMORB
      IJGRP=IJADD+NUMIJ
      BFSYM=IJGRP+NUMIJ
      ORBSYM=BFSYM+NBF
      ORBTBF=ORBSYM+NORBS
      IOUT=ORBTBF+NORBS
CDB   IF((IDBG.AND.1).NE.0)PRINT,' DRT POINTERS REQUIRE: ',ORBTBF+NORBS
C
C     ----- END OF POINTERS FOR DRT -----
C
      CALL GETDRT(IA(KADD),IA(LADD),IA(IJADD),IA(IJGRP),IA(BFSYM),
     1IA(ORBTBF),IA(IOUT),IA(ORBSYM),END,NGROUP,NREFS)
C
      BFDRT=IOUT+NBF
      IOFF=BFDRT+NORBS
      NSOMO=IOFF+NIJ
      MOOFF=NSOMO+NSYMHF
      NSOFF=MOOFF+NSYMHF
      OFFA1=NSOFF+NSYMHF
      I=MAX(42,NGROUP)
      I=I*10
      START=OFFA1+NSYMHF
      ILAST=START+I
      ILAST2=ILAST+I
      INTOFF=ILAST2+I
      BKTPNT=INTOFF+I
      IFZ=BKTPNT+I
C
C     ----- REAL ARRAYS -----
C
      UMO=IADTWP(IFZ+NBF)
      MOINT=UMO+NBF*NORBS
C
C     ----- ZERO PART OF CORE -----
C
      CALL IZERO(IA(IOFF),IFZ+NBF-IOFF+1)
C
      CALL ALLOC(IA(IOFF),IA(NSOFF),IA(OFFA1),NSO,NSYMHF,IA(BFDRT)
     1,          IA(IOUT))
C
      CALL MAXS(IA(IOFF),IA(NSOMO),AMAX,BMAX,CMAX,NSYMHF,NSO
     1,         IA(IOUT),IA(BFSYM),IA(MOOFF),GFMAX)
C
      LCIBUF=SEC2I(50)
C
C     CALL CHCKIT(COMTOP,LCIBUF,AMAX,BMAX,CMAX,GFMAX,MOINT,NGROUP,UMO
C    #,           BIGEST,LENGAO,NSYMHF)
C
C
C
C
C     SPACE=COMTOP-LCIBUF-(AMAX+BMAX+CMAX)*2-MOINT
C     IF (SPACE .GT. COMTOP-LCIBUF-(AMAX+NIJ)*2-MOINT)
C    1SPACE=COMTOP-LCIBUF-(AMAX+NIJ)*2-MOINT
      SPACE=COMTOP-LCIBUF-INTOWP(AMAX+BMAX+CMAX)-WPADTI(MOINT)
      TEMP=COMTOP-LCIBUF-INTOWP(AMAX+NIJ)-WPADTI(MOINT)
      IF (SPACE .GT. TEMP) SPACE=TEMP
      WRITE(IOUT6,800)
      WRITE(ICHECK,800)
 800  FORMAT(/,4X,'COMTOP',4X,'LCIBUF',6X,'AMAX',
     1 6X,'BMAX',6X,'CMAX',5X,'MOINT',5X,'SPACE')
      WRITE(IOUT6,801)COMTOP,LCIBUF,AMAX,BMAX,CMAX,MOINT,SPACE
      WRITE(ICHECK,801)COMTOP,LCIBUF,AMAX,BMAX,CMAX,MOINT,SPACE
 801  FORMAT(7I10)
C
C
      IF (SPACE .LT. I2SEC(20)) THEN
           WRITE(IOUT6,706) SPACE
           WRITE(ICHECK,706)
  706      FORMAT (//,' ***** SPACE IS ONLY ',I6,' *****',//)
           CALL MABORT
      END IF
      LENGTH=SPACE/2
      IF (LENGTH .GT. BIGEST) LENGTH=BIGEST
      WRITE(IOUT6,802) LENGTH,BIGEST
 802  FORMAT(/,'  LENGTH =',I10,'  BIGEST =',I10)
      IF (LENGTH .LT. INTOWP(NUMIJ)) THEN
           WRITE(IOUT6,707) LENGTH
           WRITE(ICHECK,707) LENGTH
  707      FORMAT (//,' ***** LENGTH IS TO SMALL FOR 1E- INTEGRALS',I6
     #     ,          ' *****',//)
           CALL MABORT
      END IF
      LENR=LENGTH/2
      IF (LENGTH .NE. LENR*2) THEN
      LENGTH=(LENGTH/2)*2
      LENR=LENGTH/2
      END IF
      F=MOINT
      P=F+NIJ
      H=P+NIJ
      S=H+NIJ
      U=S+NIJ
      NINTS=U+NBF*NBF
      SRTAR=NINTS+LENGAO
C
C     ----- INTEGER EQUIVALENTS -----
C
      IFF=WPADTI(F)
      ININTS=WPADTI(NINTS)
      ISRTAR=WPADTI(SRTAR)
      IMOINT=WPADTI(MOINT)
C
      SPACE=COMTOP-WPADTI(SRTAR)
      NBKT=42
      WRITE(IOUT6,803) COMTOP,SPACE,SRTAR
 803  FORMAT('  COMTOP =',I10,'   SPACE =',I10,'   SRTAR =',I10,/)
C
      IF (NSYMHF .LT. 8) NBKT=6
C     IF (NBKT .LT. GFMAX*2/LENGTH+1) NBKT=GFMAX*2/LENGTH+1
      IF (NBKT .LT. INTOWP(GFMAX)/LENGTH+1) NBKT=INTOWP(GFMAX)/LENGTH+1
      BKTSZ=ITRNC(SPACE/NBKT)
      IF (WPADTI(MOINT)+BKTSZ+LENGTH .GT. COMTOP)
     #    BKTSZ=ITRNC(COMTOP-WPADTI(MOINT)-LENGTH)
      IF (BKTSZ .GT. BIGEST) BKTSZ=BIGEST
      IF (INTOWP(SRTAR-MOINT).LT.BKTSZ) BKTSZ=ITRNC(INTOWP(SRTAR-MOINT)
     #)
      IF (BKTSZ .LT. SEC2I(1)) THEN
           WRITE(IOUT6,708) BKTSZ
           WRITE(ICHECK,708) BKTSZ
  708      FORMAT (//,' ***** BKTSZ IS TOO SMALL',I6,' *****',//)
           CALL MABORT
      END IF
      RESRT=MOINT+BKTSZ
      IRESRT=WPADTI(RESRT)
      CALL ZERO(RA(UMO),IADTWP(COMTOP)-UMO)
C
C
      CALL VECS(RA(U),NBF,IOUT,ACRVEC,RA(1),IA(1))
C
C
      IBIG=NBKT*BKTSZ
      IBIGR=IBIG/INTOWP(1)
      IF (WPADTI(SRTAR+IBIGR) .GT. COMTOP) THEN
           WRITE(IOUT6,710) WPADTI(SRTAR+IBIGR)
  710      FORMAT (//,' ***** SORT ARRAY (SRTAR) GOES OVER COMTOP',I9,//
     *     )
           CALL MABORT
      END IF
C
      CALL GETINT(IA(IOFF),IA(NSOFF),IA(OFFA1),IA(ININTS),RA(NINTS),
     *IA(ISRTAR),RA(SRTAR),RA(RESRT),RA(F),RA(P),RA(H),RA(S),RA(U),
     *RA(UMO),LENGAO,NSO,IA(IOUT),IA(IFZ),NBKT,BKTSZ,IA(BKTPNT),
     *IA(START),IA(ILAST),IA(INTOFF),IJBKT,GFMAX,IA(IMOINT),RA(MOINT),
     #LENGTH,NSYMHF,BKTSZ/2,IA(ILAST2),SPACE,IA(IRESRT)
     #,           IA(IFF))
cets
c   get rid of file34 here, we don't need it anymore
      if (itest.eq.1) then
         call rclose(it34,4)
       else
         call rclose(it34,3)
      endif
C
C FOR 1E INTS
      MOINT1=MOINT
      P1=MOINT1+LENGTH/INTOWP(1)
      F=P1+AMAX
      IFF=WPADTI(F)
C  FOR 2E INTS
      C=MOINT+LENGTH/INTOWP(1)
      B=C+CMAX
      A=B+BMAX
      TTT=A+AMAX
      ITTT=WPADTI(TTT)
      MOARR=MAX(TTT+(LENGTH/INTOWP(1)),F+NIJ)
      IF (WPADTI(MOARR)+LCIBUF .GT. COMTOP) THEN
           WRITE(IOUT6,711) WPADTI(MOARR)+LCIBUF
  711      FORMAT (//,' ***** MOARR GOES OVER COMTOP',I9,' *****',//)
           CALL MABORT
      END IF
      IMOARR=WPADTI(MOARR)
      LENMO=(LCIBUF-2)/4
      LENMO=LENMO/INTOWP(1)*INTOWP(1)
      IMOBKT=IMOARR+2
      IMOLBL=IMOBKT+LENMO
      MOSRT=MOARR+(2+2*LENMO)/INTOWP(1)
C
      CALL ZERO(RA(MOINT1),IADTWP(COMTOP)-MOINT1+1)
C
C
C     ----- TRANSFORM ONE-ELECTRON INTEGRALS -----
C
      CALL TRN1E(IA(NSOFF),RA(F),RA(UMO),IA(OFFA1),RA(P1),NSO,
     *AMAX,NSYMHF,RA(MOINT1),IA(IOFF),IA(NSOMO),IA(MOOFF),IA(IJGRP),
     *IA(IJADD),IA(KADD),IA(LADD),IA(IMOARR),IA(IMOBKT),IA(IMOLBL),
     *RA(MOSRT),LENMO,IA(BFDRT),IA(ORBSYM),ACRCY,LCIBUF,IA(IFF))
C
      CALL ZERO(RA(MOINT),MOARR-MOINT+1)
C
C     ----- TRANSFORM INTEGRALS OF SYMMETRY [AA;AA] -----
C
      CALL TRNTTT(RA(A),RA(B),RA(C),RA(UMO),IA(IOFF),IA(NSOFF),
     1RA(TTT),NSYMHF,NSO,CMAX,BMAX,AMAX,RA(MOINT),IA(NSOMO),IA(MOOFF),
     2LENGTH,IA(IMOARR),IA(IMOBKT),IA(IMOLBL),RA(MOSRT),IA(BFDRT),
     3IA(ORBSYM),IA(IJGRP),IA(IJADD),IA(KADD),IA(LADD),LENMO,ACRCY,
     4LCIBUF,IA(ITTT),IA(IMOINT))
C
      IF (NSYM0.EQ.1) GOTO 99
C
C     ----- TRANSFORM INTEGRALS OF SYMMETRY [AA;BB] -----
C
      CALL TRNTTS(RA(A),RA(B),RA(C),RA(UMO),IA(IOFF),IA(NSOFF),
     1RA(TTT),NSYMHF,NSO,CMAX,BMAX,AMAX,RA(MOINT),IA(NSOMO),IA(MOOFF),
     2LENGTH,IA(IMOARR),IA(IMOBKT),IA(IMOLBL),RA(MOSRT),IA(BFDRT),
     3IA(ORBSYM),IA(IJGRP),IA(IJADD),IA(KADD),IA(LADD),LENMO,ACRCY,
     4LCIBUF,IA(ITTT),IA(IMOINT))
C
C     ----- TRANSFORM INTEGRALS OF SYMMETRY [AB;AB] -----
C
      CALL TRNSST(RA(A),RA(B),RA(C),RA(UMO),IA(IOFF),IA(NSOFF),
     1RA(TTT),NSYMHF,NSO,CMAX,BMAX,AMAX,RA(MOINT),IA(NSOMO),IA(MOOFF),
     2LENGTH,IA(IMOARR),IA(IMOBKT),IA(IMOLBL),RA(MOSRT),IA(BFDRT),
     3IA(ORBSYM),IA(IJGRP),IA(IJADD),IA(KADD),IA(LADD),LENMO,ACRCY,
     4LCIBUF,IA(ITTT),IA(IMOINT))
C
      IF (NSYM0 .LT. 4) GOTO 99
C
C     ----- TRANSFORM INTEGRALS OF SYMMETRY [AB;CD] -----
C
      CALL TRNSSS(RA(A),RA(B),RA(C),RA(UMO),IA(IOFF),IA(NSOFF),
     1RA(TTT),NSYMHF,NSO,CMAX,BMAX,AMAX,RA(MOINT),IA(NSOMO),IA(MOOFF),
     2LENGTH,IA(IMOARR),IA(IMOBKT),IA(IMOLBL),RA(MOSRT),IA(BFDRT),
     3IA(ORBSYM),IA(IJGRP),IA(IJADD),IA(KADD),IA(LADD),LENMO,ACRCY,
     4LCIBUF,IA(ITTT),IA(IMOINT))
c
C
C     ----- PUT LABEL ON TRANSFORMED INTEGRAL TAPE (TAPE2) -----
C
cets get rid of file95 now to save space
 99   continue
      call rclose(it95,4)
      CALL NCDLBL(IT52,ILBL,LBLDRT,NGROUP,NMAX,NSYM,ACRCY,FZC,REPNRG)
c99   CALL NCDLBL(IT52,ILBL,LBLDRT,NGROUP,NMAX,NSYM,ACRCY,FZC,REPNRG)
      MOARR=UMO
      IMOARR=WPADTI(MOARR)
      IMOBKT=IMOARR+2
      IMOLBL=IMOBKT+LENMO
      MOSRT=MOARR+(2+2*LENMO)/INTOWP(1)
      SRTAR=IADTWP(IMOARR+LCIBUF)
      ISRTAR=WPADTI(SRTAR)
      NBKT=NGROUP
      SPACE=COMTOP-ISRTAR
      BKTSZ=ITRNC(SPACE/NBKT)
      IF (IMOARR+BKTSZ+INTOWP(NMAX) .GT. COMTOP)
     1BKTSZ=IROUND(COMTOP-IMOARR-INTOWP(NMAX))
      IF (BKTSZ .GT. BIGEST) BKTSZ=BIGEST
           WRITE(ICHECK,805) COMTOP,SPACE,SRTAR
      IF (BKTSZ .LT. SEC2I(5)) THEN
           WRITE(IOUT6,712) BKTSZ
CRBR
           WRITE(ICHECK,805) COMTOP,SPACE,SRTAR
 805       FORMAT('  COMTOP =',I10,'   SPACE =',I10,'   SRTAR =',I10,/)
           WRITE(IOUT6,712) BKTSZ
  712      FORMAT (//,' ***** BKTSZ TOO SMALL FOR FINAL SORT',I6,' *****
     *',          //)
           CALL MABORT
      END IF
      RESRT=IADTWP(IMOARR+BKTSZ)
      IRESRT=WPADTI(RESRT)
      IF (IRESRT+INTOWP(NMAX) .GT. COMTOP) THEN
           WRITE(IOUT6,713) IRESRT+INTOWP(NMAX)
  713      FORMAT (//,' ***** IRESRT+INTOWP(NMAX) GOES OVER COMTOP',I9
     #     ,          ' NO ROOM FOR EVEN ONE BLOCK OF INTEGRALS ****',//
     *     )
           CALL MABORT
      END IF
      BKTR=BKTSZ/INTOWP(1)
      IBIG=BKTSZ*NBKT
      IBIGR=IBIG/INTOWP(1)
      IF (ISRTAR+IBIG .GT. COMTOP) THEN
           WRITE(IOUT6,714) ISRTAR+IBIG
  714      FORMAT (//,' ***** SORT ARRAY (ISRTAR) OVER COMTOP',I9,' ****
     **',          //)
           CALL MABORT
      END IF
C
      CALL IZERO(IA(IMOARR),COMTOP-IMOARR+1)
C
C     ----- SORT MO INTEGRALS TO GUGA ORDER -----
C
      CALL CISORT(IA(BKTPNT),IA(START),IA(ILAST),BKTSZ,NBKT,RA(RESRT),
     1IA(INTOFF),IA(IMOARR),IA(IMOBKT),IA(IMOLBL),RA(MOSRT),RA(MOARR),
     2RA(SRTAR),LENMO,BKTR,LCIBUF,IA(ISRTAR),IA(IRESRT))
C
CTJL  CALL SWEOF(IT52)
C
C
CTJL  CALL CPUTIM(SEC)
CTJL  MIN=SEC/60
CTJL  HR=MIN/60
CTJL  SEC=SEC-60*MIN
CTJL  MIN=MIN-60*HR
CTJL  WRITE(IOUT6,715) HR,MIN,SEC
CT715 FORMAT (/,' TOTAL TIME FOR TRANSFORMATION WAS ',I2,':',I2,':',F6.3
CTJL #,       //)
C
      RETURN
      END
