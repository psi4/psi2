      SUBROUTINE CHCKIT(COMTOX,LCIBUX,AMXX,BMXX,CMXX,GFMXX,MOINX,NGROUX,
     1UMX,BIGEST,LENGAO,NSYMHF)
C
C
C
      IMPLICIT INTEGER (A-Z)
C
      COMMON /OUT/    IOUT6,ICHECK,IDBG,ICNT
      COMMON /DIMS/   SYMORB,NUMIJ,NIJ,NBF,NORBS,NMAX,NBFORB,NSYM0
C
C     PRINT,'  IN CHCKIT'
      COMTOP=COMTOX
      LCIBUF=LCIBUX
      AMAX=AMXX
      BMAX=BMXX
      CMAX=CMXX
      GFMAX=GFMXX
      MOINT=MOINX
      NGROUP=NGROUX
      UMO=UMX
C     PRINT,'  COMTOP,  LCIBUF,  AMAX,  BMAX,  CMAX,  MOINT'
C     PRINT,COMTOP,LCIBUF,AMAX,BMAX,CMAX,MOINT
      SPACE=COMTOP-LCIBUF-(AMAX+BMAX+CMAX)*2-MOINT
      IF (SPACE .GT. COMTOP-LCIBUF-(AMAX+NIJ)*2-MOINT)
     1SPACE=COMTOP-LCIBUF-(AMAX+NIJ)*2-MOINT
C     PRINT,'  SPACE=',SPACE
      IF (SPACE .LT. 2240) THEN
           WRITE(IOUT6,701) SPACE
  701      FORMAT (//,' ***** SPACE IS ONLY ',I6,' *****',//)
           CALL MABORT
      END IF
      LENGTH=SPACE/2
C     PRINT,'  LENGTH=',LENGTH,'  GFMAX*2=',GFMAX*2
      IF (LENGTH .GT. BIGEST) LENGTH=BIGEST
      IF (LENGTH .LT. NUMIJ*2) THEN
           WRITE(IOUT6,702) LENGTH
  702      FORMAT (//,' ***** LENGTH IS TOO SMALL FOR ONE-ELECTRON '
     #     ,          'INTEGRALS ',I6,' *****',//)
           CALL MABORT
      END IF
      LENR=LENGTH/2
C     PRINT,'   LENGTH=',LENGTH
      F=MOINT
      P=F+NIJ*2
      H=P+NIJ*2
      S=H+NIJ*2
      U=S+NIJ*2
      NINTS=U+NBF*NBF*2
      SRTAR=NINTS+LENGAO
      SPACE=COMTOP-SRTAR
      NBKT=42
      IF (NSYMHF .LT. 8) NBKT=6
      IF (NBKT .LT. (GFMAX*2/LENGTH)+1) NBKT=(GFMAX*2/LENGTH)+1
      BKTSZ=ITRNC(SPACE/NBKT)
      IF (BKTSZ+MOINT+LENGTH .GT. COMTOP)
     1BKTSZ=ITRNC(COMTOP-LENGTH-MOINT)
C     IF (BKTSZ .GT. (GFMAX*2+111)/112*112) BKTSZ=(GFMAX*2+111)/112*112
      IF (BKTSZ .GT. BIGEST) BKTSZ=BIGEST
      IF (BKTSZ .LT. SEC2I(1)) THEN
           WRITE(IOUT6,703) BKTSZ
  703      FORMAT (//,' ***** BKTSZ IS TOO SMALL ',I6,' *****',//)
           CALL MABORT
      END IF
      RESRT=MOINT+BKTSZ
      IBIG=NBKT*BKTSZ
      IBIGR=IBIG/2
      IF (SRTAR+IBIG .GT. COMTOP) THEN
           WRITE(IOUT6,704) SRTAR+IBIG
  704      FORMAT (//,' ***** SORT ARRAY (SRTAR) GOES OVER COMTOP.',I9
     #     ,          ' *****',//)
           CALL MABORT
      END IF
C FOR 1E INTS
      MOINT1=MOINT
      P1=MOINT1+LENGTH
      F=P1+AMAX*2
C     PRINT,'  MOINT1=',MOINT1,'  P1=',P1,'  F=',F,'  F+NIJ*2=',F+NIJ*2
C  FOR 2E INTS
      C=MOINT+LENGTH
      B=C+CMAX*2
      A=B+BMAX*2
      ITTT=A+AMAX*2
C     PRINT,'  C=',C,'  B=',B,'  A=',A,'  ITTT=',ITTT,'  ITTT+LENGTH=',
C    1 ITTT+LENGTH
      MOARR=MAX((ITTT+LENGTH),(F+NIJ*2))
C     PRINT,'  MOARR=',MOARR
      IF (MOARR+LCIBUF .GT. COMTOP) THEN
           WRITE(IOUT6,705) MOARR+LCIBUF
  705      FORMAT (//,' ***** MOARR GOES OVER COMTOP.',I9,' *****',//)
           CALL MABORT
      END IF
      LENMO=(LCIBUF-2)/4
      MOBKT=MOARR+2
      MOLBL=MOBKT+LENMO
      MOSRT=MOLBL+LENMO
      MOARR=UMO
      MOBKT=MOARR+2
      MOLBL=MOBKT+LENMO
      MOSRT=MOLBL+LENMO
      SRTAR=MOARR+LCIBUF
      NBKT=NGROUP
      SPACE=COMTOP-SRTAR
      BKTSZ=ITRNC(SPACE/NBKT)
      IF (MOARR+BKTSZ+NMAX*2 .GT. COMTOP)
     1BKTSZ=ITRNC(COMTOP-MOARR-INTOWP(NMAX))
      IF (BKTSZ .GT. BIGEST) BKTSZ=BIGEST
      IF (BKTSZ .LT. I2SEC(10)) THEN
           WRITE(IOUT6,706) BKTSZ
  706      FORMAT (//,' ***** BKTSZ TOO SMALL FOR FINAL SORT ',I6,' ****
     **',          //)
           CALL MABORT
      END IF
      RESRT=MOARR+BKTSZ
      IF (RESRT+NMAX*2 .GT. COMTOP) THEN
           WRITE(IOUT6,707) RESRT+NMAX*2
  707      FORMAT (//,' ***** RESRT+NMAX*2 GOES OVER COMTOP ',I9,' NO '
     #     ,          'ROOM FOR EVEN ONE BLOCK OF INTEGRALS',//)
           CALL MABORT
      END IF
      BKTR=BKTSZ/2
      IBIG=BKTSZ*NBKT
      IBIGR=IBIG/2
      IF (SRTAR+IBIG .GT. COMTOP) THEN
           WRITE(IOUT6,704) SRTAR+IBIG
           CALL MABORT
      END IF
      RETURN
      END
