      SUBROUTINE davids(C,S,ROOT,E,A,NDVDMX)
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 Z,C(NWKSMX),S(NWKSMX)
      REAL*8 ROOT(NROOTS),E(NDVDMX,NROOTS),A(LOWTRI)
      INTEGER FWORDC,FWORDS
      LOGICAL CONVGD
C
C
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      COMMON /LBLS/ IDENT(26),LBLDRT(26),CIVER,DRTVER
      COMMON /RSTRT/IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
      COMMON /MATRIX/ CUTOF1,CUTOF2,NMULTP,NMULTD
C
      INTEGER REFWLK,FWORD,OFFSET,FWORD1,FWORD2,BMAX,ORBFRM
      LOGICAL PAGEIN
C
      SMALL=0.0D0
C     WRITE(ITAPE3,701)
C 701 FORMAT (' WHAT DO YOU WANT FOR SMALL?')
C     READ (9,*) SMALL
C
cets110990      CALL ZERO(A,LOWTRI)
C
      NPASS=(NWKS-1)/NWKSMX+1
      NWKMX2=NWKSMX*2
      NWORDL=NWKS2-(NPASS-1)*NWKMX2
cets110990      E(1,NROOTS+1)=1.0D+00
cets110990      SQCDIF=1.0D+00
cets110990      RETURN
C
C------------------------------------------------------DAVIDSON
C
cets110990      ENTRY DAVIDS
C
C  CREATE NEXT ROW OW SMALL MATRIX
C  GET DIAGONAL ELEMENT CONTRIBUTION TO SMALL MATRIX
      EOLD=ECI
      OFFSET=1
      NWORD=NWKMX2
C
C     ----- NOW CORRECT FOR NON-ORTHOGONALITY OF TRIAL VECTOR -----
C
      OFFSET=NWKS2*(NDVDIT-1)+1
      FWORD1=1
C
      MAXVEC=NDVDIT-1
      DO 95 IVECNO=1,MAXVEC
         NWORD=NWKMX2
         FWORD=FWORD1
         FWORD2=OFFSET
         Z=0.0D+00
         DO 80 K=1,NPASS
            IF (K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/INTOWP(1)
            CALL WREADW(ITAP99,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP99,C,NWORD,FWORD2,FWORD2)
            Z=Z-DOT(S,C,NLOOP)
   80    CONTINUE
C        WRITE (ITAPE6,81) Z
   81    FORMAT (' Z=',F15.10)
C
C        ----- CORRECT TRIAL VECTOR FOR NON-ORTHOGONALITY -----
C
         NWORD=NWKMX2
         FWORD=FWORD1
         FWORD2=OFFSET
         ZNORM=0.0D+00
         DO 83 K=1,NPASS
            IF (K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/INTOWP(1)
            CALL WREADW(ITAP99,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP99,C,NWORD,FWORD2,JUNK)
            CALL VEWPSX(C,C,S,Z,NLOOP)
            IF (IVECNO.EQ.MAXVEC) ZNORM=ZNORM+DOT(C,C,NLOOP)
            CALL WWRITW(ITAP99,C,NWORD,FWORD2,FWORD2)
   83    CONTINUE
C
C        ----- CORRECT PRODUCT VECTOR SIMILARLY -----
C
         NWORD=NWKMX2
         FWORD=FWORD1+NWKS2
         FWORD2=OFFSET+NWKS2
         DO 85 K=1,NPASS
            IF (K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/INTOWP(1)
            CALL WREADW(ITAP94,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP94,C,NWORD,FWORD2,JUNK)
            CALL VEWPSX(C,C,S,Z,NLOOP)
            CALL WWRITW(ITAP94,C,NWORD,FWORD2,FWORD2)
   85    CONTINUE
C
         FWORD1=FWORD1+NWKS2
   95 CONTINUE
C
C     ------ NOW CORRECT VECTORS FOR NORMALIZATION -----
C
      IF (NDVDIT.LE.1) GO TO 99
      OFFSET=NWKS2*(NDVDIT-1)+1
      FWORDC=OFFSET
      FWORDS=OFFSET+NWKS2
C     WRITE (ITAPE6,98) ZNORM
   98 FORMAT(' NORM OF ORTHOGONALIZED TRIAL VECTOR IS:',F18.12)
      IF (ZNORM.EQ.0.0D+00) THEN
           WRITE(ITAPE6,*) ' INITDV: ZERO NORM'
           CALL MABORT
      END IF
      ZNORM=1.0D+00/DSQRT(ZNORM)
      NWORD=NWKMX2
      DO 97 IPASS=1,NPASS
         IF (IPASS.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/INTOWP(1)
         CALL WREADW(ITAP99,C,NWORD,FWORDC,JUNK)
         CALL WREADW(ITAP94,S,NWORD,FWORDS,JUNK)
         DO 96 I=1,NLOOP
            C(I)=C(I)*ZNORM
            S(I)=S(I)*ZNORM
   96    CONTINUE
         CALL WWRITW(ITAP99,C,NWORD,FWORDC,FWORDC)
         CALL WWRITW(ITAP94,S,NWORD,FWORDS,FWORDS)
   97 CONTINUE
   99 CONTINUE
C
C
      OFFSET=1
      NWORD=NWKMX2
      DO 140 K=1,NPASS
         IF(K.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/2
         FWORD=OFFSET
         CALL WREADW(ITAP94,S,NWORD,FWORD,LWORD)
         FWORD=NWKS2*(NDVDIT-1)+OFFSET
         CALL WREADW(ITAP99,C,NWORD,FWORD,LWORD)
         DO 100 J=1,NLOOP
  100    S(J)=S(J)*C(J)
C   ADD TO MOST CURRENT SIGMA TO FORM FULL PRODUCT
         FWORD=NWKS2*NDVDIT+OFFSET
         CALL WREADW(ITAP94,C,NWORD,FWORD,LWORD)
         DO 110  J=1,NLOOP
  110    S(J)=S(J)+C(J)
C
C   FORM SUPPLEMENTS TO C(I).H.C(J)
C
         FWORD=OFFSET
         KSIZE=(NDVDIT-1)*NDVDIT/2
         DO 130 I=1,NDVDIT
            CALL WREADW(ITAP99,C,NWORD,FWORD,LWORD)
            FWORD=FWORD+NWKS2
            Z=0.0D+00
            KSIZE=KSIZE+1
            Z=Z+DOT(C,S,NLOOP)
  130    A(KSIZE)=Z+A(KSIZE)
         OFFSET=OFFSET+NWORD
  140 CONTINUE
C
C   FIND ENERGY AT THIS ITERATION FROM SMALL MATRIX
C
      IF (NDVDIT.LE.1) GO TO 180
C
      KSIZE=0
      DO 150 I=1,NDVDIT
         DO 150 J=1,I
            KSIZE=KSIZE+1
  150 C(KSIZE)=A(KSIZE)
      NX=NDVDIT
C
C     PRINT *,' CALLING GIVENS'
      CALL GIVENS(NX,NROOTS,NDVDMX,C,C(KSIZE+1),ROOT,E)
C     PRINT *,' AFTER GIVENS'
C
      Z=0.0D+00
      DO 160 I=1,NDVDIT
         Z=Z+E(I,NROOT)*E(I,NROOTS+1)
  160 E(I,NROOTS+1)=E(I,NROOT)
      SQCDIF=ABS(1.0D+00-ABS(Z))
      ECI=ROOT(NROOT)+FZCORE+REP
      DELTA=ECI-EOLD
C     WRITE(9     ,170)NROOT,ITER,ECI,DELTA,SQCDIF
      WRITE(ITAPE6,170)NROOT,ITER,ECI,DELTA,SQCDIF
      call fioflu(6)
  170 FORMAT(1X,'ROOT',I3,' ITER',I3,' ENERGY',G17.8 ,'DELTA ',E9.3
     *,' SQCDIF ',E9.3)
C****
      GO TO 190
  180 E(1,1)=1.0D+00
      ROOT(1)=A(1)
C
C   CREATE NEW CORRECTION VECTOR
C
  190 CONTINUE
C     PRINT *,'  PASSED 190'
      CONVGD=SQCDIF.LT.CNVERG
      CALL VECOUT(C,S,E,NDVDMX,CONVGD)
C
CWA INTERCHANGE THE COMMENTING OF THESE 2 LINES TO DEACTIVATE
CWA THE CALCULATION OF MULTIPLE ROOTS.
      IF(SQCDIF.GT.CNVERG) GO TO 200
CWA   GO TO 200
 7878 CONTINUE
      ICNVG=0
      IF(NROOT.EQ.IROOTF) RETURN
      NROOT=NROOT+1
      DO 195 I=1,NDVDIT
  195 E(I,NROOTS+1)=E(I,NROOT)
      ICNVG=-1
  200 NWORD=NWKMX2
C
      RENORM=0.0D+00
      ROOTN=ROOT(NROOT)
      OFFSET=1
      DO 260 K=1,NPASS
         IF(K.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/2
         DO 210 J=1,NWKSMX
  210    C(J)=0.0D+00
C
C   BEGIN WITH WEIGHTED SUM OF SUCCESIVE CORRECTION VECTORS
C
         FWORD=OFFSET
         DO 221 J=1,NDVDIT
            FWORD=FWORD+NWKS2
            EJ=E(J,NROOT)
            CALL WREADW(ITAP94,S,NWORD,FWORD,LWORD)
            DO 220 I=1,NLOOP
               C(I)=C(I)+EJ*S(I)
  220       CONTINUE
  221    CONTINUE
C
C   GET DIAGONAL ELEMENTS FOR PERTURBATION DENOMINATORS
C
         FWORD=OFFSET
         CALL WREADW(ITAP94,S,NWORD,FWORD,LWORD)
         DO 230 I=1,NLOOP
            DEL=ROOTN-S(I)
C     DEL=EDAV-S(I)
            IF(DEL.NE.0.0D+00)C(I)=C(I)/DEL
  230    IF(DEL.EQ.0.0D+00)C(I)=0.0D+00
C
C   SUBTRACT SUCCESIVE PRODUCTS WEIGHTED BY SMALL EIGENVALUES
C
         FWORD=OFFSET
         DO 240 J=1,NDVDIT
            CALL WREADW(ITAP99,S,NWORD,FWORD,LWORD)
            FWORD=FWORD+NWKS2
            EJ=E(J,NROOT)
            DO 239 I=1,NLOOP
               C(I)=C(I)-EJ*S(I)
  239       CONTINUE
  240    CONTINUE
C
         DO 250 I=1,NLOOP
  250    RENORM=RENORM+C(I)*C(I)
         CALL WWRITW(ITAP99,C,NWORD,FWORD,LWORD)
         OFFSET=OFFSET+NWORD
  260 CONTINUE
C
CWA  UNCOMMENT THE FOLLOWING LINE TO DEACTIVATE CALCULATION OF
CWA  MULTIPLE ROOTS.
CWA   IF (SQCDIF.LT.CNVERG) GO TO 7878
C
C   ORTHONORMALIZE CORRECTION VECTOR TO PAST ITERATIONS
C
      OFFSET=NWKS2*NDVDIT+1
      FWORD1=1
      DO 330 J=1,NDVDIT
         NWORD=NWKMX2
         FWORD=FWORD1
         FWORD2=OFFSET
         Z=0.0D+00
         DO 300 K=1,NPASS
            IF(K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/2
            CALL WREADW(ITAP99,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP99,C,NWORD,FWORD2,FWORD2)
            Z=Z+DOT(C,S,NLOOP)
  300    CONTINUE
         RENORM=1.0D+00/DSQRT(RENORM-Z*Z)
         FWORD=FWORD1
         FWORD2=OFFSET
         NWORD=NWKMX2
         DO 320 K=1,NPASS
            IF(K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/2
            CALL WREADW(ITAP99,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP99,C,NWORD,FWORD2,LWORD)
            DO 310 I=1,NLOOP
  310       C(I)=(C(I)-Z*S(I))*RENORM
            CALL WWRITW(ITAP99,C,NWORD,FWORD2,FWORD2)
  320    CONTINUE
         RENORM=1.0D+00
         FWORD1=FWORD1+NWKS2
  330 CONTINUE
C--------------------
 9550 CONTINUE
C
 1235 CONTINUE
C
C     ----- NOW GO THROUGH NEW TRIAL VECTOR AND ZERO ELEMENTS -----
C
      Z=1.0D+00/DSQRT(RENORM)
      FWORD=NWKS2*NDVDIT+1
      NWORD=NWKMX2
      ICOUNT=0
C     SMALL=0.00D+00
C--------------------
      OFFSET=1
C--------------------
      DO 510 IPASS=1,NPASS
         IF (IPASS.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/INTOWP(1)
         CALL WREADW(ITAP99,C,NWORD,FWORD,JUNK)
         DO 500 I=1,NLOOP
            IF (ABS(C(I)).LT.SMALL) THEN
               C(I)=0.0D+00
            ELSE
               ICOUNT=ICOUNT+1
            END IF
  500    CONTINUE
         CALL WWRITW(ITAP99,C,NWORD,FWORD,FWORD)
  510 CONTINUE
C
      PERCNT=(ICOUNT*100.0D+00)/NWKS
C     WRITE(ITAPE3,520) ICOUNT,PERCNT
  520 FORMAT (' USING ',I8,' ELEMENTS OF TRIAL VECTOR:',F7.2,'%')
C
      IWORD3=NWKS2*NDVDIT+1
      IWORD4=IWORD3+NWKS2
      IWORD6=IWORD4
      NDVDIT=NDVDIT+1
C     CALL ORTHOG(S,C,E,NDVDIT,RENORM)
C
C   ZERO DISC STORAGE FOR NEXT SIGMA AND VECTOR
C+++
      CALL ZERO(S,NWKSMX)
C
      IF(IRSTRT.EQ.0) RETURN
      CALL SREW(ITAP95)
      IWORD6=1
      IBLOCK=1
      INXT=1
      WRITE(ITAP95)NDVDIT,ITER+1,NROOT
      WRITE(ITAP95) A
      WRITE(ITAP95) IBLOCK,INXT
      NWORD=NWKMX2
      FWORD=1
      DO 350 I=1,NPASS
         IF(I.EQ.NPASS) NWORD=NWORDL
         CALL WWRITW(ITAP96,S,NWORD,FWORD,FWORD)
  350 CONTINUE
      call fioflu(6)
      RETURN
      END
