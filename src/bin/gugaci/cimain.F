      SUBROUTINE CIMAIN(IA,Z,MAXI)
C***********************************************************************
C       PROGRAM OPTIONS
C
C       1.  IGUESS=0,UNIT VECTOR BASED ON LOWEST DIAGONAL ELEMENT
C                 >0,READ IGUESS VECTORS FROM FILE 12 TO START.
C       2.  MXITER=MAXIMUM ITERATIONS PER ROOT SOUGHT(10 WITH 2 ROOTS
C                  GIVES 20 TOTAL).
C       3.  IROOTI=FIRST ROOT SOUGHT, DEFAULTS TO 1 WITHOUT STARTING
C                  VECTORS FOR LOWER ROOTS.
C       4.  NROOTS=NUMBER OF TOTAL ROOTS TO BE SOUGHT.
C
C       5.  NTOL  =CONVERGENCE CRITERION ON VECTOR=10**(-NTOL).
C
C       6.  RSTRT =RESTART OPTION,-1=FIRST ITERATION,SAVE RESTART DATA
C                                    ON FILE 105, 106 FOR SCRATCH.
C                                  0=NO RESTART TO BE ATTEMPTED.
C                                  1=ATTEMPTING RESTART FROM PRIOR RUN
C                                    REQUIRES FILE 105 FROM LAST RUN.
C
C       7.  I34X = 0 IF USE 3 & 4 EXTERNAL VECTORISED ROUTINES
C
C       8.  ILVFRM= VALUE TO SET LEVFRM TO IF NON-ZERO
C
C       9.  IPRINT= 0 FOR MINIMUM OUTPUT, = 1 AND HIGHER FOR MORE DATA
C
C***********************************************************************
C     FILE ASSIGNMENTS
C
C         5=INPUT FILE, SINGLE CARD I5 FORMAT
C         6=OUTPUT FILE
C        52=TRANSFORMED INTEGRALS
C        54=FINAL VECTOR(S),112 WORD LABEL + NUMBER OF WALKS LONG
C        58=DISTINCT ROW TABLE, A FEW 10,000 LONG AT MOST.
C        94=STORAGE FOR TRIAL VECTORS,(# WALKS)*(# ITERATIONS + 1) LONG.
C        95=STORAGE FOR RESTART INFORMATION,ONLY IF IRSTRT.NE.0.
C        96=SCRATCH FOR INTERMEDIATE PRODUCTS, ONLY IF IRSTRT.NE.0.,
C           NUMBER OF WALKS LONG.
C        99=STORAGE FOR PRODUCTS,(# WALKS)*(# ITERATIONS + 1) LONG.
C
C***********************************************************************
      IMPLICIT INTEGER (A-Z)
      INTEGER IVER(1)
      LOGICAL PAGEIN
      REAL*8 Z,X,REP,FZCORE,EGUESS,ECI,CNVERG,ACRCY,SQCDIF
      real*8 sqrt2,sqrt3,sqt1p5,asqrt2,hsqrt3
      REAL*8 CZERO,DRTVER,CIVER
      REAL*8 TIME
      CHARACTER*2 ENTRY(20)
cets030291
#include <error.h>
      integer frdi, frdboo, errcod
C
      INTEGER NR3,NR6,NW6
C10-13-90 COMMON /STATPG/ IR3(100),NR3(100),IR6(100),NR6(100),IW6(100)
C10-13-90             NW6(100),IPGS(100),IPGD(100),IPGO(100),IPGIJ(100)
C10-13-90             IPGOUT(100)
      COMMON /STATPG/ IR3(200),NR3(200),IR6(200),NR6(200),IW6(200)
     #,               NW6(200),IPGS(200),IPGD(200),IPGO(200),IPGIJ(200)
     #,               IPGOUT(200)
C     COMMON /LEVEL/  ILEV
C
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF,I34X
      COMMON /ALL/  X(3),ARR,IX(6),LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
      COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
     #,             NUMSYM(8)
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      COMMON /LBLS/ LBLINT(26),LBLDRT(26),CIVER,DRTVER
      COMMON /RSTRT/IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
      COMMON /COUNT/  ICOUNT,IXX4,IXX5,IXX6,IXX8,IWW4,IWW5,IWW6,IWW8
     #,               IWX7,IXW9,IXY3,IXY16,IXY18,IXY22,IWY2,IWY15,IWY17
     #,               IWY21,IYX20,IYW19
      COMMON /COUNT2/ IENTRY(20),TIME(20)
C*
      COMMON /XX4X/   NIJVIR,NREFS
      common /sqrts/ sqrt2,sqrt3,sqt1p5,asqrt2,hsqrt3
C
      DIMENSION IA(MAXI),Z(1)
      DIMENSION ILBM(26),ILBN(26)
C
      EQUIVALENCE (DRTVER,IVER)
C
      DATA ENTRY /'WW','XX','YY','XW','WX','WY','YX','YW','XY','ZY'
     #,           'WZ','XZ','YZ','4X','4X','4X','ZZ','4I','I1','20'/
C
cets111090
      sqrt2=dsqrt(2.0d+00)
      sqrt3=dsqrt(3.0d+00)
      sqt1p5=dsqrt(1.5d+00)
      asqrt2=1.0d+00/sqrt2
      hsqrt3=0.5d+00*sqrt3
cets111090

      ITAPE3=3
      ITAPE5=5
      ITAPE6=6
      ITAP52=52
      ITAP54=54
      ITAP58=58
      ITAP94=94
      ITAP95=95
      ITAP96=94
      ITAP99=99
C
      DO 2 I=1,20
         IENTRY(I)=0
         TIME(I)=0.0D+00
    2 CONTINUE
CTJL  OPEN (UNIT=ITAPE6,OPENMODE='A')
      ICOUNT=0
      ICNTD=0
      MAXR=MAXI/INTOWP(1)
C
      CALL IZERO(IA,MAXI)
C
      CIVER=2.260582
      WRITE(ITAPE6,1)
    1 FORMAT(1H )
    4 FORMAT(/,/,/,12X,' >>>>>  GUGA-CI CALCULATION COMPLETED  <<<<< ')
CCRBR WRITE(ITAPE6,5)
    5 FORMAT(/,1H ,8('**********')/)
      WRITE(ITAPE6,10)
   10 FORMAT(1H ,12X,'SHAPE DRIVEN GRAPHICAL UNITARY GROUP CI PROGRAM')
      WRITE(ITAPE6,11)
   11 FORMAT(1H ,12X,'************ MATRIX REFORMULATION *************')
      WRITE(ITAPE6,12)
   12 FORMAT(1H ,25X,'WRITTEN BY PAUL SAXE')
      WRITE(ITAPE6,13)
   13 FORMAT(1H ,14X,'BASED ON ORIGINAL SDGUGA PROGRAM WRITTEN BY')
      WRITE(ITAPE6,14)
   14 FORMAT(1H ,15X,'PAUL SAXE, DOUGLAS J. FOX AND N. C. HANDY',//,
     1 4X,' XX-4X, WW-4X, WW, XX, WX, XW, WY, YW, XY, YX ENTRIES',
     2 ' VECTORIZED')
CCRBR WRITE(ITAPE6,5)
      WRITE(ITAPE6,15) MAXR
   15 FORMAT(/,/,1H ,'DIMENSION OF REAL COMMON IS',I10,/)
C
C     -----READ IN OPTIONS FOR THIS RUN -----
C
      IGUESS=0
      IPRINT=0
      MXITER=0
      IROOTI=0
      NROOTS=0
      NTOL=0
      IRSTRT=0
      I34X=0
      ILVFRM=0
      CALL LOCATE(ITAPE5,'# CI #####',IERROR)
C
      IF (IERROR.NE.0) THEN
cets030291         WRITE(ITAPE6,700)
c  700    FORMAT (' # CI ##### WARNING: NO INPUT FOUND, USING DEFAULTS')
cets use new input

        errcod = frdi('NUMVECTORS',iguess)

        errcod = frdi('MAXITER',mxiter)

        errcod = frdi('ROOT1',irooti)

        errcod = frdi('NUMROOTS',nroots)

        errcod = frdi('CONVERGENCE',ntol)

        errcod = frdi('FERMILVL',ilvfrm)

        errcod = frdi('IPRINT',iprint)

        nexc = 2
        errcod = frdi('EX_LVL',nexc)
        if(nexc.gt.2) i34x=3

        errcod = frdboo('LOOPDRVN',i34x)
        if(i34x.ne.0) i34x=3

      ELSE
         READ(ITAPE5,16) IGUESS,MXITER,IROOTI,NROOTS,NTOL,IRSTRT
     #   ,                  I34X,ILVFRM,IPRINT
      END IF
   16 FORMAT(10I5)
      IF(NTOL.LE.0) NTOL=10
      CNVERG=10.0D+00**(-NTOL)
      IF(NROOTS.EQ.0) NROOTS=1
      IF(MXITER.EQ.0) MXITER=16
      MXITER=MXITER*NROOTS
      NDVDMX=MXITER+IGUESS+1
      IF(IROOTI.EQ.0) IROOTI=1
      IF(IROOTF.EQ.0) IROOTF=IROOTI+NROOTS-1
      WRITE(ITAPE6,17) IGUESS,MXITER,IROOTI,NROOTS,NTOL,IRSTRT,
     #I34X,ILVFRM,IPRINT
   17 FORMAT(1H ,'OPTIONS: GUESS  MXITER  ROOTI  NROOT  NTOL'
     *,  '   RSTRT  I34X  ILVFRM  PRINT ',/,7X,9I7,/)
C
cets110990
      if(irstrt.ne.0) then
         write(6,*) '!!!! restarts are no longer allowed !!!!!'
         irstrt = 0
      endif
      if(i34x.ne.0.and.i34x.lt.3) then
         write(6,*) '***********!!!!!! WARNING !!!!!!!!!!!!!********'
         write(6,*) ' '
         write(6,*) '   It is not quite understood what i34x = ',i34x
         write(6,*) '      does.  Your answer may be meaningless!'
         write(6,*) ' '
         write(6,*) '***********!!!!!! WARNING !!!!!!!!!!!!!********'
      endif

cets110990
C     ----- READ IN HEADER INFORMATION FROM DRTTAPE -----
C
      WRITE(ITAPE3,20)
   20 FORMAT(1H ,'READ IN DISTINCT ROW TABLE')
      CALL RFILE(ITAP58)
      CALL WREADW(ITAP58,IVER,INTOWP(1),1,END)
      CALL WREADW(ITAP58,LBLDRT,26,END,END)
      CALL WREADW(ITAP58,NBF,1,END,END)
      CALL WREADW(ITAP58,NSYM,1,END,END)
      CALL WREADW(ITAP58,NORBS,1,END,END)
      CALL WREADW(ITAP58,NROWS,1,END,END)
      CALL WREADW(ITAP58,NROWS4,1,END,END)
      CALL WREADW(ITAP58,NLEVS,1,END,END)
      CALL WREADW(ITAP58,NREFS,1,END,END)
      CALL WREADW(ITAP58,NROWOC,1,END,END)
      END=END+1
      CALL WREADW(ITAP58,NWKS,1,END,END)
      END=END+2
      CALL WREADW(ITAP58,ORBFRM,1,END,END)
      CALL WREADW(ITAP58,SYMORB,1,END,END)
      CALL WREADW(ITAP58,NUMIJ,1,END,END)
      CALL WREADW(ITAP58,NGROUP,1,END,END)
      END=END+1
      CALL WREADW(ITAP58,NMAX,1,END,END)
      CALL WREADW(ITAP58,BMAX,1,END,END)
      CALL WREADW(ITAP58,NIJVIR,1,END,END)
      END=END+1
C
      NMAX2=NMAX+NMAX
      NWKS2=NWKS+NWKS
      LVFRM1=ORBFRM
      LEVFRM=LVFRM1+1
C
      IF (ILVFRM.NE.0) LEVFRM=ILVFRM
C
      IF(IRSTRT.GT.0) GO TO 30
      NSECT=I2SEC(112)+I2SEC(INTOWP(NWKS)*(MXITER+1)*(IROOTF-
     #IROOTI+1))
C
      WRITE(ITAPE3,21)NSECT
   21 FORMAT(1X,I6,' SECTORS OF SCRATCH FILES WILL BE ZEROED.')
C
C  WFILE IS A SPECIAL OPEN FOR RANDOM FILES, THE ENTIRE LENGTH OF THE
C  FILE IS WRITTEN TO ZERO. NSECT IS THE LENGTH IN 1024 WORD SECTORS.
C******** WFILE NOW ONLY ZEROS OUT THE SPECIFIED SECTORS ----- TJL
C10-13-90   WFILE REWRITTEN AND RENAMED WFILE0    RBR 10/13/90
      CALL RFILE(ITAP99)
      CALL RFILE(ITAP94)
C10-13-90 CALL WFILE(ITAP99,NSECT,IA,MAXI-10)
C10-13-90 CALL WFILE(ITAP94,NSECT,IA,MAXI-10)
      CALL WFILE0(ITAP99,NSECT,IA,MAXI-10)
      CALL WFILE0(ITAP94,NSECT,IA,MAXI-10)
C**** TJL
CTJL  DO 765 I=1,SEC2I(500/INTOWP(1))
CTJL5 Z(I)=0.0D+00
CTJL  DO 766 I=1,NSECT/500
C 766 CALL SWRIT(ITAP99,Z,SEC2I(500))
      N=SEC2I(NSECT-((NSECT/500)*500))
CTJL  IF (N.GT.0) CALL SWRIT(ITAP99,Z,N)
CTJL  DO 767 I=1,NSECT/500
C 767 CALL SWRIT(ITAP94,Z,SEC2I(500))
CTJL  IF (N.GT.0) CALL SWRIT(ITAP94,Z,N)
C
C
   30 WRITE(ITAPE6,31)LBLDRT
   31 FORMAT(/,1H ,'LABEL FROM DRT :       ',26A3)
      WRITE(ITAPE6,32)NWKS
   32 FORMAT(1H ,'NUMBER OF CONFIGURATIONS     = ',I10)
      WRITE(ITAPE6,33)NBF
   33 FORMAT(1H ,'NUMBER OF BASIS FUNCTIONS    = ',I10)
      WRITE(ITAPE6,34) NORBS
   34 FORMAT(1H ,'NUMBER OF ALLOWED ORBITALS   = ',I10)
      WRITE(ITAPE6,35)LVFRM1
   35 FORMAT(1H ,'FERMI LEVEL IS ',I5 )
C
C     ----- OPEN MO INTEGRAL TAPE -----
C
      CALL RFILE(ITAP52)
      CALL GETINT(ACRCY,ILBM,ILBN)
C
C     CALCULATE POINTERS INTO BLANK COMMON
C
      ARC=1
C*    WEIGHT=ARC+NROWS4
      IJXX=ARC+NROWS4
      KLXX=IJXX+NUMIJ
      NKLXX=KLXX+NIJVIR
      IJWW=NKLXX+NSYM*ORBFRM
      KLWW=IJWW+NUMIJ
      NKLWW=KLWW+NIJVIR
      IST4X=NKLWW+NSYM*ORBFRM
      LEN4X=IST4X+NORBS
      WEIGHT=LEN4X+NORBS
C*
      WTW=WEIGHT+NROWS4
      WTX=WTW+NSYM*LVFRM1
      WTY=WTX+NSYM*LVFRM1
      WAB=WTY+LVFRM1
      NLWKS=WAB+LVFRM1
      AVAL=NLWKS+NROWS
      BVAL=AVAL+NROWS
      ROWSYM=BVAL+NROWS
      IJADD=ROWSYM+NROWS
      IJGRP=IJADD+NUMIJ
      KADD=IJGRP+NUMIJ
      LADD=KADD+SYMORB
      JMXNXT=LADD+SYMORB
      JMNNXT=JMXNXT+NORBS
      ININT=JMNNXT+NORBS
      INEXT=ININT+NORBS
      NINGRP=INEXT+NORBS
      IMNGRP=NINGRP+NGROUP
      IMXGRP=IMNGRP+NGROUP
      JMNGRP=IMXGRP+NGROUP
      JMXGRP=JMNGRP+NGROUP
      ORBSYM=JMXGRP+NGROUP
      ISEGM=ORBSYM+NORBS
      JSEGM=ISEGM+NLEVS
      IMAIN=JSEGM+NLEVS
      ISUB=IMAIN+NLEVS
      IUWKMN=ISUB+NLEVS
      IUWKSB=IUWKMN+NLEVS
      ITRACK=IUWKSB+NLEVS
      LMIN=ITRACK+NLEVS
      HDWGT=LMIN+NLEVS
      HDSEG=HDWGT+NLEVS
      HDPNT=HDSEG+NLEVS
      ACOEF=IADTWP(HDPNT+NLEVS)
      BCOEF=ACOEF+NLEVS
      ROOT=BCOEF+NLEVS
      DVDVEC=ROOT+NROOTS
      DVDMAT=DVDVEC+(NROOTS+1)*NDVDMX
      LOWTRI=NDVDMX*(NDVDMX+1)/2
      LENI=WPADTI(DVDMAT+LOWTRI)
      WRITE(ITAPE6,41) LENI
   41 FORMAT(1H ,'LENGTH OF INTEGER COMMON     =',I10,/)
      IF(LENI.GT.MAXI) GO TO 930
      IF(IPRINT.GT.1) WRITE(ITAPE6,42)
   42 FORMAT(1H ,'READ DRT FILE')
      CALL GETDRT(IA(ISEGM),IA(AVAL),IA(BVAL)
     #,        IA(ROWSYM),IA(ARC),IA(NLWKS)
     #,        IA(WEIGHT),IA(WAB),IA(WTW),IA(WTX),IA(WTY)
     #,                   IA(KADD),IA(LADD),IA(IJADD),IA(IJGRP)
     #,        IA(ININT),IA(INEXT),IA(JMNNXT),IA(JMXNXT),IA(NINGRP)
     #,        IA(ORBSYM),IA(IMNGRP),IA(IMXGRP),IA(JMNGRP),IA(JMXGRP)
     #,        IA(IJXX),IA(KLXX),IA(NKLXX),IA(IJWW),IA(KLWW),IA(NKLWW)
     #,        END)
      NWKSMX=NWKS
      LN=0
      DO 43 I=1,NSYM
         IF (MINSYM(I).GE.1000) NUMSYM(I)=0
         IF (MINSYM(I).LT.1000) NUMSYM(I)=MAXSYM(I)-MINSYM(I)+1
         IF (NUMSYM(I).GT.LN) LN=NUMSYM(I)
   43 CONTINUE
      LNSQ=LN**2
      INTS=IADTWP(LENI)
      IINTS=WPADTI(INTS)
C
cets110990      CALL INBLK(Z(INTS),NMAX)
      CALL NXTBLK(z(ints),nmax)
C
      CI=INTS+NMAX
      SI=CI+LNSQ
      CJ=SI+LNSQ
      SJ=CJ+LNSQ
      H1=SJ+LNSQ
      H2=H1+LNSQ
      SIGMA=H2+LNSQ
      VECTOR=SIGMA+NWKS
      LENR=VECTOR+NWKS
C
      WRITE (ITAPE6,701) LENR,MAXR
  701 FORMAT (/,' NEED',I10,' REAL WORDS OF CORE TO AVOID'
     #,     ' PAGING',/,' HAVE',I10,' REAL WORDS',/)
C
      IF(LENR.LT.MAXR) GO TO 50
      WRITE(ITAPE6,45)
   45 FORMAT(1H ,'INSUFFICIENT CORE TO HOLD ALL VECTORS. PAGING WILL'
     *,' BE TRIED,')
      NWKSMX=(MAXR-SIGMA)/2
      IF(2*NLWKMX.GT.NWKSMX) GO TO 940
      WRITE(ITAPE6,46) NWKSMX
  46  FORMAT(1X,I8,' ELEMENTS OF THE VECTOR CAN BE HELD AT ONCE.')
      VECTOR=SIGMA+NWKSMX
      LENR=VECTOR+NWKSMX
      WRITE (ITAPE6,49) LENR
  49  FORMAT (1X,' AMOUNT OF REAL CORE USED:',I8)
  50  CONTINUE
      call fioflu(6)
      CALL INITPG(Z(VECTOR),Z(SIGMA))
      CALL INITDV(Z(VECTOR),Z(SIGMA), Z(ROOT), Z(DVDVEC), Z(DVDMAT)
     *,           NDVDMX)
cets110990      CALL INITLP
      CALL INITDG(Z(INTS),Z(SIGMA),IA(IJADD),IA(KADD),IA(LADD)
     *,           IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM))
cets110990      CALL INITEX(Z(INTS),Z(VECTOR),Z(SIGMA),IA(IJADD),IA(KADD)
cets110990     *,           IA(LADD),IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM))
      CALL INITX2(Z(INTS),Z(VECTOR),Z(SIGMA),IA(IJADD),IA(KADD)
     *,           IA(LADD),IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM))
cets110990      CALL INITST(Z(INTS),Z(VECTOR),Z(SIGMA),IA(IJADD),IA(KADD)
cets110990     *,           IA(LADD),IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM)
cets110990     *,           Z(CI),Z(SI),Z(CJ),Z(SJ),Z(H1),Z(H2)
cets110990     #,           IA(IJXX),IA(NKLXX),IA(IJWW),IA(NKLWW)
cets110990     #,           IA(KLXX),IA(KLWW))
cets110990      CALL INIMAT(Z(INTS),IA(IJADD),IA(KADD),IA(LADD),Z(H1),Z(H2))
cets110990      CALL INIT4X(Z(INTS),Z(VECTOR),Z(SIGMA),IA(IJADD),IA(KADD)
cets110990     *,           IA(LADD),IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM))
      CALL START(Z(DVDMAT),Z(INTS),Z(SIGMA),Z(VECTOR),z(root),z(dvdvec)
     1, ndvdmx)
      IF(IRSTRT.LE.0 .AND. IPRINT.GT.0) WRITE(ITAPE6,70)
      call fioflu(6)
   70 FORMAT(/,1H ,'CALCULATE DIAGONAL ELEMENTS')
      CALL LOOPYD(IA(BVAL),IA(NLWKS),IA(WEIGHT),IA(AVAL),IA(IJADD)
     1,  ia(ijGRP),IA(KADD),IA(LADD),IA(INEXT),IA(ARC),IA(JMNNXT)
     2,  IA(JMXNXT),IA(ROWSYM),IA(ORBSYM),IA(ISEGM),ia(jsegm)
     3,  IA(IMAIN),IA(ISUB),IA(IUWKMN),IA(IUWKSB),ia(itrack),ia(lmin)
     4,  Z(ACOEF),Z(BCOEF),IA(HDWGT),IA(HDSEG),IA(HDPNT),IA(IMXGRP)
     5,  IA(IMNGRP),IA(JMXGRP),IA(JMNGRP)
     6,  z(ints),z(sigma),ia(wtw),ia(wtx),ia(wty),ia(wab),z(vector)
     7,  Z(CI),Z(SI),Z(CJ),Z(SJ),Z(H1),Z(H2),IA(IJXX),IA(NKLXX)
     8,  ia(ijww),IA(NKLWW),ia(klxx),ia(klww))
      WRITE(ITAPE6,5)
      call fioflu(6)
      CALL FDIAG(Z(INTS),Z(VECTOR),Z(SIGMA),Z(DVDMAT)
     1,  IA(BVAL),IA(NLWKS),IA(WEIGHT),IA(AVAL),IA(IJADD),IA(IJGRP)
     2,  IA(KADD),IA(LADD),IA(INEXT),IA(ARC),IA(JMNNXT),IA(JMXNXT)
     3,  IA(ROWSYM),IA(ORBSYM),IA(ISEGM),IA(JSEGM),IA(IMAIN),IA(ISUB)
     4,  IA(IUWKMN),IA(IUWKSB),IA(ITRACK),IA(LMIN), Z(ACOEF)
     5,  Z(BCOEF),IA(HDWGT),IA(HDSEG),IA(HDPNT),IA(IMXGRP),IA(IMNGRP)
     6,  IA(JMXGRP),IA(JMNGRP),ia(wtw),ia(wtx),ia(wty),ia(wab)
     7,  z(dvdvec),ndvdmx,z(root),Z(CI),Z(SI),Z(CJ),Z(SJ),Z(H1),Z(H2)
     8,  IA(IJXX),IA(NKLXX),ia(ijww),IA(NKLWW),ia(klxx),ia(klww))
      IF(ITER.EQ.0)WRITE(ITAPE6,5)
      IF(ITER.EQ.0)WRITE(ITAPE6,80)
      call fioflu(6)
   80 FORMAT(1H ,'FIND THE ROOTS BY DAVIDSON',1H','S METHOD',/)
      CALL ROOTS(Z(INTS),Z(VECTOR),Z(SIGMA),Z(ROOT)
     1,  IA(BVAL),IA(NLWKS),IA(WEIGHT),IA(AVAL),IA(IJADD),IA(IJGRP)
     2,  IA(KADD),IA(LADD),IA(INEXT),IA(ARC),IA(JMNNXT),IA(JMXNXT)
     3,  IA(ROWSYM),IA(ORBSYM),IA(ISEGM),IA(JSEGM),IA(IMAIN),IA(ISUB)
     4,  IA(IUWKMN),IA(IUWKSB),IA(ITRACK),IA(LMIN), Z(ACOEF)
     5,  Z(BCOEF),IA(HDWGT),IA(HDSEG),IA(HDPNT),IA(IMXGRP),IA(IMNGRP)
     6,  IA(JMXGRP),IA(JMNGRP),ia(wtw),ia(wtx),ia(wty),ia(wab)
     7,  z(dvdvec),z(dvdmat),ndvdmx,Z(CI),Z(SI),Z(CJ),Z(SJ),Z(H1)
     8,Z(H2),IA(IJXX),IA(NKLXX),ia(ijww),IA(NKLWW),ia(klxx),ia(klww))
      call fioflu(6)
      WRITE(ITAPE6,4)
C     WRITE(ITAPE6,90)
C  90 FORMAT(1H0,5X,'TIMING INFORMATION')
CC FINAL TIMING VALUES ARE RETURNED HERE
C     WRITE (ITAPE6,891) ICOUNT,IXX4,IXX5,IXX6,IXX8,IWW4,IWW5,IWW6,IWW
C    #,                  IWX7,IXW9,IXY3,IXY16,IXY18,IXY22,IWY2,IWY15
C    #,                  IWY17,IWY21,IYX20,IYW19
C 891 FORMAT (//,' ICOUNT IS:',I8,/
C    #,                        T15,'XX ENTRIES, ISEG 4, 5, 6, 8:',4I8,/
C    #,                        T15,'WW ENTRIES, ISEG 4, 5, 6, 8:',4I8,/
C    #,                        T15,'WX ENTRIES, ISEG 7         :',I8,/
C    #,                        T15,'XW ENTRIES, ISEG 9         :',I8,/
C    #,                        T15,'XY ENTRIES, ISEG 3,16,18,22:',4I8,/
C    #,                        T15,'WY ENTRIES, ISEG 2,15,17,21:',4I8,/
C    #,                        T15,'YX ENTRIES, ISEG 20        :',I8,/
C    #,                        T15,'YW ENTRIES, ISEG 19        :',I8)
C     TOTAL=0.0D+00
C     DO 95 I=1,20
C     TOTAL=TOTAL+TIME(I)
C  95 CONTINUE
C     WRITE (ITAPE6,892) TOTAL,(ENTRY(I),IENTRY(I),TIME(I)
C    #,                   TIME(I)/TOTAL*100,I=1,20)
C 892 FORMAT(1H1,'  ENTRIES AND TIMES IN SECONDS',F10.3,//,(T5,A2,I8
C    #,       F10.3,F7.2))
C     WRITE (ITAPE6,893) (I-1,IPGS(I),IPGD(I),IPGO(I),IPGIJ(I),IPGOUT(
C    #,                   I=NLEVS,2,-1)
C 893 FORMAT(1H1,'  PAGING SUMMARY: CALLS TO ROUTINES BY LEVELS',//
C    #,     '     LEVEL   PAGES   PAGED   PAGEO  PAGEIJ  PAGEOUT'
C    #,     //,(6I8))
C     WRITE (ITAPE6,894) (I-1,IR3(I),NR3(I)/2,NR3(I)/(IR3(I)*2)
C    #,                      IR6(I),NR6(I)/2,NR6(I)/(IR6(I)*2)
C    #,                      IW6(I),NW6(I)/2,NW6(I)/(IW6(I)*2)
C    #,                   I=NLEVS,2,-1)
C 894 FORMAT(1H1,'  PAGING SUMMARY: REAL NUMBERS TRANSFERRED PER LEVEL'
C    #,//,'                 VECTOR READS                    SIGMA READS'
C    #,         '------------------------WRITES'
C    #,   /,'  LEVEL  ',3('     NUMBER     #TRANSFERRED      AVERAGE  ')
C    #,       /,(I5,9I14))
C     DO 895 I=2,NLEVS
C     IR3(1)=IR3(1)+IR3(I)
C     NR3(1)=NR3(1)+NR3(I)/2
C     IR6(1)=IR6(1)+IR6(I)
C     NR6(1)=NR6(1)+NR6(I)/2
C     IW6(1)=IW6(1)+IW6(I)
C     NW6(1)=NW6(1)+NW6(I)/2
C 895 CONTINUE
C     WRITE (ITAPE6,896) IR3(1),NR3(1),IR6(1),NR6(1),IW6(1),NW6(1)
C 896 FORMAT (/,5X,3(2I14,14X))
C
      RETURN
C
C     ----- ERROR HANDLING -----
C
CC920 WRITE(ITAPE6,925)NORBS,NORB2
CC925 FORMAT(' NUMBER OF ORBITALS DOES NOT MATCH ',2I10)
CCRBR CALL MABORT   VARIABLE NORB2 ONLY APPEARS ONCE--ABOVE
  930 WRITE(ITAPE6,935)LENI
  935 FORMAT(' INSUFFICIENT SPACE IN INTEGER BLANK COMMON NEED',I10,
     *' WORDS.')
      CALL MABORT
  940 WRITE(ITAPE6,945)4*NLWKMX+SIGMA
  945 FORMAT(' INSUFFICIENT SPACE IN BLANK COMMON NEED',I10,' WORDS.')
      CALL MABORT
      END
