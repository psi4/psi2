      SUBROUTINE FENTRY(CC,IA,MAXCOR)
C***********************************************************************
c       by: Edward Seidl (cets041389)
c     date: April 13, 1989
c   reason: use ffile to open formatted files
c***********************************************************************
C*  MODIFIED FOR IMS VERSION                                           *
C*  BY YUKIO YAMAGUCHI                                                 *
C*  DATE FEBRUARY 21, 1989                                             *
C***********************************************************************
C***LAST UPDATED ON JULY 29, 1988 BY YUKIO YAMAGUCHI                   *
C***********************************************************************
C   FORM THE HESSIAN MATRIX FROM THE CUMMULATED FILE11
C
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION CC(MAXCOR),IA(1)
      DIMENSION FP(150,150),FM(150,150),FF(150,150),AA(150,150)
      DIMENSION FX(150,150)
      DIMENSION ENGX(150),ENGY(150),ENGZ(150)
      DIMENSION GRADX(150),GRADY(150),GRADZ(150)
      DIMENSION XX(150),YY(150),ZZ(150)
      CHARACTER*80 ATITLE
      COMMON/COM101/NATOM,N3N
      COMMON/COM102/CHG(150),X(150),Y(150),Z(150)
      COMMON/COM103/R(1275)
      COMMON/COM104/NT,NCASE,ISPOT(150)
      COMMON/COM105/IOFF(256),IPRNT
      COMMON/COM106/PTR(3,3,48)
      COMMON/COM107/ICT(150,48)
      DATA A00,TWO / 0.0D+00 , 2.0D+00 /
      DATA ITAP11,ITAP15 / 11 , 15 /
      DATA XLIMIT / 1.0D-6 /
    1 FORMAT(//,2X,' THE PROGRAM TO FORM FILE15 (VERSION OF 2/01/89)'//)
    2 FORMAT(5I5)
    3 FORMAT(A80)
    4 FORMAT(3X,A80)
    5 FORMAT(I5,3F20.10)
    6 FORMAT(/,2X,' PARAMETERS FOR THE CALCULATION'//
     * 2X,' IPRNT  = ',I5/
     * 2X,' NATOM  = ',I5/
     * 2X,' N3N    = ',I5/
     * 2X,' ENERGY = ',F20.10/)
    7 FORMAT(//,2X,' REFERENCE GEOMETRY'/
     1 5X,4H NO.,11X,7H CHARGE,13X,2H X,18X,2H Y,18X,2H Z/)
    8 FORMAT(4F20.10)
    9 FORMAT(2X,I7,5X,4F20.10)
   10 FORMAT(//,2X,' CARTESIAN ENERGY GRADIENTS'/
     1 5X,4H NO.,11X,7H CHARGE,13X,2H X,18X,2H Y,18X,2H Z/)
   11 FORMAT(20X,3F20.10)
   12 FORMAT(/,2X,' NCASE = ',I5/)
   13 FORMAT(//,2X,' PERTURBED GEOMETRY'/
     1 5X,4H NO.,11X,7H CHARGE,13X,2H X,18X,2H Y,18X,2H Z/)
   14 FORMAT(//,2X,' NUMBER OF GRADIENT SETS',I5/)
   15 FORMAT(//,2X,' FP MATRIX BEFORE SYMMETRIZATION'/)
   16 FORMAT(//,2X,' FM MATRIX BEFORE SYMMETRIZATION'/)
   17 FORMAT(//,2X,' DELX = ',F20.10/)
   18 FORMAT(//,3X,52('*')
     *        /,2X,' DIFFERENT DELX IS USED !   NO. OF OCCURENCES = ',I5
     *        /,3X,52('*'),/)
   19 FORMAT(//,2X,' FX MATRIX (IN A.U.)'/)
   20 FORMAT(//,2X,' AVERAGED FX MATRIX (UPPER TRI. = FX, LOWER TRI. = D
     1IFFERENCE)'/)
   21 FORMAT(//,2X,' FX MATRIX (IN HARTREE/BOHR+2)'/)
   22 FORMAT(2I5)
   23 FORMAT(3F20.10)
C
      call drum
      CALL TSTART(6)
cets  CALL NOUNFL
      INPUT=5
      ITAPE6=6
      NDIM=150
      NDIMSQ=NDIM*NDIM
cets041389
      call ffile(itap11,' ',0)
      call ffile(itap15,' ',0)
C
      CALL LOCATE(INPUT,'# FORM15 #',IERR)
C
      WRITE(6,1)
      READ(5,2) IPRNT
C
C   READ IN THE REFERENCE GEOMETRY
      REWIND ITAP11
      READ(ITAP11,3) ATITLE
      WRITE(6,4) ATITLE
      READ(ITAP11,5) NATOM,ENERGY
      N3N=NATOM*3
      WRITE(6,6) IPRNT,NATOM,N3N,ENERGY
      WRITE(6,7)
      DO 101 I=1,NATOM
      READ(ITAP11,8) CHG(I),X(I),Y(I),Z(I)
      WRITE(6,9) I,CHG(I),X(I),Y(I),Z(I)
  101 CONTINUE
      WRITE(6,10)
      DO 102 I=1,NATOM
      READ(ITAP11,11) ENGX(I),ENGY(I),ENGZ(I)
      WRITE(6,9) I,CHG(I),ENGX(I),ENGY(I),ENGZ(I)
  102 CONTINUE
      CALL DIST
C
C   READ IN THE GRADIENT SET WITH PERTURBATIONS
      CALL ZERO(FP,NDIMSQ)
      CALL ZERO(FM,NDIMSQ)
      IDELTA=0
      NCASE=0
  200 NCASE=NCASE+1
      IF(IPRNT.GT.3) THEN
        WRITE(6,12) NCASE
      END IF
      READ(ITAP11,3,END=205) ATITLE
      IF(IPRNT.GT.3) THEN
        WRITE(6,4) ATITLE
      END IF
      READ(ITAP11,5) NATOM,ENERGY
      IF(IPRNT.GT.3) THEN
        WRITE(6,13)
      END IF
      DO 103 I=1,NATOM
      READ(ITAP11,8) CHG(I),XX(I),YY(I),ZZ(I)
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,9) I,CHG(I),XX(I),YY(I),ZZ(I)
  201 CONTINUE
      IADD=(I-1)*3
      DIFX=XX(I)-X(I)
      DIFY=YY(I)-Y(I)
      DIFZ=ZZ(I)-Z(I)
      IF(DABS(DIFX).GT.XLIMIT) GO TO 301
      IF(DABS(DIFY).GT.XLIMIT) GO TO 302
      IF(DABS(DIFZ).GT.XLIMIT) GO TO 303
      GO TO 103
C
C  X PERTURBATION
  301 CONTINUE
      IPOS=IADD+1
      IF(DIFX.LT.A00) IPOS=IPOS+N3N
      IF(NCASE.EQ.1) DELX=DABS(DIFX)
      XDIF=DELX-DABS(DIFX)
      IF(DABS(XDIF).GT.XLIMIT) IDELTA=IDELTA+1
      GO TO 103
C
C  Y PERTURBATION
  302 CONTINUE
      IPOS=IADD+2
      IF(DIFY.LE.A00) IPOS=IPOS+N3N
      IF(NCASE.EQ.1) DELX=DABS(DIFY)
      XDIF=DELX-DABS(DIFY)
      IF(DABS(XDIF).GT.XLIMIT) IDELTA=IDELTA+1
      GO TO 103
C
C  Z PERTURBATION
  303 CONTINUE
      IPOS=IADD+3
      IF(DIFZ.LE.A00) IPOS=IPOS+N3N
      IF(NCASE.EQ.1) DELX=DABS(DIFZ)
      XDIF=DELX-DABS(DIFZ)
      IF(DABS(XDIF).GT.XLIMIT) IDELTA=IDELTA+1
  103 CONTINUE
      IF(IPRNT.GT.3) THEN
        WRITE(6,10)
      END IF
      DO 104 I=1,NATOM
      READ(ITAP11,11) GRADX(I),GRADY(I),GRADZ(I)
      IF(IPRNT.LE.2) GO TO 104
      WRITE(6,9) I,CHG(I),GRADX(I),GRADY(I),GRADZ(I)
  104 CONTINUE
      ISPOT(NCASE)=IPOS
      IF(IPOS.GT.N3N) GO TO 202
C
C   POSITIVE PERTURBATION
      DO 105 I=1,NATOM
      IX=(I-1)*3+1
      IY=IX+1
      IZ=IY+1
      FP(IPOS,IX)=GRADX(I)
      FP(IPOS,IY)=GRADY(I)
      FP(IPOS,IZ)=GRADZ(I)
  105 CONTINUE
      GO TO 203
C
C   NEGATIVE PERTURBATION
  202 CONTINUE
      DO 106 I=1,NATOM
      IX=(I-1)*3+1
      IY=IX+1
      IZ=IY+1
      FM(IPOS-N3N,IX)=GRADX(I)
      FM(IPOS-N3N,IY)=GRADY(I)
      FM(IPOS-N3N,IZ)=GRADZ(I)
  106 CONTINUE
  203 CONTINUE
      GO TO 200
C
C   END OF GRADIENT SETS
  205 CONTINUE
      NCASE=NCASE-1
      WRITE(6,14) NCASE
      WRITE(6,15)
      CALL MATOUT(FP,NDIM,NDIM,N3N,N3N,6)
      WRITE(6,16)
      CALL MATOUT(FM,NDIM,NDIM,N3N,N3N,6)
      WRITE(6,17) DELX
      IF(IDELTA.GE.1) THEN
        WRITE(6,18) IDELTA
      END IF
C
C   GET SYMMETRY INFORMATION FROM TAPE30
      CALL GETBAS
C
C   SYMMETRIZE THE GRADIENT MATRIX
      IF(NT.EQ.1) GO TO 206
      CALL SYMD(FP,FM,NDIM)
C
C   CALCULATE FORCE CONSTANT MATRIX
  206 CONTINUE
      FACT=DELX*TWO
      DO 107 I=1,N3N
      DO 107 J=1,N3N
      AA(I,J)=(FP(I,J)-FM(I,J))/FACT
  107 CONTINUE
      WRITE(6,19)
      CALL MATOUT(AA,NDIM,NDIM,N3N,N3N,6)
      DO 108 I=1,N3N
      DO 108 J=I,N3N
      FF(I,J)=(AA(I,J)+AA(J,I))/TWO
      IF(I.EQ.J) GO TO 108
      FF(J,I)=(AA(I,J)-AA(J,I))/TWO
  108 CONTINUE
      WRITE(6,20)
      CALL MATOUT(FF,NDIM,NDIM,N3N,N3N,6)
      DO 109 I=1,N3N
      DO 109 J=I,N3N
      FX(I,J)=FF(I,J)
      IF(I.EQ.J) GO TO 109
      FX(J,I)=FF(I,J)
  109 CONTINUE
      WRITE(6,21)
      CALL MATOUT(FX,NDIM,NDIM,N3N,N3N,6)
C
C   FORM TAPE15
      REWIND ITAP15
      WRITE(ITAP15,22) NATOM,N3N*2
      WRITE(ITAP15,23) ((FX(I,J),J=1,N3N),I=1,N3N)
      REWIND ITAP15
C
      CALL TSTOP(6)
C
C2-20-89 STOP
      RETURN
      END
