      PROGRAM RRKM
C
C***********************************************************************
C RRKMWSU.NEW   BY   LING ZHU AND WILLIAM L. HASE  AUG.20, 1992      
C THIS PROGRAM IS USED TO CALCULATE THE RATE CONSTANT USING RRKM THEORY.
C***********************************************************************
C
C***********************************************************************
C Notice of Program Modification
C***********************************************************************
C Date: Feb. 06, 1993       By: Richard Remington
C Reason: Initial port to AIX RS/6000 at CCQC
C***********************************************************************
C
C DEFINITION OF ARRAYS
C
C     ARRAYS OF INFORMATION READ IN
C        WM*       FREQUENCIES IN THE MOLECULE
C                  (ENTER FREQUENCIES IN DESCENDING SIZE)
C        TM*       PRINCIPAL MOMENTS OF INERTIA FOR MOLECULE
C                  (PUT THE PRINCIPLE MOMENT OF INERTIA FOR
C                  K-AXIS LAST)
C        TRM*      REDUCED MOMENTS OF INERTIA FOR MOLECULE
C                  (ENTER REDUCED MOMENTS OF INERTIA IN
C                  DENSCENDING SIZE)
C        SYMM*     SYMMETRY NUMBERS FOR INTERNAL ROTORS IN
C                  MOLECULE
C        WC*       FREQUENCIES IN THE TRANSITION STATE
C                  (ENTER FREQUENCIES IN DESCENDING SIZE AND -1
C                  FOR THOSE VALUES WILL CHANGE ALONG THE REACTION
C                  PATH)
C        TC*       PRINCIPAL MOMENTS OF INERTIA FOR THE TRANSITION
C                  STATE
C                  (PUT THE PRINCIPLE MOMENT OF INERTIA FOR
C                  K-AXIS LAST AND -1 FOR THOSE VALUES WILL CHANGE
C                  ALONG THE REACTION PATH)
C        TRC*      REDUCED MOMENTS OF INERTIA FOR THE TRANSITION
C                  STATE
C                  (ENTER REDUCED MOMENTS OF INERTIA IN
C                  DESCENDING SIZE AND -1 FOR THOSE VALUES WILL
C                  CHANGE ALONG THE REACTION PATH)
C        SYMC*     SYMMETRY NUMBERS FOR INTERNAL ROTORS IN THE
C                  TRANSITION STATE
C        EDAGG*    ENERGIES OF THE TRANSITION STATE USED IN DETERMIN-
C                  ING THE TRANSLATIONAAL ENERGY DISTRIBUTION OF
C                  PRODUCTS
C
C     ARRAYS READ IN FOR DETERMING THE TRANSITION STATE BY MINIMUM
C     NUMBER OF STATES
C        WCC(I,J)* FREQUENCY CHANGES AS R+ INCREASES.  I IS THE NUMBER
C                  OF MODES WHICH VARY WITH R+.  J IS THE NUMBER OF
C                  REACTION CO-ORDINATE INTERVALS +1.
C        TCC(I,J)* PRINCIPAL MOMENTS OF INERTIA CHANGES AS R+ IS
C                  INCREASED.  I AND J AS BEFORE.  MAXIMUM VALUE FOR I
C                  IS 3.
C        TRCC(I,J)*REDUCED MOMENTS OF INERTIA CHANGES AS R+ IS INCREASED.
C                  I IS THE NUMBER OF REDUCED MOMENTS OF INERTIA WHICH
C                  VARY WITH R+.  J AS BEFORE.
C        VRDAG*    VALUES OF POTENTIAL ENERGY OF CRITICAl CO-ORDINATE
C
C     ARRAYS PRODUCED BY SUBROUTINE <<CCDETR>>
C        WCG*      FREQUENCIES IN THE TRANSITION STATE
C        TCG*      PRINCIPAL MOMENTS OF INERTIA IN THE TRANSITION
C                  STATE
C        TRCG*     REDUCED MOMENTS OF INERTIA IN THE TRANSITION
C                  STATE
C
C     ARRAYS PRODUCED BY THE MAIN PROGRAM
C        E*        TOTAL ENERGY
C        JK*       THE QUANTUM NUMBER OF TOTAL ANGULAR MOMENT
C        SUMC*     SUMS OF HARMONIC VIBRATIONAL-INTERNAL ROTATIONAL
C                  STATES IN THE TRANSITION STATE FOR KROT=0 AND NANH=0
C        DENM*     DENSITIES OF HARMONIC VIBRATIONAL-INTERNAL ROTATIONAL
C                  STATES IN THE MOLECULE FOR KROT=0 AND NANH=0
C        ASUMC*    SUMS OF ANHARMONIC VIBRATIONAL-INTERNAL ROTATIONAL
C                  STATES IN THE TRANSITION STATE FOR KROT=0 AND NANH=1
C        ADENM*    DENSITIES OF ANHARMONIC VIBRATIONAL-INTERNAL
C                  ROTATIONAL STATES IN THE MOLECULE FOR KROT=0 AND
C                  NANH=1
C        SUM*      SUMS OF HARMONIC VIBRATIONAL-INTERNAL ROTATIONAL
C                  STATES IN THE TRANSITION STATE FOR KROT=-1 AND NANH=0
C        DEN*      DENSITIES OF HARMONIC VIBRATIONAL-INTERNAL ROTATIONAL
C                  STATES IN THE MOLECULE FOR KROT=-1 AND NANH=0
C        ASUM*     SUMS OF ANHARMONIC VIBRATIONAL-INTERNAL ROTATIONAL
C                  STATES IN THE TRANSITION STATE FOR KROT=-1 AND NANH=1
C        ADEN*     DENSITIES OF ANHARMONIC VIBRATIONAL-INTERNAL
C                  ROTATIONAL STATES FOR KROT=-1 AND NANH=1
C        RK*       UNIMOLECULAR RATE CONSTANTS FOR KROT=0 AND
C                  NANH=0
C        ARK*      UNIMOLECULAR RATE CONSTANTS FOR KROT=0 AND
C                  NANH=1
C        RRK*      UNIMOLECULAR RATE CONSTANTS FOR KROT=-1 AND
C                  NANH=0
C        ARRK*     UNIMOLECULAR RATE CONSTANTS FOR KROT=-1 AND
C                  NANH=1
C        ETN*      TO PRINT OUT RESULTS, ARRAY THE ENERGY AS
C                  ETN(1-->NJ)
C                    FOR E=EMIN,             J=JMIN-->JMIN+(NJ-1)*JDEL
C                  ETN((NJ+1)-->2NJ)
C                    FOR E=EMIN+EDEL,        J=JMIN-->JMIN+(NJ-1)*JDEL
C                  ...
C                  ETN(((NE-1)*NJ)-->NE*NJ)
C                    FOR E=EMIN+(NE-1)*EDEL, J=JMIN-->JMIN+(NJ-1)*JDEL
C        JTN*      TO PRINT OUT RESULTS, ARRAY THE J AS
C                  JTN(1-->NJ)
C                    FOR E=EMIN,             J=JMIN-->JMIN+(NJ-1)*JDEL
C                  JTN((NJ+1)-->2NJ)
C                    FOR E=EMIN+EDEL,        J=JMIN-->JMIN+(NJ-1)*JDEL
C                  ...
C                  JTN(((NE-1)*NJ)-->NE*NJ)
C                    FOR E=EMIN+(NE-1)*EDEL, J=JMIN-->JMIN+(NJ-1)*JDEL
C        EE*       INCREMENTS OF TRANSLATIONAL ENERGY IN THE
C                  REACTION CO-ORDINATE FOR A FIXED TOTAL ENERGY
C                  (TRANSLATION+VIBRATION) IN TRANSITION STATE.
C                  THE DIMENSION 50 IS FIXED BY THE PROGRAM
C                  (INSTRUCTION 701)
C        GN*       DENSITIES OF VIBRATIONAL-INTERNAL ROTATIONAL
C                  STATES IN THE TRANSITION STATE FOR KROT=-1
C                  (INSTRUCTION 701)
C        GNC*      DENSITIES OF VIBRATIONAL-INTERNAL ROTATIONAL
C                  STATES IN THE TRANSITION STATE FOR KROT=0
C                  (INSTRUCTION 701)
C        GG*       SUMS OF VIBRATIONAL-INTERNAL ROTATIONAL STATES
C                  IN THE TRANSITION STATE FOR KROT=0(INSTRUCTION 701)
C
C     LIST OF SUBROUTINES
C        CCDETR*
C        WRSEMI*
C        BSCOMP*
C        CLASS*
C        ROEN*
C        SUMQ*
C        CLACK*
C        ANHARM*
C
C     IMPORTANT!
C     THIS PROGRAM IS ONLY TREAT THE SYMMETRIC(ALMOST SYMMETRY) TOP
C     MOLECULES. AT LEAST TWO MOMENTS OF INERTIA ARE SAME OR
C     NEARLY SAME FOR BOTH MOLECULE AND TRANSITION STATE.
C     THOSE TWO MOMENTS OF INERTIA AT THE TRANSITION STATE HAVE
C     SAME SITUATION, THAT MEANS BOTH WILL CONSERVE OR CHANGE ALONG
C     THE REACTION PATH AT SAME TIME.
C
CC#include <errno.h>
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION TITLE(36),TM(3),WM(100),TRM(5),SYMM(5),TC(3),
     *WC(100),TRC(5),SYMC(5),WCC(50,100),TRCC(2,100),TCC(3,100),
     *VRDAG(100),RDAG(100),WCG(100),TRCG(5),TCG(3),E(50),JK(50),
     *DENM(2500),SUMC(2500),RK(2500),ADENM(2500),ASUMC(2500),ARK(2500),
     *DEN(2500,0:200),SUM(2500,0:200),RRK(2500,0:200),ADEN(2500,0:200),
     *ASUM(2500,0:200),ARRK(2500,0:200),ETN(2500),JTN(2500),
     *EDAGG(250),EE(50),GG(0:200),GNC(50),GN(50,0:200)
C
C
Crbr  Below matrix sizes are suitable for cms 16mb limit
crbr  IMPLICIT DOUBLE PRECISION(A-H,O-Z)
crbr  DIMENSION TITLE(36),TM(3),WM(100),TRM(5),SYMM(5),TC(3),
crbr *WC(100),TRC(5),SYMC(5),WCC(50,100),TRCC(2,100),TCC(3,100),
crbr *VRDAG(100),RDAG(100),WCG(100),TRCG(5),TCG(3),E(50),JK(50),
crbr *DENM(1200),SUMC(1200),RK(1200),ADENM(1200),ASUMC(1200),ARK(1200),
crbr *DEN(1200,0:200),SUM(1200,0:200),RRK(1200,0:200),ADEN(1200,0:200),
crbr *ASUM(1200,0:200),ARRK(1200,0:200),ETN(1200),JTN(1200),
crbr *EDAGG(250),EE(50),GG(0:200),GNC(50),GN(50,0:200)
C
    1 FORMAT(18A4)
    2 FORMAT(/,18A4)
    3 FORMAT(7I10)
    4 FORMAT(7F10.0)
    5 FORMAT(I5,'  RATE CONSTANTS TO BE CALCULATED',5X,
     *'REACTION PATH DEGENERCY =',F4.1,//)
    6 FORMAT(20X,'***************************',/,20X,'*  DATA FOR',
     *' THE MOLECULE  *',/,20X,'***************************')
    7 FORMAT(2F10.0,I10)
    8 FORMAT(/,'NUMBER OF OSCILLATORS',5X,'NUMBER OF INTERNAL ROTORS',
     *//,1X,I10,16X,I10)
    9 FORMAT(/,'MOMENTS OF INERTIA',5X,'AMU*ANGSTROM**2',//,
     *3F10.2)
   10 FORMAT(/,'FREQUENCIES',5X,'1/CM',/)
   11 FORMAT(7F12.1)
   12 FORMAT(/,15X,'INTERNAL ROTORS',/)
   13 FORMAT('REDUCED MOMENT OF INERTIA =',F8.3,5X,
     *'SYMMETRY NUMBER =',F4.1)
   14 FORMAT('POTENTIAL ENERGY',5X,'NUMBER OF OSCILLATORS',
     *5X,'NUMBER OF INTERNAL ROTORS',//,F8.2,14X,I10,16X,I10)
   15 FORMAT(//,15X,'***********************************',/,15X,
     *'*  DATA FOR THE TRANSITION STATE  *',/,15X,
     *'***********************************')
   16 FORMAT(2F10.0,I10)
   17 FORMAT(/,'REACTION CO-ORDINATE',10X,
     *'  POTENTIAL ENERGY',/,6X,'ANGSTROM',21X,'KCAL/MOLE',/)
   18 FORMAT(5X,F10.2,19X,F10.2)
   19 FORMAT(/,'*****STRUCTURE OF THE TRANSITION STATE IS',
     *' SPECIFIED*****',/)
   20 FORMAT(/,'E =',F7.2,'  KCAL/MOLE',5X,'  J =',I5,5X,
     *'*****ENERGY IS NOT ENOUGH FOR PASSING THE',
     *' TRANSITION STATE TO THE PRODUCT*****',/)
   21 FORMAT(//,15X,'A MINIMUM WAS NOT FOUND IN THE NUMBER OF',
     *' STATES',/,10X,'*****THE FOLLOWING TRANSITION STATE GAVE',
     *' THE SMALLEST NUMBER OF STATES AND IS USED IN k(E,J)',
     *' CALCULATIONS*****',/)
   22 FORMAT(//,15X,'A MINIMUM WAS FOUND IN THE NUMBER OF STATES',
     */,10X,'*****THE RESULTING TRANSITION STATE IS GIVEN BELOW',
     *'*****',/)
   23 FORMAT(/,'ANHARMONIC CORRECTION FOR MOLECULE:  AVERAGE',
     *' BOND ENERGY =',F7.2,' KCAL/MOLE')
   24 FORMAT(/,'ANHARMONIC CORRECTION FOR COMPLEX:  AVERAGE',
     *' BOND ENERGY =',F7.2,' KCAL/MOLE')
   25 FORMAT(/)
   26 FORMAT('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
     *'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',/)
   27 FORMAT('RATE CONSTANTS CALCULATED USING THESE OPTIONS:',
     *5X,'KROT =',I2,'  NANH =',I2,'  NCRIT =',I2,'  JDEN =',I3,
     *'  JSUM =',I3,///)
   28 FORMAT(4X,'E',8X,'J',8X,'DENSITY',8X,'SUM',8X,
     *'RATE CONSTANT',/)
   29 FORMAT(' KCAL/MOLE',13X,'CM-1',23X,'SECOND-1',//)
   30 FORMAT(F7.2,3X,I5,6X,E10.4,4X,E10.4,5X,E10.4)
   31 FORMAT(4X,'E',8X,'J',8X,'K',8X,'DENSITY',8X,
     *'SUM',8X,'RATE CONSTANT',/)
   32 FORMAT('KCAL/MOLE',23X,'CM-1',24X,'SECOND-1',/)
   33 FORMAT(F7.2,3X,I5,4X,I5,6X,E10.4,4X,E10.4,5X,E10.4)
   34 FORMAT(4X,'E',5X,'J',6X,'HARMONIC',5X,'HARMONIC',
     *5X,'HARMONIC',6X,'ANHARMONIC',4X,'ANHARMONIC',4X,
     *'ANHARMONIC',/)
   35 FORMAT('KCAL/MOLE',6X,'DENSITY(CM-1)',4X,'SUM',
     *5X,'RATE(SECOND-1)',2X,'DENSITY(CM-1)',5X,'SUM',6X,
     *'RATE(SECOND-1)',//)
   36 FORMAT(F7.2,I5,2X,3(3X,E10.4),1X,3(4X,E10.4))
   37 FORMAT(4X,'E',5X,'J',4X,'K',6X,'HARMONIC',5X,
     *'HARMONIC',5X,'HARMONIC',6X,'ANHARMONIC',4X,'ANHARMONIC',
     *4X,'ANHARMONIC',/)
   38 FORMAT('KCAL/MOLE',11X,'DENSITY(CM-1)',4X,'SUM',
     *5X,'RATE(SECOND-1)',2X,'DENSITY(CM-1)',5X,'SUM',6X,
     *'RATE(SECOND-1)',//)
   39 FORMAT(F7.2,2I5,5X,E10.4,3X,E10.4,3X,E10.4,1X,3(4X,E10.4))
   40 FORMAT('E =',F7.2,'  KCAL/MOLE',5X,'  J =',I5)
   41 FORMAT(F7.2,I5,10X,'RATE CONSTANT CANNOT BE CALCULATED,',
     *' BECAUSE THE DENSITY IS ZERO')
   42 FORMAT(F7.2,2I5,10X,'RATE CONSTANT CANNOT BE CALCULATED',
     *' BECAUSE THE DENSITY IS ZERO')
   43 FORMAT(/,'EMIN =',F7.2,'  KCAL/MOLE','  DELE =',F7.2,
     *'  KCAL/MOLE','  NE =',I5)
   44 FORMAT(/,'JMIN =',I7,11X,'  DELJ =',I7,11X,'  NJ =',I5,/)
C
C
C
      open(unit=5,status='UNKNOWN',file='rrkm.inp')
      open(unit=6,status='UNKNOWN',file='rrkm.out')
C
C
C        READ AND WRITE GENERAL DATA
C
      READ(5,1)(TITLE(I),I=1,36)
      WRITE(6,2)(TITLE(I),I=1,36)
C
  999 READ(5,7)EMIN,EDEL,NE
      IF(NE.EQ.0)GO TO 920
      WRITE(6,43)EMIN,EDEL,NE
      READ(5,3)JMIN,JDEL,NJ
      WRITE(6,44)JMIN,JDEL,NJ
      IF(NJ.EQ.0)GO TO 920
C
C     OPTIONS FOR EXTERNAL ROTATION
C        KROT = -1   K QUANTUM NUMBER IS ADIABATIC
C        KROT = 0    K QUANTUM NUMBER IS ACTIVE
C        KROT = +1   HOT ATOM
C
      READ(5,3)KROT
      IF(KROT.LE.0)GO TO 93
      READ(5,4)FMIN,DELF,FMAX,CSMIN,DELCS,CSMAX,EVIBR
      DELFO=DELF
      READ(5,4)WR,WA,WP
      IF((FMAX-FMIN).EQ.0.0)GO TO 90
      IF(DELF.EQ.0.0)GO TO 90
      GO TO 91
   90 DELF=1.0
   91 IF((CSMAX-CSMIN).EQ.0.0)GO TO 92
      IF(DELCS.EQ.0.0)GO TO 92
      GO TO 93
   92 DELCS=1.0
C
C     ANHARMONIC OPTIONS
C        NANH = 0   HARMONIC CALCULATION
C        NANH = 1   ANHARMONIC CALCULATION:  HAARHOFF TECHNIQUE
C
   93 READ(5,3)NANH
      IF(NANH.EQ.0)GO TO 94
      READ(5,4)DAM,DAC
C
C     OPTIONS FOR SUM AND DENSITY CALCULATIONS
C        -1    DIRECT COUNT OF QUANTUM STATES
C         0    SEMICLASSICAL TECHNIQUE
C        +1    CLASSICAL TECHNIQUE
C      JDEN IS THE DENSITY OPTION
C      JSUM IS THE SUM OPTION
C
   94 READ(5,3)JDEN
      READ(5,3)JSUM
C
      E(1)=EMIN
      DO 95 I=2,NE
   95 E(I)=E(I-1)+EDEL
      JK(1)=JMIN
      DO 96 I=2,NJ
   96 JK(I)=JK(I-1)+JDEL
      ANE=DBLE(NE)
      ANJ=DBLE(NJ)
      AEJ=ANE*ANJ
      IF(KROT-0.0)97,99,100
   97 AKK=0.0
      DO 98 I=1,NJ
   98 AKK=AKK+DBLE(JK(I))+1.0
      ANUM=ANE*AKK
      NUM=INT(ANUM)
      GO TO 101
   99 NUM=INT(AEJ)
      GO TO 101
  100 NUM=INT(ANE)
C
  101 READ(5,4)SIGMA
      WRITE(6,5)NUM,SIGMA
C
C        READ AND WRITE DATA FOR REACTANT
C
      WRITE(6,6)
      READ(5,3)NSM,NRM
      WRITE(6,8)NSM,NRM
      READ(5,4)(WM(I),I=1,NSM)
      WRITE(6,10)
      WRITE(6,11)(WM(I),I=1,NSM)
      READ(5,4)(TM(I),I=1,3)
      WRITE(6,9)(TM(I),I=1,3)
      IF(NRM.EQ.0)GO TO 110
      READ(5,4)(TRM(I),I=1,NRM)
      READ(5,4)(SYMM(I),I=1,NRM)
      WRITE(6,12)
      DO 105 I=1,NRM
  105 WRITE(6,13)TRM(I),SYMM(I)
  110 IF(NANH.EQ.0)GO TO 130
      WRITE(6,23)DAM
C
C        READ AND WRITE DATA FOR TRANSITION STATE
C
  130 WRITE(6,15)
C
C     OPTION FOR DETERMINING TRANSITION STATE BY MINIMUM OF
C     STATES
C        NCRIT = 0    TRANSITION STATE IS SPECIFIED BY USER
C        NCRIT = 1    DETERMIN TRANSITION STATES BY MINIMUM
C                     NUMBER OF STATES
C
      READ(5,3)NCRIT
      IF(NCRIT.EQ.0)GO TO 165
      READ(5,16)RMIN,RMAX,NR
      ANR=DBLE(NR)
      DELR=(RMAX-RMIN)/ANR
      M=NR+1
      READ(5,4)(VRDAG(I),I=1,M)
      RDAG(1)=RMIN
      DO 150 I=2,M
  150 RDAG(I)=RDAG(I-1)+DELR
      GO TO 170
  165 WRITE(6,19)
      NR=0
      M=1
      READ(5,4)VC
  170 READ(5,3)NSC,NRC
      READ(5,4)(WC(I),I=1,NSC)
      JJ=0
      IF(WC(NSC).GT.0.0)GO TO 240
      I=1
  190 IF(WC(I).LE.0.0)GO TO 200
      I=I+1
      GO TO 190
  200 JJ=NSC-I+1
      DO 210 J=1,JJ
  210 READ(5,4)(WCC(J,I),I=1,M)
  240 IF(NCRIT.EQ.0)GO TO 267
      WRITE(6,17)
      DO 264 I=1,M
  264 WRITE(6,18)RDAG(I),VRDAG(I)
  267 LL=0
      READ(5,4)(TC(I),I=1,3)
      IF(TC(3).GT.0.0)GO TO 269
      LL=1
      IF(TC(1).LE.0.0)LL=3
      DO 268 J=1,LL
  268 READ(5,4)(TCC(J,I),I=1,M)
      GO TO 305
  269 IF(TC(1).GT.0.0)GO TO 305
      LL=3
      DO 300 J=1,2
  300 READ(5,4)(TCC(J,I),I=1,M)
      DO 301 I=1,M
  301 TCC(3,I)=TC(3)
  305 KK=0
      IF(NRC.EQ.0)GO TO 331
      READ(5,4)(TRC(I),I=1,NRC)
      READ(5,4)(SYMC(I),I=1,NRC)
      IF(TRC(NRC).GT.0.0)GO TO 331
      I=1
  310 IF(TRC(I).LE.0.0)GO TO 320
      I=I+1
      GO TO 310
  320 KK=NRC-I+1
      DO 330 J=1,KK
  330 READ(5,4)(TRCC(J,I),I=1,M)
  331 IF(NCRIT.EQ.1)GO TO 340
      WRITE(6,14)VC,NSC,NRC
      WRITE(6,10)
      WRITE(6,11)(WC(I),I=1,NSC)
      WRITE(6,9)(TC(I),I=1,3)
      IF(NRC.EQ.0)GO TO 335
      WRITE(6,12)
      DO 332 I=1,NRC
  332 WRITE(6,13)TRC(I),SYMC(I)
  335 IF(NANH.EQ.0)GO TO 340
      WRITE(6,24)DAC
C
C
  340 CON1=2.99792458E+10
      IF(KROT.EQ.1)GO TO 611
      II=1
      DO 586 ME=1,NE
      ENOW=E(ME)
      DO 585 MJ=1,NJ
      JNOW=JK(MJ)
      ETN(II)=ENOW
      JTN(II)=JNOW
      AJ=DBLE(JNOW)
C
C        *****CALCULATION OF THE DENSTIY OF STATES FOR REACTANT
C
      EM=ENOW*349.755
      JAN=0
      AK=0.0
      GL=1.0
      DENM(II)=0.0
      ADENM(II)=0.0
C
      IF(JDEN-0)350,370,390
C
C        DIRECT COUNT
C
  350 DO 360 L=0,JNOW
      AL=DBLE(L)
      DEN(II,L)=0.0
      ADEN(II,L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TM,AJ,AL,EJKM)
      EVIBM=EM-EJKM
      IF(EVIBM.LE.0.0)GO TO 360
      EVM1=EVIBM+50.0
      CALL SUMQ(EVM1,NSM,NRM,WM,TRM,SYMM,SS)
      SUM1=SS
      EVM2=EVM1-100.0
      CALL SUMQ(EVM2,NSM,NRM,WM,TRM,SYMM,SS)
      SUM2=SS
      DEN(II,L)=(SUM1-SUM2)/100.0
      DENM(II)=DENM(II)+GL*DEN(II,L)
      IF(NANH.EQ.0)GO TO 360
      KAN=0
      CALL ANHARM(NSM,NRM,WM,DAM,KAN,EVIBM,CM)
      ADEN(II,L)=DEN(II,L)*CM
      ADENM(II)=ADENM(II)+GL*ADEN(II,L)
  360 CONTINUE
      GO TO 410
C
C        SEMICLASSICAL METHOD
C
  370 DO 380 L=0,JNOW
      AL=DBLE(L)
      DEN(II,L)=0.0
      ADEN(II,L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TM,AJ,AL,EJKM)
      EVIBM=EM-EJKM
      IF(EVIBM.LE.0.0)GO TO 380
      CALL WRSEMI(NSM,NRM,WM,TRM,SYMM,EVIBM,JAN,AK,DD)
      DEN(II,L)=DD
      DENM(II)=DENM(II)+GL*DEN(II,L)
      IF(NANH.EQ.0)GO TO 380
      KAN=0
      CALL ANHARM(NSM,NRM,WM,DAM,KAN,EVIBM,CM)
      ADEN(II,L)=DEN(II,L)*CM
      ADENM(II)=ADENM(II)+GL*ADEN(II,L)
  380 CONTINUE
      GO TO 410
C
C        CLASSICAL METHOD
C
  390 IF(KROT.EQ.-1)GO TO 400
      IF(JNOW.EQ.0)GO TO 400
      CALL CLACK(EM,AJ,NSM,NRM,WM,TM,TRM,SYMM,NANH,DAM,
     *JAN,AK,DD,ADD)
      DENM(II)=DD
      IF(NANH.EQ.0)GO TO 410
      ADENM(II)=ADD
      GO TO 410
  400 DO 405 L=0,JNOW
      AL=DBLE(L)
      DEN(II,L)=0.0
      ADEN(II,L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TM,AJ,AL,EJKM)
      EVIBM=EM-EJKM
      IF(EVIBM.LE.0.0)GO TO 405
      CALL CLASS(NSM,NRM,WM,TRM,SYMM,EVIBM,JAN,AK,DD)
      DEN(II,L)=DD
      IF(NANH.EQ.0)GO TO 405
      KAN=0
      CALL ANHARM(NSM,NRM,WM,DAM,KAN,EVIBM,CM)
      ADEN(II,L)=DEN(II,L)*CM
  405 CONTINUE
      IF(KROT.NE.0)GO TO 410
      IF(JNOW.GT.0)GO TO 410
      DENM(II)=DEN(II,0)
      IF(NANH.EQ.0)GO TO 410
      ADENM(II)=ADEN(II,0)
C
  410 IF(NCRIT.EQ.0)GO TO 500
C
C        *****FINDING THE POSITION OF TRANSITION STATE BY
C             MINIMUM OF NUMBER OF STATES
C
      CALL CCDETR(NSC,NRC,WC,JJ,WCC,TRC,SYMC,KK,TRCC,TC,
     *LL,TCC,M,RDAG,DELR,VRDAG,ENOW,JNOW,KROT,NANH,DAC,
     *JSUM,RDAGG,VG,WCG,TRCG,TCG,JOKER)
      IF(JOKER.EQ.0)GO TO 430
      IF(JOKER.EQ.1)GO TO 420
      WRITE(6,20)ENOW,JNOW
      GO TO 585
  420 WRITE(6,21)
      GO TO 435
  430 WRITE(6,22)
  435 WRITE(6,40)ENOW,JNOW
      VC=VG
      DO 440 I=1,NSC
  440 WC(I)=WCG(I)
      IF(NRC.EQ.0)GO TO 460
      DO 450 I=1,NRC
  450 TRC(I)=TRCG(I)
  460 DO 470 I=1,3
  470 TC(I)=TCG(I)
      WRITE(6,17)
      WRITE(6,18)RDAGG,VC
  480 WRITE(6,8)NSC,NRC
      WRITE(6,10)
      WRITE(6,11)(WC(I),I=1,NSC)
      WRITE(6,9)(TC(I),I=1,3)
      IF(NRC.EQ.0)GO TO 490
      WRITE(6,12)
      DO 485 I=1,NRC
  485 WRITE(6,13)TRC(I),SYMC(I)
  490 IF(NANH.EQ.0)GO TO 500
      WRITE(6,24)DAC
C
C         *****CALCULATION OF THE SUM OF STATES
C
  500 EC=ENOW*349.755-VC*349.755
      JAN=1
      AK=0.0
      GL=1.0
      SUMC(II)=0.0
      ASUMC(II)=0.0
C
      IF(JSUM-0)510,530,550
C
C        BEYER-SWINEHART ALGORITHM
C
  510 DO 520 L=0,JNOW
      AL=DBLE(L)
      SUM(II,L)=0.0
      ASUM(II,L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=EC-EJKC
      CALL SUMQ(EVIBC,NSC,NRC,WC,TRC,SYMC,SS)
      SUM(II,L)=SS
      SUMC(II)=SUMC(II)+GL*SUM(II,L)
      IF(NANH.EQ.0)GO TO 520
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CC)
      ASUM(II,L)=SUM(II,L)*CC
      ASUMC(II)=ASUMC(II)+GL*ASUM(II,L)
  520 CONTINUE
      GO TO 580
C
C        WHITTEN-RABINOVITCH TECHNIQUE
C
  530 DO 540 L=0,JNOW
      AL=DBLE(L)
      SUM(II,L)=0.0
      ASUM(II,L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=EC-EJKC
      IF(EVIBC.LE.0.0)GO TO 540
      CALL WRSEMI(NSC,NRC,WC,TRC,SYMC,EVIBC,JAN,AK,SS)
      SUM(II,L)=SS
      SUMC(II)=SUMC(II)+GL*SUM(II,L)
      IF(NANH.EQ.0)GO TO 540
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CC)
      ASUM(II,L)=SUM(II,L)*CC
      ASUMC(II)=ASUMC(II)+GL*ASUM(II,L)
  540 CONTINUE
      GO TO 580
C
C        CLASSICAL METHOD
C
  550 IF(KROT.EQ.-1)GO TO 560
      IF(JNOW.EQ.0)GO TO 560
      CALL CLACK(EC,AJ,NSC,NRC,WC,TC,TRC,SYMC,NANH,DAC,
     *JAN,AK,SS,ASS)
      SUMC(II)=SS
      IF(NANH.EQ.0)GO TO 580
      ASUMC(II)=ASS
      GO TO 580
  560 DO 570 L=0,JNOW
      AL=DBLE(L)
      SUM(II,L)=0.0
      ASUM(II,L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=EC-EJKC
      IF(EVIBC.LE.0.0)GO TO 570
      CALL CLASS(NSC,NRC,WC,TRC,SYMC,EVIBC,JAN,AK,SS)
      SUM(II,L)=SS
      IF(NANH.EQ.0)GO TO 570
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CC)
      ASUM(II,L)=SUM(II,L)*CC
  570 CONTINUE
      IF(KROT.NE.0)GO TO 580
      IF(JNOW.GT.0)GO TO 580
      SUMC(II)=SUM(II,0)
      IF(NANH.EQ.0)GO TO 580
      ASUMC(II)=ASUM(II,0)
C
C        *****CALCULATION OF RATE CONSTANT(E,J)*****
C
  580 IF(KROT.EQ.-1)GO TO 582
      IF(DENM(II).EQ.0.0)GO TO 585
      RK(II)=CON1*SIGMA*SUMC(II)/DENM(II)
      IF(NANH.EQ.0)GO TO 585
      IF(ADENM(II).EQ.0.0)GO TO 585
      ARK(II)=CON1*SIGMA*ASUMC(II)/ADENM(II)
      GO TO 585
  582 DO 583 L=0,JNOW
      IF(DEN(II,L).EQ.0.0)GO TO 583
      RRK(II,L)=CON1*SIGMA*SUM(II,L)/DEN(II,L)
      IF(NANH.EQ.0)GO TO 583
      IF(ADEN(II,L).EQ.0.0)GO TO 583
      ARRK(II,L)=CON1*SIGMA*ASUM(II,L)/ADEN(II,L)
  583 CONTINUE
  585 II=II+1
      CONTINUE
  586 CONTINUE
      NTOT=II-1
C
C        *****PRINT OUT THE RESULTS*****
C
  590 WRITE(6,25)
      WRITE(6,26)
      WRITE(6,27)KROT,NANH,NCRIT,JDEN,JSUM
      IF(KROT.EQ.-1)GO TO 596
      IF(NANH.EQ.1)GO TO 593
      WRITE(6,28)
      WRITE(6,29)
      DO 592 I=1,NTOT
      IF(DENM(I).EQ.0.0)GO TO 591
      WRITE(6,30)ETN(I),JTN(I),DENM(I),SUMC(I),RK(I)
      GO TO 592
  591 WRITE(6,41)ETN(I),JTN(I)
  592 CONTINUE
      GO TO 710
  593 WRITE(6,34)
      WRITE(6,35)
      DO 595 I=1,NTOT
      IF(DENM(I).EQ.0.0)GO TO 594
      WRITE(6,36)ETN(I),JTN(I),DENM(I),SUMC(I),RK(I),ADENM(I),
     *ASUMC(I),ARK(I)
      GO TO 595
  594 WRITE(6,41)ETN(I),JTN(I)
  595 CONTINUE
      GO TO 710
  596 IF(NANH.EQ.1)GO TO 599
      WRITE(6,31)
      WRITE(6,32)
      DO 598 I=1,NTOT
      DO 598 L=0,JTN(I)
      IF(DEN(I,L).EQ.0.0)GO TO 597
      WRITE(6,33)ETN(I),JTN(I),L,DEN(I,L),SUM(I,L),RRK(I,L)
      GO TO 598
  597 WRITE(6,42)ETN(I),JTN(I),L
  598 CONTINUE
      GO TO 710
  599 WRITE(6,37)
      WRITE(6,38)
      DO 601 I=1,NTOT
      DO 601 L=0,JTN(I)
      IF(DEN(I,L).EQ.0.0)GO TO 600
      WRITE(6,39)ETN(I),JTN(I),L,DEN(I,L),SUM(I,L),
     *RRK(I,L),ADEN(I,L),ASUM(I,L),ARRK(I,L)
      GO TO 601
  600 WRITE(6,42)ETN(I),JTN(I),L
  601 CONTINUE
      GO TO 710
C
C     HOT ATOM RATE CALCULATIONS.  THIS PROGRAM USES TECHNIQUE DESCRIBED
C     BY DON L. BUNKER; SEE JOURNAL OF CHEMICAL PHYSICS, 57, 332(1972).
C
  603 FORMAT(/,'HOT ATOM EXTERNAL ROTATIONS',//,' F MIN',10X,
     *'DELTA F',10X,' F MAX',//,F6.2,F17.2,F16.2,//,' MINIMUM',
     *' CROSS SECTION',5X,'DELTA CROSS SECTION',5X,'MAXIMUM CROSS',
     *' SECTION',//,F13.3,F24.3,F25.3,//,' MASS OF HOT ATOM',5X,
     *'MASS OF DISPLACED ATOM',5X,'MASS OF PRODUCT',//,
     *F9.3,F25.3,F23.3,//)
  604 FORMAT(/,'TRANSLATIONAL ENERGY OF INCIDENT HOT ATOM =',F7.2,
     *' KCAL/MOLE',6X,'VIBRATIONAL ENERGY OF REACTANTS =',F6.2,
     *' KCAL/MOLE',/)
  605 FORMAT('SUM AND DENSITY INCLUDE AN ANHARMONIC CORRECTION',/)
  606 FORMAT('  F',10X,'CROSS SECTION',10X,'ESTAR',10X,'EDAG',
     *8X,'J(X,Y OR Z)',7X,'DENSITY',10X,'SUM',12X,'RATE CONSTANT')
  607 FORMAT(/,34X,'KCAL/MOLE',6X,'KCAL/MOLE',8X,'H-BAR',//)
  608 FORMAT(F5.2,F17.2,F20.2,F15.2,E16.4,E16.4,E16.4,E18.4)
  609 FORMAT(F5.2,F17.2,F20.2,'  CALCULATION CAN NOT BE MADE,',
     *' ESTAR IS NEGATIVE')
  610 FORMAT(F5.2,F17.2,F20.2,F15.2,E16.4,'  CALCULATION CAN NOT',
     *' BE MADE EDAG IS NEGATIVE')
  611 WRITE(6,603)FMIN,DELFO,FMAX,CSMIN,DELCS,CSMAX,WR,WA,WP
      WRITE(6,25)
      WRITE(6,26)
      WRITE(6,27)KROT,NANH,NCRIT,JDEN,JSUM
      DO 700 I=1,NE
      ETRAN=E(I)
      ETRN=ETRAN*349.755
      EVIB=EVIBR*349.755
      EZER=VC*349.755
      WRITE(6,604)ETRAN,EVIBR
      IF(NANH.EQ.0)GO TO 615
      WRITE(6,605)
  615 WRITE(6,606)
      WRITE(6,607)
      IF((TM(3)-0.00005).GT.0.0)GO TO 620
      DUM1M=(1.0/TM(1)+1.0/TM(2))*4.0/3.1416**3.0
      DUM1C=(1.0/TC(1)+1.0/TC(2))*4.0/3.1416**3.0
      GO TO 625
  620 DUM1M=(1.0/TM(1)+1.0/TM(2)+1.0/TM(3))/4.0/3.1416
      DUM1C=(1.0/TC(1)+1.0/TC(2)+1.0/TC(3))/4.0/3.1416
  625 F=FMIN
  630 ALPHA=(WR**0.5-((1.0-F)*WA*WP/(WA+WP))**0.5)**2.0
      DUM2=F*ETRN+EVIB
      CS=CSMIN
  635 DUM3=CS*ETRN*ALPHA
      ANGU=DUM3*2.0*3.1416*2.99792458E+10
      ANGUR=(ANGU/6.02214E+23/1.0E+16/6.62608E-27)**0.5
      ESTR=DUM2-DUM3*DUM1M
      ESTAR=ESTR/349.755
      IF(ESTR.LE.0)GO TO 675
      EDG=DUM2-EZER-DUM3*DUM1C
      EDAG=EDG/349.755
      IF(EDG.LE.0)GO TO 680
      IF(JDEN.GE.0)GO TO 640
      YY=ESTR-50.0
      CALL SUMQ(YY,NSM,NRM,WM,TRM,SYMM,SS)
      SUM1=SS
      YY=YY+100
      CALL SUMQ(YY,NSM,NRM,WM,TRM,SYMM,SS)
      SUM2=SS
      DENM(I)=(SUM2-SUM1)/100.0
      GO TO 655
  640 JAN=0
      AK=0.0
      IF(JDEN.GT.0)GO TO 650
      CALL WRSEMI(NSM,NRM,WM,TRM,SYMM,ESTR,JAN,AK,DD)
      DENM(I)=DD
      GO TO 655
  650 CALL CLASS(NSM,NRM,WM,TRM,SYMM,ESTR,JAN,AK,DD)
      DENM(I)=DD
  655 IF(JSUM.GE.0)GO TO 660
      YY=EDG
      CALL SUMQ(YY,NSC,NRC,WC,TRC,SYMC,SS)
      SUMC(I)=SS
      GO TO 670
  660 JAN=1
      AK=0.0
      IF(JSUM.GT.0)GO TO 665
      CALL WRSEMI(NSC,NRC,WC,TRC,SYMC,EDG,JAN,AK,SS)
      SUMC(I)=SS
      GO TO 670
  665 CALL CLASS(NSC,NRC,WC,TRC,SYMC,EDG,JAN,AK,SS)
      SUMC(I)=SS
  670 IF(NANH.EQ.0)GO TO 673
      KAN=0
      CALL ANHARM(NSM,NRM,WM,DAM,KAN,ESTR,CM)
      DENM(I)=DENM(I)*CM
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EDG,CC)
      SUMC(I)=SUMC(I)*CC
  673 RK(I)=CON1*SIGMA*SUMC(I)/DENM(I)
      WRITE(6,608)F,CS,ESTAR,EDAG,ANGUR,DENM(I),SUMC(I),RK(I)
      GO TO 685
  675 WRITE(6,609)F,CS,ESTAR
      GO TO 685
  680 WRITE(6,610)F,CS,ESTAR,EDAG,ANGUR
  685 CS=CS+DELCS
      IF(CS.LE.CSMAX)GO TO 635
      F=F+DELF
      IF(F.LE.FMAX)GO TO 630
  690 WRITE(6,25)
  700 CONTINUE
      GO TO 920
C
C     CALCULATE TRANSLATIONAL ENERGY DISTRIBUTION OF PRODUCTS
C
  701 FORMAT('TRANSLATIONAL ENERGY DISTRIBUTION OF THE PRODUCTS',
     *' FROM THE UNIMOLECULAR REACTION')
  702 FORMAT('INTERNAL ENERGY AVAILABLE FOR TRANSLATION =',F7.2,
     *' KCAL/MOLE',/)
  703 FORMAT(5X,'J',10X,'TRANSLATIONAL ENERGY OF PRODUCTS',10X,
     *'PROBABILITY OF TRANSLATIONAL ENERGY(PER KCAL/MOLE)',/)
  704 FORMAT(I6,10X,F16.2,26X,E18.4)
  705 FORMAT(5X,'J',5X,'K',10X,'TRANSLATIONAL ENERGY OF PRODUCTS',
     *10X,'PROBABILITY OF TRANSLATIONAL ENERGY(PER KCAL/MOLE)',/)
  706 FORMAT(2I6,10X,F16.2,26X,E18.4)
  707 FORMAT(/,' AVERAGE TRANSLATIONAL ENERGY =',F6.2,' KCAL/MOLE')
  708 FORMAT(I6,10X,F16.2,'PROBABILITY CANNOT BE CALCLUATED,',
     *' BECAUSE THE SUM OF STATES AT THIS TRANSLATIONAL ENERGY IS 0')
  709 FORMAT(2I6,10X,F16.2,'PROBABILITY CANNOT BE CALCLUATED,',
     *' BECAUSE THE SUM OF STATES AT THIS TRANSLATIONAL ENERGY IS 0')
  710 READ(5,3)NTRAN
      IF(NTRAN.EQ.0)GO TO 920
      WRITE(6,25)
      WRITE(6,25)
      WRITE(6,26)
      READ(5,3)NEDG
      READ(5,4)(EDAGG(I),I=1,NEDG)
      WRITE(6,701)
      DO 840 I=1,NEDG
      DELEDG=EDAGG(I)/50.0
      EE(1)=EDAGG(I)-DELEDG/2.0
      DO 715 J=2,50
  715 EE(J)=EE(J-1)-DELEDG
      DO 840 MJ=1,NJ
      JNOW=JK(MJ)
      AJ=DBLE(JNOW)
      GGC=0.0
      JAN=1
      AK=0.0
      GL=1.0
      ESUM=EDAGG(I)*349.755
      IF(JSUM-0)720,730,740
C
  720 DO 725 L=0,JNOW
      AL=DBLE(L)
      GG(L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=ESUM-EJKC
      CALL SUMQ(EVIBC,NSC,NRC,WC,TRC,SYMC,SS)
      GG(L)=SS
      IF(NANH.EQ.0)GO TO 725
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CG)
      GG(L)=CG*GG(L)
  725 GGC=GGC+GL*GG(L)
      GO TO 760
C
  730 DO 735 L=0,JNOW
      AL=DBLE(L)
      GG(L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=ESUM-EJKC
      IF(EVIBC.LE.0.0)GO TO 735
      CALL WRSEMI(NSC,NRC,WC,TRC,SYMC,EVIBC,JAN,AK,SS)
      GG(L)=SS
      IF(NANH.EQ.0)GO TO 735
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CG)
      GG(L)=CG*GG(L)
  735 GGC=GGC+GL*GG(L)
      GO TO 760
C
  740 IF(KROT.EQ.-1)GO TO 750
      IF(JNOW.EQ.0)GO TO 750
      CALL CLACK(ESUM,AJ,NSC,NRC,WC,TC,TRC,SYMC,NANH,DAC,
     *JAN,AK,SS,ASS)
      IF(NANH.NE.0)GO TO 745
      GGC=SS
      GO TO 760
  745 GGC=ASS
      GO TO 760
  750 DO 755 L=0,JNOW
      AL=DBLE(L)
      GG(L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=ESUM-EJKC
      IF(EVIBC.LE.0.0)GO TO 755
      CALL CLASS(NSC,NRC,WC,TRC,SYMC,EVIBC,JAN,AK,SS)
      GG(L)=SS
      IF(NANH.EQ.0)GO TO 755
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CG)
      GG(L)=CG*GG(L)
  755 CONTINUE
      IF(KROT.EQ.-1)GO TO 760
      IF(JNOW.GT.0)GO TO 760
      GGC=GG(0)
C
  760 DO 810 J=0,50
      EDEN=EE(J)*349.755
      JAN=0
      AK=0.0
      GL=1.0
      GNC(J)=0.0
      IF(JSUM-0)770,780,790
C
  770 DO 775 L=0,JNOW
      AL=DBLE(L)
      GN(J,L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=EDEN-EJKC
      IF(EVIBC.LE.0.0)GO TO 775
      YY=EVIBC-50.0
      CALL SUMQ(YY,NSC,NRC,WC,TRC,SYMC,SS)
      SUM1=SS
      YY=YY+100.0
      CALL SUMQ(YY,NSC,NRC,WC,TRC,SYMC,SS)
      SUM2=SS
      GN(J,L)=(SUM2-SUM1)/100.0
      IF(NANH.EQ.0)GO TO 775
      KAN=0
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CD)
      GN(J,L)=CD*GN(J,L)
  775 GNC(J)=GNC(J)+GL*GN(J,L)
      GO TO 810
C
  780 DO 785 L=0,JNOW
      AL=DBLE(L)
      GN(J,L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=EDEN-EJKC
      IF(EVIBC.LE.0.0)GO TO 785
      CALL WRSEMI(NSC,NRC,WC,TRC,SYMC,EVIBC,JAN,AK,DD)
      GN(J,L)=DD
      IF(NANH.EQ.0)GO TO 785
      KAN=0
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CD)
      GN(J,L)=CD*GN(J,L)
  785 GNC(J)=GNC(J)+GL*GN(J,L)
      GO TO 810
C
  790 IF(KROT.EQ.-1)GO TO 800
      IF(JNOW.EQ.0)GO TO 800
      CALL CLACK(EDEN,AJ,NSC,NRC,WC,TC,TRC,SYMC,NANH,DAC,
     *JAN,AK,DD,ADD)
      IF(NANH.NE.0)GO TO 795
      GNC(J)=DD
      GO TO 810
  795 GNC(J)=ADD
      GO TO 810
  800 DO 805 L=0,JNOW
      AL=DBLE(L)
      GN(J,L)=0.0
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=EDEN-EJKC
      IF(EVIBC.LE.0.0)GO TO 805
      CALL CLASS(NSC,NRC,WC,TRC,SYMC,EVIBC,JAN,AK,DD)
      GN(J,L)=DD
      IF(NANH.EQ.0)GO TO 805
      KAN=0
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CD)
      GN(J,L)=CD*GN(J,L)
  805 CONTINUE
      IF(KROT.EQ.-1)GO TO 810
      IF(JNOW.GT.0)GO TO 810
      GNC(J)=GN(J,0)
C
 
  810 CONTINUE
      WRITE(6,25)
      WRITE(6,702)EDAGG(I)
      EAVE=0.0
      ENORM=0.0
      IF(KROT.EQ.-1)GO TO 814
      WRITE(6,703)
      GO TO 815
  814 WRITE(6,705)
  815 DO 830 J=1,50
      EN=EDAGG(I)-EE(J)
      IF(KROT.EQ.-1)GO TO 817
      IF(GGC.EQ.0.0)GO TO 816
      PET=GNC(J)/GGC*349.755
      WRITE(6,704)JNOW,EN,PET
      GO TO 820
  816 WRITE(6,708)JNOW,EN
      GO TO 820
  817 PETT=0.0
      GL=1.0
      DO 819 L=0,JNOW
      IF(L.GT.0)GL=2.0
      IF(GG(L).EQ.0.0)GO TO 818
      PET=GN(J,L)/GG(L)*349.755
      WRITE(6,706)JNOW,L,EN,PET
      PETT=PETT+GL*PET
      GO TO 819
  818 WRITE(6,709)JNOW,L,EN
  819 CONTINUE
      PET=PETT
  820 EAVE=EAVE+EN*PET
      ENORM=ENORM+PET
  830 CONTINUE
      EAVE=EAVE/ENORM
      WRITE(6,707)EAVE
  840 CONTINUE
C
C
      WRITE(6,25)
      GO TO 999
  920 STOP
      END
C
C
C        ******************************
C
      SUBROUTINE CCDETR(NSC,NRC,WC,JJ,WCC,TRC,SYMC,KK,
     *TRCC,TC,LL,TCC,M,RDAG,DELR,VRDAG,E,J,KROT,NANH,
     *DAC,JSUM,RDAGG,VG,WCG,TRCG,TCG,JOKER)
C
C     THIS SUBROUTINE DETERMINES THE POSITION OF THE TRANSITION
C     STATE BY MINIMUM NUMBER OF STATES
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION WC(100),WCC(50,100),TRC(5),SYMC(5),TRCC(2,100),
     *TC(3),TCC(3,100),VRDAG(100),RDAG(100),SUM(100),
     *WCCG(50),WCG(100),TRCCG(2),TRCG(5),TCCG(3),TCG(3),C3WCC(50),
     *C2WCC(50),C1WCC(50),C3TRCC(2),C2TRCC(2),C1TRCC(2),C3TCC(3),
     *C2TCC(3),C1TCC(3)
C
C     DEFINITION OF ARRAYS PRODUCED IN THIS SUBROUTINE.  THEY ARE NOT
C     DEFINED IN THE MAIN PROGRAM
C        C3SUM,C2SUM,C1SUM*****        THE CONSTANTS IN THE QUADRADIC
C        EQUATION FOR FITTING THE SUM OF STATES.
C        C3WCC,C2WCC,C1WCC*****        THE CONSTANTS IN THE QUADRATIC
C        EQUATION FOR FITTING THE FLAGGED FREQUENCIES.  DIMENSION IS SET
C        FOR A MAXIMUM OF 50 FLAGGED FREQUENCIES.
C        C3TRCC,C2TRCC,C1TRCC*****     THE CONSTANTS IN THE QUADRATIC
C        EQUATION FOR FITTING THE FLAGGED REDUCED MOMENTS OF INERTIA.
C        DIMENSION IS SET FOR A MAXIMUM OF 2 FLAGGED REDUCED MOMENTS OF
C        INERTIA.
C        C3TCC,C2TCC,C1TCC*****        THE CONSTANTS IN THE QUADRATIC
C        EQUATION FOR FITTING THE FLAGGED PRINCIPAL MOMENTS OF INERTIA.
C        DIMENSION IS SET FOR A MAXIMUM OF 3 FLAGGED PRINCIPAL MOMENTS
C        OF INERTIA.
C        C3V,C2V,C1V*****              THE CONSTANTS IN THE QUADRATIC
C        EQUATION FOR FITTING THE CLASSICAL POTENTIAL.
C
C
      AJ=DBLE(J)
      JOKER=0
      K=1
    1 IF(JJ.EQ.0) GO TO 3
      DO 2 I=1,JJ
      L=NSC-JJ+I
    2 WC(L)=WCC(I,K)
    3 IF(KK.EQ.0) GO TO 5
      DO 4 I=1,KK
      MM=NRC-KK+I
    4 TRC(MM)=TRCC(I,K)
    5 IF(LL.EQ.0) GO TO 7
      DO 6 I=1,LL
      N=3-LL+I
    6 TC(N)=TCC(I,K)
    7 EC=E*349.755-VRDAG(K)*349.755
      JAN=1
      AK=0.0
      GL=1.0
      SUM(K)=0.0
C
      IF(JSUM-0)10,30,50
C
C        DIRECT COUNT
C
   10 DO 20 L=0,J
      AL=DBLE(L)
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=EC-EJKC
      CALL SUMQ(EVIBC,NSC,NRC,WC,TRC,SYMC,SS)
      IF(NANH.EQ.0)GO TO 15
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CC)
      SS=SS*CC
   15 SUM(K)=SUM(K)+GL*SS
   20 CONTINUE
      GO TO 72
C
C        SEMICLASSICAL METHOD
C
   30 DO 40 L=0,J
      AL=DBLE(L)
      IF(L.GT.0)GL=2.0
      CALL ROEN(TC,AJ,AL,EJKC)
      EVIBC=EC-EJKC
      IF(EVIBC.LE.0.0)GO TO 40
      CALL WRSEMI(NSC,NRC,WC,TRC,SYMC,EVIBC,JAN,AK,SS)
      IF(NANH.EQ.0)GO TO 35
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EVIBC,CC)
      SS=SS*CC
   35 SUM(K)=SUM(K)+GL*SS
   40 CONTINUE
      GO TO 72
C
C        CLASSICAL METHOD
C
   50 IF(J.EQ.0)GO TO 60
      CALL CLACK(EC,AJ,NSC,NRC,WC,TC,TRC,SYMC,NANH,DAC,
     *JAN,AK,SS,ASS)
      IF(NANH.NE.0)GO TO 55
      SUM(K)=SS
      GO TO 72
   55 SUM(K)=ASS
      GO TO 72
   60 CALL CLASS(NSC,NRC,WC,TRC,SYMC,EC,JAN,AK,SS)
      SUM(K)=SS
      IF(NANH.EQ.0)GO TO 72
      KAN=1
      CALL ANHARM(NSC,NRC,WC,DAC,KAN,EC,CC)
      SUM(K)=SUM(K)*CC
C
   72 IF(SUM(K).EQ.0.0)GO TO 104
   73 IF(K.GT.1)GO TO 74
      KO=1
      GO TO 75
   74 IF(SUM(K).GT.SUM(KO))GO TO 75
      KO=K
   75 K=K+1
      IF(K.GT.M)GO TO 76
      GO TO 1
   76 IF(KO.EQ.1)GO TO 93
      IF(KO.EQ.M)GO TO 93
      DENOM=RDAG(KO+1)**2.0-2.0*RDAG(KO)**2.0+RDAG(KO-1)**2.0
      UPPER=RDAG(KO+1)**2.0-RDAG(KO)**2.0
      C3SUM=(SUM(KO+1)-2.0*SUM(KO)+SUM(KO-1))/DENOM
      C2SUM=(SUM(KO+1)-SUM(KO)-C3SUM*UPPER)/DELR
      C1SUM=SUM(KO-1)-C2SUM*RDAG(KO-1)-C3SUM*RDAG(KO-1)**2.0
      RDAGG=-C2SUM/2.0/C3SUM
      SUMG=C1SUM+C2SUM*RDAGG+C3SUM*RDAGG**2.0
      IF(JJ.EQ.0)GO TO 78
      DO 77 I=1,JJ
      C3WCC(I)=(WCC(I,KO+1)-2.0*WCC(I,KO)+WCC(I,KO-1))/DENOM
      C2WCC(I)=(WCC(I,KO+1)-WCC(I,KO)-C3WCC(I)*UPPER)/DELR
      C1WCC(I)=WCC(I,KO-1)-C2WCC(I)*RDAG(KO-1)-C3WCC(I)*RDAG(KO-1)
     ***2.0
      WCCG(I)=C1WCC(I)+C2WCC(I)*RDAGG+C3WCC(I)*RDAGG**2.0
   77 CONTINUE
   78 IF(KK.EQ.0)GO TO 80
      DO 79 I=1,KK
      C3TRCC(I)=(TRCC(I,KO+1)-2.0*TRCC(I,KO)+TRCC(I,KO-1))/DENOM
      C2TRCC(I)=(TRCC(I,KO+1)-TRCC(I,KO)-C3TRCC(I)*UPPER)/DELR
      C1TRCC(I)=TRCC(I,KO-1)-C2TRCC(I)*RDAG(KO-1)-C3TRCC(I)*
     *RDAG(KO-1)**2.0
      TRCCG(I)=C1TRCC(I)+C2TRCC(I)*RDAGG+C3TRCC(I)*RDAGG**2.0
   79 CONTINUE
   80 IF(LL.EQ.0) GO TO 82
      DO 81 I=1,LL
      C3TCC(I)=(TCC(I,KO+1)-2.0*TCC(I,KO)+TCC(I,KO-1))/DENOM
      C2TCC(I)=(TCC(I,KO+1)-TCC(I,KO)-C3TCC(I)*UPPER)/DELR
      C1TCC(I)=TCC(I,KO-1)-C2TCC(I)*RDAG(KO-1)-C3TCC(I)*
     *RDAG(KO-1)**2.0
      TCCG(I)=C1TCC(I)+C2TCC(I)*RDAGG+C3TCC(I)*RDAGG**2.0
   81 CONTINUE
   82 C3V=(VRDAG(KO+1)-2.0*VRDAG(KO)+VRDAG(KO-1))/DENOM
      C2V=(VRDAG(KO+1)-VRDAG(KO)-C3V*UPPER)/DELR
      C1V=VRDAG(KO-1)-C2V*RDAG(KO-1)-C3V*RDAG(KO-1)**2.0
      VG=C1V+C2V*RDAGG+C3V*RDAGG**2.0
      IF(JJ.EQ.0)GO TO 84
      DO 83 I=1,JJ
      L=NSC-JJ+I
   83 WCG(L)=WCCG(I)
   84 JK=NSC-JJ
      DO 85 I=1,JK
   85 WCG(I)=WC(I)
      IF(NRC.EQ.0) GO TO 89
      IF(KK.EQ.0) GO TO 87
      DO 86 I=1,KK
      MM=NRC-KK+I
   86 TRCG(MM)=TRCCG(I)
   87 K=NRC-KK
      DO 88 I=1,K
   88 TRCG(I)=TRC(I)
   89 IF(LL.EQ.0)GO TO 91
      DO 90 I=1,LL
      N=3-LL+I
   90 TCG(N)=TCCG(I)
   91 L=3-LL
      DO 92 I=1,L
   92 TCG(I)=TC(I)
      GO TO 105
   93 JOKER=1
      RDAGG=RDAG(KO)
      IF(JJ.EQ.0)GO TO 95
      DO 94 I=1,JJ
      L=NSC-JJ+I
   94 WCG(L)=WCC(I,KO)
   95 JK=NSC-JJ
      DO 96 I=1,JK
   96 WCG(I)=WC(I)
      IF(NRC.EQ.0)GO TO 100
      IF(KK.EQ.0)GO TO 98
      DO 97 I=1,KK
      MM=NRC-KK+I
   97 TRCG(MM)=TRCC(I,KO)
   98 K=NRC-KK
      DO 99 I=1,K
   99 TRCG(I)=TRC(I)
  100 IF(LL.EQ.0)GO TO 102
      DO 101 I=1,LL
      N=3-LL+I
  101 TCG(N)=TCC(I,KO)
  102 L=3-LL
      DO 103 I=1,L
  103 TCG(I)=TC(I)
      VG=VRDAG(KO)
      GO TO 105
  104 JOKER=2
  105 RETURN
      END
C
C
C        ******************************
C
      SUBROUTINE WRSEMI(NS,NR,W,TR,SYM,E,K,AD,DS)
C
C     THIS SUBROUTINE CALCULATS SUM AND DENSITY OF STATES USING
C     THE WHITTEN RABINOVITCH SEMICLASSICAL TECHNIQUE.
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION W(100),TR(5),SYM(5)
C
      PFR=1.0
      S=DBLE(NS)
      R=DBLE(NR)
      IF(NR.EQ.0)GO TO 2
C
C        *****CALCULATION OF THE PARTITION FUNCTION FOR INT. ROTORS/(KT)
C             **R/2
C
      DO 1 I=1,NR
      PFIR=0.431694*(TR(I))**0.5/SYM(I)
    1 PFR=PFR*PFIR
C
C        *****CALCULATION OF B
C
    2 SW=0.0
      SWS=0.0
      DO 3 I=1,NS
      SWS=SWS+W(I)*W(I)
    3 SW=SW+W(I)
      SSW=SW**2.0
      BETA=(S-1.0)*(S+R/2.0)/S*SWS/SSW
C
C        *****CALCULATION OF THE ZERO-POINT ENERGY
C
      EZ=0.0
      DO 4 I=1,NS
    4 EZ=EZ+W(I)/2.0
C
C        *****CALCULATION OF THE GAMMA FUNCTION(S+R/2+1)
C               R ODD
C                   GAMMA(N+1/2)=(1*3*5 --- (2N-1)*SQRT(3.1416)/2**N)
C               R EVEN
C                   GAMMA(N+1)= N FACTORIAL
C          NOTE THAT (S+R/2) IS PUT IN WHEN THE DENSITY IS CALCULATED
C
      NRT=(NR/2)*2
      IF(NR-NRT)5,5,7
    5 NDUM=NS+NR/2
      GAMA=0.0
      DO 6 I=1,NDUM
    6 GAMA=GAMA+DLOG10(DBLE(I))
      GO TO 9
    7 NZ=NS+NR/2+1
      GAMAT=0.0
      MAX=2*NZ-1
      DO 8 I=1,MAX,2
    8 GAMAT=GAMAT+DLOG10(DBLE(I))
      GAMA=GAMAT+DLOG10(1.77245D0/2.0**NZ)
C
C        *****CALCULATION OF THE PRODUCT OF FREQUENCIES
C
    9 APRD=0.0
      DO 10 I=1,NS
   10 APRD=APRD+DLOG10(W(I))
      IF(K.EQ.0)GO TO 14
C
C        *****CALCULATION OF SUM
C
      XP=S+R/2.0-AK
      EPM=E/EZ
      IF(EPM-1.0)11,12,12
   11 WW=1.0/(5.0*EPM+2.73*EPM**0.5+3.51)
      GO TO 13
   12 XXX=-2.4191*EPM**0.25
      WW=DEXP(XXX)
   13 AA=1.0-BETA*WW
      ASU=DLOG10(PFR)-GAMA-APRD+(XP*DLOG10(E+AA*EZ))
      DS=10.0**ASU
      GO TO 18
C
C        *****CALCULATION OF DENSITY
C
   14 XP=S+R/2.0-1.0
      EPM=E/EZ
      IF(EPM-1.0)15,16,16
   15 UPPER=-1.0*(5.0/EZ+1.365/E**0.5/EZ**0.5)
      DENOM=(5.0*EPM+2.73*EPM**0.5+3.51)**2.0
      DELW=UPPER/DENOM
      WW=1.0/(5.0*EPM+2.73*EPM**0.5+3.51)
      GO TO 17
   16 UPPER=-0.60478/E**0.75
      DENOM=EZ**0.25
      XXX=-2.4191*EPM**0.25
      DELW=UPPER/DENOM*DEXP(XXX)
      WW=DEXP(XXX)
   17 AA=1.0-BETA*WW
      ADUM=DLOG10(PFR)+DLOG10(S+R/2.0)-GAMA-APRD
      ADEN=ADUM+(XP*DLOG10(E+AA*EZ))+DLOG10(1.0-EZ*BETA*DELW)
      DS=10.0**ADEN
   18 RETURN
      END
C
C
      SUBROUTINE BSCOMP(NS,W,MAX,DEL,T)
C
C     THIS SUBROUTINE MAKES BEYER-SWINHART ALGORITHM
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION W(100),T(50000),NR(100)
C
C        *****CALCULATION OF EFFECTIVE INTEGER FOR EACH FREQUENCY
C
      DO 1 I=1,NS
      NR(I)=W(I)/DEL+0.499999
    1 CONTINUE
C
C        *****INITIALIZE T ARRAY
C
      T(1)=1.0
      DO 2 I=2,MAX
      T(I)=0.0
    2 CONTINUE
C
C        *****ADDITION SEQUENCE FOR THE T ARRAY.  EMAX=(MAX-1)*DEL
C
      DO 4 I=1,NS
      M=1
    3 MNR=NR(I)+M
      IF(MNR.GT.MAX)GO TO 4
      T(MNR)=T(M)+T(MNR)
      M=M+1
      GO TO 3
    4 CONTINUE
C
C        *****CONVERT SUM AT E TO SUM FOR E=0 TO E
C
      DO 5 I=2,MAX
      T(I)=T(I)+T(I-1)
    5 CONTINUE
      RETURN
      END
C
C
      SUBROUTINE CLASS(NS,NR,W,TR,SYM,E,K,AK,DS)
C
C     THIS SUBROUTINE CALCULATES SUM AND DENSITY OF STATES
C     CLASSICALLY.
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION W(100),TR(5),SYM(5)
C
C        *****CALCULATION OF THE PARTITION FUNCTION FOR INT.
C             ROTORS/(KT)**R/2
C
      PFR=1.0
      S=DBLE(NS)
      R=DBLE(NR)
      IF(NR.EQ.0)GO TO 2
      DO 1 I=1,NR
      PFIR=0.431694*(TR(I))**0.5/SYM(I)
    1 PFR=PFR*PFIR
C
C        *****CALCULATION OF THE GAMMA FUNCTION
C
    2 NRT=(NR/2)*2
      IF(NR-NRT)3,3,5
    3 NDUM=NS+NR/2-1+K
      GAMA=0.0
      DO 4 I=1,NDUM
    4 GAMA=GAMA+DLOG10(DBLE(I))
      GO TO 7
    5 NZ=NS+NR/2+K
      GAMAT=0.0
      MAX=2*NZ-1
      DO 6 I=1,MAX,2
    6 GAMAT=GAMAT+DLOG10(DBLE(I))
      GAMA=GAMAT+DLOG10(1.77245D0/2.0**NZ)
C
C        *****CALCULATION OF THE PRODUCT OF FREQUENCIES
C
    7 APRD=0.0
      DO 8 I=1,NS
    8 APRD=APRD+DLOG10(W(I))
C
C        *****CALCULATION OF SUM OR DENSITY OF STATES
C
      XP=S+R/2.0-1.0+DBLE(K)-AK
      DS=DLOG10(PFR)+XP*DLOG10(E)-GAMA-APRD
      DS=10.0**DS
      RETURN
      END
C
C
      SUBROUTINE ROEN(T,AJ,AK,EROT)
C
C     THIS SUBROUTINE CALCULATES THE ROTATIONAL ENERGY
C     FOR THE SYMMETRY(ALMOST SYMMETRY) TOP MOLECULE EROT(J,K)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION T(3)
C
      TABIN=0.5*(1.0/T(1)+1.0/T(2))
      EROT=16.8577*(AJ*(AJ+1.0)*TABIN+AK**2.0*(1.0/T(3)-TABIN))
      RETURN
      END
C
C
      SUBROUTINE SUMQ(E,NS,NR,W,TR,SYM,SUM)
C
C     THIS SUBROUTINE MAKES A DIRECT COUNT OF QUANTUM STATES
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION W(100),TR(5),SYM(5),T(50000),X(8),WW(8),SS(8)
C
      DATA X/.0198550718,.1016667613,.2372337950,.4082826788,
     *.5917173212,.7627662050,.8983332387,.9801449282/
      DATA WW/.0506142681,.1111905172,.1568533229,.1813418917,
     *.1813418917,.1568533229,.1111905172,.0506142681/
C
      DEL=1.0
      MAX=20
C
C         *****CLACULATE THE SUM OF STATES WITH NO INTERNAL ROTOR*****
C
      IF(E-0.0)1,2,2
    1 SUM=0.0
      GO TO 15
    2 IF(NR.NE.0)GO TO 3
      MAXT=E/DEL+0.499999
      MAXT=MAXT+MAX
      CALL BSCOMP(NS,W,MAXT,DEL,T)
      NDELT=E/DEL
      DUM1=T(NDELT+2)-T(NDELT+1)
      DUM2=E/DEL-DBLE(NDELT)
      SUM=T(NDELT+1)+DUM1*DUM2
      GO TO 15
C
   3  R=DBLE(NR)
      PFR=1.0
C
C     *****CALCULATION OF THE PARTITION FUNCTION FOR INTERNAL ROTORS
C          /(KT)**R/2
C
      DO 4 I=1,NR
      PFIR=0.431694*(TR(I))**0.5/SYM(I)
    4 PFR=PFR*PFIR
C
C     *****CALCULATE GAMMA FUNCTION OF R/2
C
      NRT=(NR/2)*2
      IF(NR-NRT)5,5,7
    5 NDUM=NR/2-1
      GAMA=1.0
      DO 6 I=1,NDUM
    6 GAMA=GAMA*DBLE(I)
      GO TO 9
    7 NZ=NR/2
      GAMAT=1.0
      MAXX=2*NZ-1
      DO 8 I=1,MAXX,2
    8 GAMAT=GAMAT*DBLE(I)
      GAMA=GAMAT*1.77245/2.0**NZ
C
C        *****CALCULATE THE SUM OF STATES WITH INTERNAL ROTOR*****
C
    9 SSM=0.0
      RR=R/2.0-1.0
      DO 10 I=1,8
      EE=E*X(I)
      MAXT=EE/DEL+0.499999
      MAXT=MAXT+MAX
      CALL BSCOMP(NS,W,MAXT,DEL,T)
      NDELT=EE/DEL
      DUM1=T(NDELT+2)-T(NDELT+1)
      DUM2=EE/DEL-DBLE(NDELT)
      SS(I)=T(NDELT+1)+DUM1*DUM2
      SSM=SSM+SS(I)*WW(I)*E*(E-EE)**RR
   10 CONTINUE
      SUM=SSM*PFR/GAMA
   15 RETURN
      END
C
C
      SUBROUTINE CLACK(E,AJ,NS,NR,W,T,TR,SYM,NANH,DA,JAN,AL,
     *CHAN,ACHAN)
C
C     THIS SUBROUTINE CALCULATE THE SUM OF STATES G(E,J) OR
C     DENSITY OF STATES N(E,J) FOR ACTIVE QUANTUM NUMBER K;
C     SEE JOURNAL OF CHEMICAL PHYSICS,95,8073(1991).
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION W(100),T(3),TR(5),SYM(5),X(20),WW(20),AKK(20),
     *EVIB(20)
C
C
      DATA X/.0387724175,.1160840707,.1926975807,.2681521850,
     *.3419940908,.4137792044,.4830758017,.5494671251,.6125538897,
     *.6719566846,.7273182552,.7783056514,.8246122308,.8659595032,
     *.9020988070,.9328128083,.9579168192,.9772599500,.9907262387,
     *.9982377097/
      DATA WW/.0775059480,.0770398182,.0761103619,.0747231691,
     *.0728865824,.0706116474,.0679120458,.0648040135,.0613062425,
     *.0574397691,.0532278470,.0486958076,.0438709082,.0387821680,
     *.0334601953,.0279370070,.0222458492,.0164210584,.0104982845,
     *.0045212771/
C
C
      CHAN=0.0
      ACHAN=0.0
      DO 20 I=1,20
    2 AKK(I)=X(I)*AJ
      CALL ROEN(T,AJ,AKK(I),EJK)
    5 EVIB(I)=E-EJK
      IF(JAN.EQ.0)GO TO 10
C
C        *****CALCULATION OF SUM OF STATES*****
C
      IF(EVIB(I).LE.0.0)GO TO 20
    7 CALL CLASS(NS,NR,W,TR,SYM,EVIB(I),JAN,AL,SUM)
      SUMJK=SUM
      CHAN=CHAN+SUMJK*WW(I)*2.0*AJ
      IF(NANH.EQ.0)GO TO 20
      KAN=1
      CALL ANHARM(NS,NR,W,DA,KAN,EVIB(I),C)
      SUMJK=SUMJK*C
    8 ACHAN=ACHAN+SUMJK*WW(I)*2.0*AJ
      GO TO 20
C
C        *****CALCULATION OF DENSITY OF STATES*****
C
   10 IF(EVIB(I).LE.0.0)GO TO 20
   12 CALL CLASS(NS,NR,W,TR,SYM,EVIB(I),JAN,AL,DEN)
      DENJK=DEN
      CHAN=CHAN+DENJK*WW(I)*2.0*AJ
      IF(NANH.EQ.0)GO TO 20
      KAN=0
      CALL ANHARM(NS,NR,W,DA,KAN,EVIB(I),C)
      DENJK=DENJK*C
   13 ACHAN=ACHAN+DENJK*WW(I)*2.0*AJ
C
   20 CONTINUE
      RETURN
      END
C
C
      SUBROUTINE ANHARM(NS,NR,W,DA,K,E,C)
C
C     THIS SUBROUTINE CALCULATES AN ANHARMONIC CORRECTION TO THE SUM
C     AND DENSITY USING THE HAARHOFF TECHNIQUE.
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION W(100)
C
      D=DA*349.755
      S=DBLE(NS)
      R=DBLE(NR)
      AK=DBLE(K)
      AN=S+AK-1.0+R/2.0
      EZ=0.0
      DO 1 I=1,NS
    1 EZ=EZ+W(I)/2.0
      EPM=E/EZ
      SW=0.0
      SWS=0.0
      DO 2 I=1,NS
      SWS=SWS+W(I)*W(I)
    2 SW=SW+W(I)
      A=(SWS/S)/(SW/S)**2.0
      AM2=S*(4.0*S+2.5*(R+2.0*AK))/(8.0*(AN+1.0)**2.0*(AN+2.0))
      AM3=S*(24.0*S**2.0+29.5*S*(R+2.0*AK)+9.25*(R+2.0*AK)**2.0)/
     *(24.0*(AN+1.0)**3.0*(AN+2.0)*(AN+3.0))
      F1=(1.0+2.0/EPM)**((EPM/2.0)*(1.0+EPM/2.0))
      F2=DEXP(-(A-1.0)/(3.0*(1.0+EPM)))
      F3=(F1*F2)**(S*EZ/((AN+1.0)*D))
      F4=AM2*(1.0+EPM)**2.0*(EZ/D)**2.0
      F5=AM3*(1.0+EPM)**3.0*(EZ/D)**3.0
      C=F3*DEXP(F4+F5)
      RETURN
      END
C
