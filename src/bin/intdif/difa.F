C     //////////////////////////////////////////////////////////////////
      SUBROUTINE DIFA(NS,NDER,NPERM,NPAR,NPRT,NMORSE,F1,F1A,F1B,F1C,
     $ F1D,F1E,F2,F2A,F2B,F3,F3A,F3B,F4,F4A,F4B,IPAR,IPP,IPERM,IMORSE,
     + oldinp)
      IMPLICIT REAL*8 (A-H,O-Z)
#include <error.h>
      integer frdi, frdia1, frdi2, frdint, frdlpn
      integer errcod
      INTEGER IPERM(NS,0:NS),IPAR(NS,NS),IPP(NS,NS),IMORSE(NS)
      INTEGER M,N,P,Q
      logical oldinp
      LOGICAL MINUS
      DIMENSION F1(NS),F1A(NS),F1B(NS),F1C(NS),F1D(NS),F1E(NS)
      DIMENSION F2(NS,NS),F2A(NS,NS),F2B(NS,NS)
      DIMENSION F3(NS,NS,NS),F3A(NS,NS,NS),F3B(NS,NS,NS)
      DIMENSION F4(NS,NS,NS,NS),F4A(NS,NS,NS,NS),F4B(NS,NS,NS,NS)
      COMMON/IO/IIN,IOUT,I12,I16,I21,IDER,ISCR1,ISCR2
      PARAMETER (ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER (HART=4.359814445D0)
      PARAMETER (CM1=0.1296296296296D0,CM2=0.1530612245D0)
      PARAMETER (CM3=0.16074074074074D0)
      PARAMETER(F1CUT=1.0D-8,F2CUT=1.0D-6,F3CUT=1.0D-5,F4CUT=1.0D-5)
    1 FORMAT(16I5)
    2 FORMAT(/1X,'IPERM ARRAY')
    3 FORMAT(1X,'(',I2,')',20I5)
    4 FORMAT(/1X,'IPAR ARRAY')
    5 FORMAT(1X,20I5)
    6 FORMAT(/1X,'DISPLACEMENTS READ FROM FILE 12')
    7 FORMAT(I5,F12.8,F20.10)
    8 FORMAT(20X,F20.10)
    9 FORMAT(1X,'DELTA VALUES NOT EQUAL IN MAGNITUDE',I5,2F10.5)
   10 FORMAT(/1X,'ANALYTIC FIRST DERIVATIVES')
   11 FORMAT(1X,F12.8)
   12 FORMAT(/1X,'NUMERICAL FIRST DERIVATIVES')
   13 FORMAT(/1X,'NUMERICAL QUADRATIC FORCE CONSTANTS',
     $ //5X,'[1] : FROM GRADIENTS',/5X,'[0] : FROM ENERGIES',
     $ //5X,'M',4X,'N',6X,'F2(M,N) [1]',3X,'F2(M,N) [0]',6X,
     $      'ASYM [1]')
   14 FORMAT(1X,2I5,3X,F14.8,14X,F14.8)
   15 FORMAT(1X,2I5,3X,3F14.8)
   16 FORMAT(/1X,'NUMERICAL SEMIDIAGONAL CUBIC FORCE CONSTANTS')
   17 FORMAT(1X,'F3(',I2,',',I2,', N)')
   18 FORMAT(I5,F12.6)
   19 FORMAT(1X,3I5,F14.8)
   20 FORMAT(/1X,'DISPLACEMENTS READ FROM FILE 16')
   21 FORMAT(I5,5X,F12.8)
   22 FORMAT(3F20.10)
   23 FORMAT(/1X,'QUADRATIC FORCE CONSTANTS',//5X,'[2] : ANALYTIC',
     $  /5X,'[1] : FROM GRADIENTS',/5X,'[0] : FROM ENERGIES',
     $  //5X,'M',4X,'N',6X,'F2(M,N) [2]',3X,'F2(M,N) [1]',3X,
     $     'F2(M,N) [0]',2X,'ERROR [2]-[1]',5X,'ASYM [1]')
   24 FORMAT(1X,2I5,3X,2F14.8,14X,2F14.8)
   25 FORMAT(1X,2I5,3X,5F14.8)
   26 FORMAT(/1X,'NUMERICAL CUBIC FORCE CONSTANTS',
     $ //5X,'[2] : FROM SECOND DERIVATIVES',
     $  /5X,'[1] : FROM GRADIENTS'/
     $  /4X,'M',4X,'N',4X,'P',8X,'F3(M,N,P) [2]',2X,'F3(M,N,P) [1]',
     $   3X,'ASYM [2]')
   27 FORMAT(3I5,5X,3F14.8)
   28 FORMAT(3I5,5X,F14.8,14X,F14.8)
   29 FORMAT(/1X,'NUMERICAL SEMIDIAGONAL QUARTIC FORCE CONSTANTS')
   30 FORMAT(1X,'F4(',I2,',',I2,', N, P)')
   31 FORMAT(6F12.6)
   32 FORMAT(1X,4I5,3X,F14.8)
   33 FORMAT(/1X,'DISPLACEMENTS READ FROM FILE 21')
   34 FORMAT(/1X,'CUBIC FORCE CONSTANTS',
     $  //5X,'[3] : ANALYTIC',/5X,'[2] : FROM SECOND DERIVATIVES',
     $  /5X,'[1] : FROM GRADIENTS',
     $  //5X,'M',4X,'N',4X,'P',6X,'F3(M,N,P) [3]',3X,'F3(M,N,P) [2]',
     $  3X,'F3(M,N,P) [1]',4X,'ERROR [3]-[2]',5X,'ASYM [2]')
   35 FORMAT(1X,3I5,3X,5F16.8)
   36 FORMAT(1X,3I5,3X,2F16.8,16X,2F16.8)
   37 FORMAT(/1X,'NUMERICAL QUARTIC FORCE CONSTANTS',
     $ //5X,'[3] : FROM THIRD DERIVATIVES',
     $  /5X,'[2] : FROM SECOND DERIVATIVES',
     $ //5X,'M',4X,'N',4X,'P',4X,'Q',4X,'F4(M,N,P,Q) [3]',
     $   2X,'F4(M,N,P,Q) [2]',3X,'  DIF [3]-[2]',5X,'ASYM [3]')
   38 FORMAT(1X,4I5,3X,4F16.8)
   39 FORMAT(1X,4I5,3X,F16.8,32X,F16.8)
   40 FORMAT(/1X,'NUMERICAL SEMIDIAGONAL QUINTIC FORCE CONSTANTS')
   41 FORMAT(1X,'F5(',I2,',',I2,',',I2,', P, Q)')
   42 FORMAT(6F12.6)
   43 FORMAT(/'  NUMERICAL DIAGONAL QUINTIC FORCE CONSTANTS '/)
   44 FORMAT(5I5,F14.6)
   45 FORMAT(I5,15X,F20.10)
   46 FORMAT(2I5,10X,F20.10)
   47 FORMAT(3I5,5X,F20.10)
   48 FORMAT(4I5,F20.10)
   49 FORMAT(/1X,'IMORSE ARRAY')
C***********************************************************************
C   1 FORMAT(16I5)
C     DO   I=1,NPERM
C     READ(IIN,1) (IPERM(I,J),J=0,NS)
C
C     IPERM(I,0) = THE COORDINATE GENERATED BY THE I-TH SYMMETRY
C     OPERATION.  IPERM(I,J) = THE COORDINATE INTO WHICH THE J-TH
C     COORDINATE IS SENT BY THE I-TH SYMMETRY OPERATION.
C***********************************************************************
C     DO   I=1,NPAR
C     READ(IIN,1) NI
C     READ(IIN,1) (IPAR(I,J),J=1,NS)
C
C     FOR EACH COORDINATE (NI) FOR WHICH ONLY A POSITIVE DISPLACEMENT
C     IS GIVEN, IPAR(NI,J) CONTAINS THE PARITY (+1 OR -1) OF COORDINATE
C     J UNDER THE SYMMETRY OPERATION WHICH GENERATES THE -NI
C     DISPLACEMENT FROM THE +NI DISPLACEMENT.
C***********************************************************************
      NF10=0
      NF20=0
      NF30=0
      IF(NMORSE.EQ.2) then
        DO 83  I=1,NS
  83    IMORSE(I)=2
      elseif(NMORSE.EQ.0) then
        DO 81  I=1,NS
  81    IMORSE(I)=0
      endIf

      if(oldinp) then
        DO 80  I=1,NPERM
  80    READ(IIN,1) (IPERM(I,J),J=0,NS)

        DO 82  I=1,NPAR
          READ(IIN,1) NI
  82    READ(IIN,1) (IPAR(NI,J),J=1,NS)

        IF(NMORSE.eq.1) THEN
          READ(IIN,1) (IMORSE(I),I=1,NS)
        END IF
      else
        if (nmorse.eq.1) then
          errcod = frdia1('MORSE_VAL',imorse,ns)
          if(errcod.ne.0) then
            write(6,*) ' trouble reading in MORSE_VAL array'
          endif
        endif

        do 600 i=1,npar
          errcod = frdi2('POS_DISP',ni,i,1)
          errcod = frdlpn()
          if(errcod.ne.EOK) goto 901
          do 601 j=1,ns
            errcod = frdint(ipar(ni,j))
            if(errcod.ne.EOK) goto 901
  601     continue
  600   continue

        do 610 i=1,nperm
          errcod = frdi2('SYMOPS',iperm(i,0),i,1)
          errcod = frdlpn()
          if(errcod.ne.EOK) goto 902
          do 611 j=1,ns
            errcod = frdint(iperm(i,j))
            if(errcod.ne.EOK) goto 902
  611     continue
  610   continue
      endif
C
      IF(NPERM.NE.0) WRITE(IOUT,2)
      DO 86  I=1,NPERM
  86  WRITE(IOUT,3) IPERM(I,0),(IPERM(I,J),J=1,NS)
      IF(NPAR.GT.0) THEN
          WRITE(IOUT,4)
          DO 87  I=1,NS
          IF(IPAR(I,1).NE.0) THEN
          WRITE(IOUT,5) I
          WRITE(IOUT,5) (IPAR(I,J),J=1,NS)
          END IF
  87      CONTINUE
      END IF
      IF(NMORSE.NE.0) THEN
          WRITE(IOUT,49)
          WRITE(IOUT,5) (IMORSE(I),I=1,NS)
      END IF
      DO 89  I=1,NPERM
      DO 89  J=1,NS
      IPP(I,J)=ISIGN(1,IPERM(I,J))
  89  IPERM(I,J)=IABS(IPERM(I,J))
      DO 90  M=1,NS
      F1(M)=ZERO
      DO 90  N=1,NS
      F2(M,N)=ZERO
      DO 90  P=1,NS
      F3(M,N,P)=ZERO
      DO 90  Q=1,NS
  90  F4(M,N,P,Q)=ZERO
C
      WRITE(IOUT,6)
 100  READ(I12,7,END=140) NI,DELTA1,ENER1
      DO 105  M=1,NS
 105  READ(I12,8) F1A(M)
      WRITE(IOUT,7) NI,DELTA1,ENER1
      MINUS=.FALSE.
      READ(I12,7,END=1000) NJ,DELTA2,ENER2
      IF(NJ.NE.NI) THEN
          BACKSPACE I12
      ELSE
          MINUS=.TRUE.
          IF(DELTA2.NE.-DELTA1) THEN
          WRITE(IOUT,9) NI,DELTA1,DELTA2
          STOP
          END IF
      END IF
      IF(MINUS) THEN
          DO 110  M=1,NS
 110      READ(I12,8) F1B(M)
          WRITE(IOUT,7) NJ,DELTA2,ENER2
      END IF
 115  IF(NI.EQ.0) THEN
          ENER0=ENER1
          NF10=1
          DO 120  M=1,NS
 120      F1(M)=F1A(M)
          GO TO 100
      END IF
      DELTA=DELTA1
      IF(MINUS) THEN
          F1C(NI)=HART*(ENER1-ENER2)/(TWO*DELTA)
          F1D(NI)=HART*(ENER1+ENER2-TWO*ENER0)/DELTA**2
          DO 125  N=1,NS
          F2(NI,N)=(F1A(N)-F1B(N))/(TWO*DELTA)
 125      F3(NI,NI,N)=(F1A(N)+F1B(N)-TWO*F1(N))/DELTA**2
      ELSE
          F1C(NI)=ZERO
          F1D(NI)=HART*TWO*(ENER1-ENER0)/DELTA**2
          DO 130  N=1,NS
          F2(NI,N)=F1A(N)*(1-IPAR(NI,N))/(TWO*DELTA)
 130      F3(NI,NI,N)=(F1A(N)*(1+IPAR(NI,N))-TWO*F1(N))/DELTA**2
      END IF
      IF(IMORSE(NI).EQ.1) THEN
          XX=F2(NI,NI)
          YY=F3(NI,NI,NI)
          ZZ=(YY*DELTA)**2
          ZZ=-ZZ*CM1/XX
          F2(NI,NI)=F2(NI,NI)+ZZ
      ELSE IF(IMORSE(NI).EQ.2) THEN
          XX=F1D(NI)
          YY=F2(NI,NI)
          ZZ=TWO*(XX-YY)
          F2(NI,NI)=F2(NI,NI)+ZZ
      END IF
      GO TO 100
 140  DO 145  I=1,NPERM
      NI=IPERM(I,0)
      MM=IPERM(I,NI)
      F1C(NI)=F1C(MM)*IPP(I,NI)
      F1D(NI)=F1D(MM)*IPP(I,NI)
      DO 150  N=1,NS
      F2(NI,N)=F2(MM,IPERM(I,N))*IPP(I,NI)*IPP(I,N)
 150  F3(NI,NI,N)=F3(MM,MM,IPERM(I,N))*IPP(I,N)
 145  CONTINUE
      DO 155  M=1,NS
      DO 155  N=1,M
      F2A(M,N)=(F2(M,N)-F2(N,M))/TWO
 155  F2A(N,M)=-F2A(M,N)
      DO 160  M=1,NS
      DO 160  N=1,M
      F2(M,N)=(F2(M,N)+F2(N,M))/TWO
 160  F2(N,M)=F2(M,N)
      DO 162  M=1,NS
      F1E(M)=F3(M,M,M)
      DO 162  N=1,NS
      F3(M,N,M)=F3(M,M,N)
 162  F3(N,M,M)=F3(M,M,N)
      IF(NF10.EQ.1) THEN
          WRITE(IOUT,10)
          DO 164  M=1,NS
 164      WRITE(IOUT,11) F1(M)
      END IF
      IF(NPRT.GE.2) THEN
      WRITE(IOUT,12)
      DO 166  M=1,NS
 166  WRITE(IOUT,11) F1C(M)
      END IF
C
      IF(NDER.LE.1) THEN
        WRITE(IOUT,13)
        DO 170  M=1,NS
        DO 172  N=1,M-1
 172    WRITE(IOUT,14) M,N,F2(M,N),F2A(M,N)
 170    WRITE(IOUT,15) M,M,F2(M,M),F1D(M),F2A(M,M)
        IF(NF10.EQ.1) THEN
        WRITE(IOUT,16)
        DO 174  M=1,NS
        WRITE(IOUT,17) M,M
        DO 176  N=1,NS
 176    WRITE(IOUT,18) N,F3(M,M,N)
 174    CONTINUE
        END IF
        GO TO 500
      END IF
        DO 180  M=1,NS
        DO 182  N=1,M-1
 182    WRITE(ISCR1,14) M,N,F2(M,N),F2A(M,N)
 180    WRITE(ISCR1,15) M,M,F2(M,M),F1D(M),F2A(M,M)
        IF(NF10.EQ.1) THEN
        DO 190  M=1,NS
        DO 190  N=1,M
        DO 190  P=1,N
 190    WRITE(ISCR2,19) M,N,P,F3(M,N,P)
        END IF
C
      WRITE(IOUT,20)
 200  READ(I16,21,END=240) NI,DELTA1
      READ(I16,22) ((F2A(M,N),N=1,NS),M=1,NS)
      WRITE(IOUT,7) NI,DELTA1
      MINUS=.FALSE.
      READ(I16,21,END=1010) NJ,DELTA2
      IF(NJ.NE.NI) THEN
          BACKSPACE I16
      ELSE
          MINUS=.TRUE.
          IF(DELTA2.NE.-DELTA1) THEN
          WRITE(IOUT,9) NI,DELTA1,DELTA2
          STOP
          END IF
      END IF
      IF(MINUS) THEN
      READ(I16,22) ((F2B(M,N),N=1,NS),M=1,NS)
      WRITE(IOUT,7) NJ,DELTA2
      END IF
 215  IF(NI.EQ.0) THEN
          NF20=1
          DO 220  M=1,NS
          DO 220  N=1,NS
 220      F2(M,N)=F2A(M,N)
          GO TO 200
      END IF
      DELTA=DELTA1
      IF(MINUS) THEN
          DO 225  N=1,NS
          DO 225  P=1,NS
          F3(NI,N,P)=(F2A(N,P)-F2B(N,P))/(TWO*DELTA)
 225      F4(NI,NI,N,P)=(F2A(N,P)+F2B(N,P)-TWO*F2(N,P))/DELTA**2
      ELSE
          DO 230  N=1,NS
          DO 230  P=1,NS
          IX=IPAR(NI,N)*IPAR(NI,P)
          F3(NI,N,P)=F2A(N,P)*(1-IX)/(TWO*DELTA)
 230      F4(NI,NI,N,P)=(F2A(N,P)*(1+IX)-TWO*F2(N,P))/DELTA**2
      END IF
      IF(IMORSE(NI).EQ.1) THEN
          XX=F3(NI,NI,NI)
          YY=F4(NI,NI,NI,NI)
          ZZ=(YY*DELTA)**2
          ZZ=-ZZ*CM2/XX
          F3(NI,NI,NI)=F3(NI,NI,NI)+ZZ
      ELSE IF(IMORSE(NI).EQ.2) THEN
          XX=F1E(NI)
          YY=F3(NI,NI,NI)
          ZZ=TWO*(XX-YY)
          F3(NI,NI,NI)=F3(NI,NI,NI)+ZZ
      END IF
      GO TO 200
 240  DO 245  I=1,NPERM
      NI=IPERM(I,0)
      MM=IPERM(I,NI)
      DO 250  N=1,NS
      DO 250  P=1,NS
      IPQ=IPP(I,N)*IPP(I,P)
      IPR=IPQ*IPP(I,NI)
      F3(NI,N,P)=F3(MM,IPERM(I,N),IPERM(I,P))*IPR
 250  F4(NI,NI,N,P)=F4(MM,MM,IPERM(I,N),IPERM(I,P))*IPQ
 245  CONTINUE
      DO 255  M=1,NS
      DO 255  N=1,M
      DO 255  P=1,N
 255  F3A(M,N,P)=(TWO*F3(M,N,P)-F3(N,M,P)-F3(P,N,M))/THREE
      DO 260  M=1,NS
      DO 260  N=1,M
      DO 260  P=1,N
 260  F3(M,N,P)=(F3(M,N,P)+F3(N,M,P)+F3(P,N,M))/THREE
      DO 265  M=1,NS
      F1E(M)=F4(M,M,M,M)
      DO 265  N=1,NS
      DO 265  P=1,NS
      F4(M,N,M,P)=F4(M,M,N,P)
      F4(M,N,P,M)=F4(M,M,N,P)
      F4(N,M,M,P)=F4(M,M,N,P)
      F4(N,M,P,M)=F4(M,M,N,P)
 265  F4(N,P,M,M)=F4(M,M,N,P)
        IF(NF20.EQ.1) THEN
            REWIND ISCR1
            WRITE(IOUT,23)
            DO 270  M=1,NS
            DO 272  N=1,M-1
            READ(ISCR1,15) MM,NN,X,Y,Z
            W=F2(M,N)-X
 272        WRITE(IOUT,24) M,N,F2(M,N),X,W,Z
            READ(ISCR1,15) MM,NN,X,Y,Z
            W=F2(M,M)-X
 270        WRITE(IOUT,25) M,N,F2(M,N),X,Y,W,Z
        END IF
      IF(NDER.LE.2) THEN
        REWIND ISCR2
        WRITE(IOUT,26)
        DO 276  M=1,NS
        DO 276  N=1,M
        DO 276  P=1,N
        READ(ISCR2,19) LL,MM,NN,X
         IF(M.EQ.N.OR.N.EQ.P.OR.M.EQ.P) THEN
           WRITE(IOUT,27) M,N,P,F3(M,N,P),X,F3A(M,N,P)
         ELSE
           WRITE(IOUT,28) M,N,P,F3(M,N,P),F3A(M,N,P)
         END IF
 276    CONTINUE
        IF(NF20.EQ.1) THEN
        WRITE(IOUT,29)
        DO 278  M=1,NS
        WRITE(IOUT,30) M,M
        DO 280  N=1,NS
 280    WRITE(IOUT,31) (F4(M,M,N,P),P=1,NS)
 278    CONTINUE
        END IF
        GO TO 500
      END IF
        REWIND ISCR1
        REWIND ISCR2
        DO 285  M=1,NS
        DO 285  N=1,M
        DO 285  P=1,N
        READ(ISCR2,19) LL,MM,NN,X
         IF(M.EQ.N.OR.N.EQ.P.OR.M.EQ.P) THEN
           WRITE(ISCR1,27) M,N,P,F3(M,N,P),X,F3A(M,N,P)
         ELSE
           WRITE(ISCR1,28) M,N,P,F3(M,N,P),F3A(M,N,P)
         END IF
 285    CONTINUE
        IF(NF20.EQ.1) THEN
        DO 290  M=1,NS
        DO 290  N=1,M
        DO 290  P=1,N
        DO 290  Q=1,P
 290    WRITE(ISCR1,32) M,N,P,Q,F4(M,N,P,Q)
        END IF
C
      WRITE(IOUT,33)
 300  READ(I21,21,END=350) NI,DELTA1
      READ(I21,22) (((F3A(M,N,P),P=1,N),N=1,M),M=1,NS)
      WRITE(IOUT,7) NI,DELTA1
      DO 305  M=1,NS
      DO 305  N=1,M
      DO 305  P=1,N
      XX=F3A(M,N,P)
      F3A(N,M,P)=XX
      F3A(N,P,M)=XX
      F3A(M,P,N)=XX
      F3A(P,M,N)=XX
 305  F3A(P,N,M)=XX
      MINUS=.FALSE.
      READ(I21,21,END=1020) NJ,DELTA2
      IF(NJ.NE.NI) THEN
          BACKSPACE I21
      ELSE
          MINUS=.TRUE.
          IF(DELTA2.NE.-DELTA1) THEN
          WRITE(IOUT,9) NI,DELTA1,DELTA2
          STOP
          END IF
      END IF
      IF(MINUS) THEN
      READ(I21,22) (((F3B(M,N,P),P=1,N),N=1,M),M=1,NS)
      WRITE(IOUT,7) NJ,DELTA2
      END IF
      DO 310  M=1,NS
      DO 310  N=1,M
      DO 310  P=1,N
      XX=F3B(M,N,P)
      F3B(N,M,P)=XX
      F3B(N,P,M)=XX
      F3B(M,P,N)=XX
      F3B(P,M,N)=XX
 310  F3B(P,N,M)=XX
 315  IF(NI.EQ.0) THEN
          NF30=1
          DO 330  M=1,NS
          DO 330  N=1,NS
          DO 330  P=1,NS
 330      F3(M,N,P)=F3A(M,N,P)
          GO TO 300
      END IF
      DELTA=DELTA1
      IF(MINUS) THEN
          DO 335  N=1,NS
          DO 335  P=1,NS
          DO 335  Q=1,NS
          F4(NI,N,P,Q)=(F3A(N,P,Q)-F3B(N,P,Q))/(TWO*DELTA)
 335      F4B(NI,N,P,Q)=(F3A(N,P,Q)+F3B(N,P,Q)-TWO*F3(N,P,Q))/DELTA**2
      ELSE
          DO 340  N=1,NS
          DO 340  P=1,NS
          DO 340  Q=1,NS
          IX=IPAR(NI,N)*IPAR(NI,P)*IPAR(NI,Q)
          F4(NI,N,P,Q)=F3A(N,P,Q)*(1-IX)/(TWO*DELTA)
 340      F4B(NI,N,P,Q)=(F3A(N,P,Q)*(1+IX)-TWO*F3(N,P,Q))/DELTA**2
      END IF
      IF(IMORSE(NI).EQ.1) THEN
          XX=F4(NI,NI,NI,NI)
          YY=F4B(NI,NI,NI,NI)
          ZZ=(YY*DELTA)**2
          ZZ=-ZZ*CM3/XX
          F4(NI,NI,NI,NI)=F4(NI,NI,NI,NI)+ZZ
      ELSE IF(IMORSE(NI).EQ.2) THEN
          XX=F1E(NI)
          YY=F4(NI,NI,NI,NI)
          ZZ=TWO*(XX-YY)
          F4(NI,NI,NI,NI)=F4(NI,NI,NI,NI)+ZZ
      END IF
      GO TO 300
 350  DO 360  I=1,NPERM
      NI=IPERM(I,0)
      MM=IPERM(I,NI)
      DO 365  N=1,NS
      DO 365  P=1,NS
      DO 365  Q=1,NS
      IPQ=IPP(I,N)*IPP(I,P)*IPP(I,Q)
      IPR=IPQ*IPP(I,NI)
      F4(NI,N,P,Q)=F4(MM,IPERM(I,N),IPERM(I,P),IPERM(I,Q))*IPR
 365  F4B(NI,N,P,Q)=F4B(MM,IPERM(I,N),IPERM(I,P),IPERM(I,Q))*IPQ
 360  CONTINUE
      DO 370  M=1,NS
      DO 370  N=1,M
      DO 370  P=1,N
      DO 370  Q=1,P
      XX=F4(M,N,P,Q)+F4(N,M,P,Q)-F4(P,N,M,Q)-F4(Q,N,P,M)
 370  F4A(M,N,P,Q)=XX/FOUR
      IF(NF30.EQ.1) THEN
          REWIND ISCR1
          WRITE(IOUT,34)
          DO 372  M=1,NS
          DO 372  N=1,M
          DO 372  P=1,N
          READ(ISCR1,27) LL,MM,NN,X,Y,Z
          W=F3(M,N,P)-X
          IF(M.EQ.N.OR.M.EQ.P.OR.N.EQ.P) THEN
          WRITE(IOUT,35) M,N,P,F3(M,N,P),X,Y,W,Z
          ELSE
          WRITE(IOUT,36) M,N,P,F3(M,N,P),X,W,Z
          END IF
 372      CONTINUE
      END IF
      DO 375  M=1,NS
      DO 375  N=1,M
      DO 375  P=1,N
      DO 375  Q=1,P
      XX=(F4(M,N,P,Q)+F4(N,M,P,Q)+F4(P,N,M,Q)+F4(Q,N,P,M))/FOUR
 375  F4(M,N,P,Q)=XX
      WRITE(IOUT,37)
      DO 380  M=1,NS
      DO 380  N=1,M
      DO 380  P=1,N
      DO 380  Q=1,P
      READ(ISCR1,32) KK,LL,MM,NN,X
      W=F4(M,N,P,Q)-X
      IF(M.EQ.N.OR.M.EQ.P.OR.M.EQ.Q.OR.N.EQ.P.OR.N.EQ.Q.OR.P.EQ.Q)THEN
        WRITE(IOUT,38) M,N,P,Q,F4(M,N,P,Q),X,W,F4A(M,N,P,Q)
      ELSE
        WRITE(IOUT,39) M,N,P,Q,F4(M,N,P,Q),F4A(M,N,P,Q)
      END IF
 380  CONTINUE
      IF(NF30.EQ.1) THEN
        IF(NPRT.GE.1) THEN
        WRITE(IOUT,40)
        DO 385  M=1,NS
        DO 385  N=1,NS
        WRITE(IOUT,41) M,M,N
        DO 385  P=1,NS
 385    WRITE(IOUT,42) (F4B(M,N,P,Q),Q=1,NS)
        ELSE
        WRITE(IOUT,43)
        DO 390  M=1,NS
 390    WRITE(IOUT,44) M,M,M,M,M,F4B(M,M,M,M)
        END IF
      END IF
C
 500  II=0
      DO 510  M=1,NS
      IF(DABS(F1(M)).GE.F1CUT) THEN
          WRITE(IDER,45) M,F1(M)
      END IF
 510  CONTINUE
      WRITE(IDER,45) II
      DO 520  M=1,NS
      DO 520  N=1,M
      IF(DABS(F2(M,N)).GE.F2CUT) THEN
          WRITE(IDER,46) M,N,F2(M,N)
      END IF
 520  CONTINUE
      WRITE(IDER,45) II
      DO 530  M=1,NS
      DO 530  N=1,M
      DO 530  P=1,N
      IF(DABS(F3(M,N,P)).GE.F3CUT) THEN
          WRITE(IDER,47) M,N,P,F3(M,N,P)
      END IF
 530  CONTINUE
      IF(NDER.LE.1) RETURN
      WRITE(IDER,45) II
      DO 540  M=1,NS
      DO 540  N=1,M
      DO 540  P=1,N
      DO 540  Q=1,P
      IF(DABS(F4(M,N,P,Q)).GE.F4CUT) THEN
          WRITE(IDER,48) M,N,P,Q,F4(M,N,P,Q)
      END IF
 540  CONTINUE
      WRITE(IDER,45) II
      RETURN
 1000 BACKSPACE I12
      GO TO 115
 1010 BACKSPACE I16
      GO TO 215
 1020 BACKSPACE I21
      GO TO 315

 901  write(6,*) 'trouble parsing POS_DISP vector'
      call pabort
      call qabort
 
 902  write(6,*) 'trouble parsing SYMOPS vector'
      call pabort
      call qabort
      END
