C<<<<<<<<<<<<<<<<<<<<<<
      SUBROUTINE DIPORB(OV,D,BOND,PROD,VINDEX,ISCFCI,
     .            V1,E1,MINDEX,
     .            GAMMA,BETA,BETAQ,W,
     .            IPOSV,IVPOS,IORD)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL IANDJ,EQUAL
      COMMON/BASIS/NT,NBFAO,NBFSO,NBATRI
     .      /COORD/ZAN(112),C(3,112),WW(112)
cets072891     .      /EXYZS/EX(7,7,13),EY(7,7,13),EZ(7,7,13)
     .      /exyzs/ex(7,7,14),ey(7,7,14),ez(7,7,14)
     .      /FUNCS/NATOM,N3N,NSYM
     .      /GAUSS/ZS(200),CS(200)
     .      /IJVEC/IX(84),IY(84),IZ(84),JX(84),JY(84),JZ(84)
     .      /INDIX/IJX(225),IJY(225),IJZ(225),IJPOS(225)
     .      /NSHEL/KNUC(200),KTYPE(200),KSTART(200),KLOC(200),
     .             KMIN(200),KMAX(200),KNG(200),NSHELL,NPRIM
     .      /ROOT /XX,U(9),WT(9),NROOTS
     .      /SIGNS/IPQ(500),IPRNT
      REAL * 8 MINDEX(NATOM)
      DIMENSION OV1 (9000),SAVE(9000)
      DIMENSION OV(NBATRI),D(NBATRI),BOND(NT,NT),PROD(NT,NT),
     .          VINDEX(NATOM,NATOM)
      DIMENSION VX0(36),VY0(36),VZ0(36),VX1(36),VY1(36),VZ1(36),
     .          VX2(36),VY2(36),VZ2(36),VXS(36),VYS(36),VZS(36)
      DIMENSION V1(NT*NT),E1(NT),GAMMA(NT),BETA(NT),BETAQ(NT),W(NT),
     .          IPOSV(NT),IVPOS(NT),IORD(NT)
      DATA ITOL / 10 /
      DATA PI212 / 1.1283791670955D+00 /
      DATA PI32 / 5.56832799683170D+00 /
      DATA ZERO,HALF,ONE,TWO / 0.0D+00 , 0.5D+00 , 1.0D+00 , 2.0D+00 /
      DATA NQLIM / 7 /
C
      TOL=ITOL*2.30258D+00
C     ZERO ALL THE CORE
      DO 101 I=1,NBATRI
      OV(I)=ZERO
  101 CONTINUE
C
C:::::::::::::::::::::::::::::
C:::::----- I SHELL -----:::::
C:::::::::::::::::::::::::::::
C
      DO 6000 ISH=1,NSHELL
C
      IATOM=KNUC(ISH)
      AX=C(1,IATOM)
      AY=C(2,IATOM)
      AZ=C(3,IATOM)
      IGMIN=KSTART(ISH)
      IGMAX=IGMIN+KNG(ISH)-1
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      LOCI=KLOC(ISH)
C
C:::::::::::::::::::::::::::::
C:::::----- J SHELL -----:::::
C:::::::::::::::::::::::::::::
C
      DO 5000 JSH=1,ISH
C
      JATOM=KNUC(JSH)
      BX=C(1,JATOM)
      BY=C(2,JATOM)
      BZ=C(3,JATOM)
      JGMIN=KSTART(JSH)
      JGMAX=JGMIN+KNG(JSH)-1
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      LOCJ=KLOC(JSH)
      IANDJ=ISH.EQ.JSH
      EQUAL=IATOM.EQ.JATOM
C
C     ----- WORK OUT INDICES FOR COMBINING INTEGRALS -----
C
      MIJ=0
      JMAX=MAXJ
      II=-1
      DO 103 I=MINI,MAXI
      II=II+1
      JJ=-1
      NX=IX(I)
      NY=IY(I)
      NZ=IZ(I)
      IF(IANDJ) JMAX=I
      DO 102 J=MINJ,JMAX
      MIJ=MIJ+1
      JJ=JJ+1
      IJX(MIJ)=NX+JX(J)
      IJY(MIJ)=NY+JY(J)
      IJZ(MIJ)=NZ+JZ(J)
      IDXI=LOCI+II
      IDXJ=LOCJ+JJ
      IDXS=IPQ(MAX0(IDXI,IDXJ))+MIN0(IDXI,IDXJ)
      IJPOS(MIJ)=IDXS
  102 CONTINUE
  103 CONTINUE
C
      XAB=AX-BX
      YAB=AY-BY
      ZAB=AZ-BZ
      RAB=XAB*XAB+YAB*YAB+ZAB*ZAB
      NROOTS=(LIT+LJT-2)/2+2
      MAXIJ=MAX0(LIT+1,LJT+2)
C
      DO 4000 IG=IGMIN,IGMAX
      CSI=CS(IG)*PI32
      AI=ZS(IG)
      AXI=AI*AX
      AYI=AI*AY
      AZI=AI*AZ
C
C     IF(IANDJ) JGMAX=IG
      DO 3000 JG=JGMIN,JGMAX
      CSJ=CS(JG)
      BJ=ZS(JG)
      BXJ=BJ*BX
      BYJ=BJ*BY
      BZJ=BJ*BZ
C
      PP=AI+BJ
      TPP=ONE/PP
      TEMP=(AI*BJ*RAB)*TPP
C
C     ----- IGNORE INTEGRAL IF PRE-EXPONENTIAL TOO SMALL -----
C
      IF(TEMP.GT.TOL) GO TO 3000
C
C     ----- DENSITY FACTOR -----
C
      TP=DSQRT(TPP)
      DIJ=CSI*CSJ*DEXP(-TEMP)*TPP
      DIJS=CSI*CSJ*DEXP(-TEMP)*(TPP**1.5D0)
C     IF(IANDJ.AND.IG.NE.JG) DIJ=DIJ+DIJ
      PFAC=DIJ*TP
      PFACH=PFAC*HALF
      DIJPI=DIJ*PI212
      PTWO=TPP*HALF
C
C     FORM SOME PRODUCTS NEEDED IN INTEGRAL EVALUATION
C
      PX=(AXI+BXJ)*TPP
      PY=(AYI+BYJ)*TPP
      PZ=(AZI+BZJ)*TPP
      IF(EQUAL) GO TO 201
      PAX=PX-AX
      PAY=PY-AY
      PAZ=PZ-AZ
      PBX=PX-BX
      PBY=PY-BY
      PBZ=PZ-BZ
      GO TO 202
  201 CONTINUE
      PAX=ZERO
      PAY=ZERO
      PAZ=ZERO
      PBX=ZERO
      PBY=ZERO
      PBZ=ZERO
C
  202 CONTINUE
      CALL ECAL(PAX,PAY,PAZ,PBX,PBY,PBZ,PTWO,MAXIJ)
C
C     PCX=PX-CX
C     PCY=PY-CY
C     PCZ=PZ-CZ
C     XX=PP*(PCX*PCX+PCY*PCY+PCZ*PCZ)
C     IF(NROOTS.LE.3) THEN
C     CALL RT123
C     ELSE IF(NROOTS.EQ.4) THEN
C     CALL ROOT4
C     ELSE IF(NROOTS.EQ.5) THEN
C     CALL ROOT5
C     ELSE IF(NROOTS.LE.9) THEN
C     CALL DROOT
C     ELSE
C     STOP ' NOT ENOUGH ROOTS IN ONEINT'
C     END IF
C
C     DO 1000 IROOT=1,NROOTS
C     ROOT2=U(IROOT)/(ONE+U(IROOT))
C     WW=WT(IROOT)*(-DIJPI)
C     AROOT2=-ROOT2*(PP+PP)
C
C     IN=-NQLIM
C     DO 910 NI=1,LIT
C     IN=IN+NQLIM
C     DO 909 NJ=1,LJT
C     MAXT=NI+NJ-1
C     JN=IN+NJ
C     CALL GCAL(PCX,PCY,PCZ,VXX,VYY,VZZ,VXX1,VYY1,VZZ1,VXX2,VYY2,VZZ2,
C    .          BJ,AROOT2,NI,NJ,MAXT)
C     VX0(JN)=VXX
C     VY0(JN)=VYY
C     VZ0(JN)=VZZ
C     VX1(JN)=VXX1
C     VY1(JN)=VYY1
C     VZ1(JN)=VZZ1
C     VX2(JN)=VXX2
C     VY2(JN)=VYY2
C     VZ2(JN)=VZZ2
C 909 CONTINUE
C 910 CONTINUE
C
C     DO 912 I=1,MIJ
C     NX=IJX(I)
C     NY=IJY(I)
C     NZ=IJZ(I)
C     X=VX0(NX)
C     Y=VY0(NY)
C     Z=VZ0(NZ)
C     X1=VX1(NX)
C     Y1=VY1(NY)
C     Z1=VZ1(NZ)
C     X2=VX2(NX)
C     Y2=VY2(NY)
C     Z2=VZ2(NZ)
C     IJ=IJPOS(I)
C     SDXX(IJ)=SDXX(IJ)+X2*Y*Z*WW
C     SDYY(IJ)=SDYY(IJ)+X*Y2*Z*WW
C     SDZZ(IJ)=SDZZ(IJ)+X*Y*Z2*WW
C     SDXY(IJ)=SDXY(IJ)+X1*Y1*Z*WW
C     SDXZ(IJ)=SDXZ(IJ)+X1*Y*Z1*WW
C     SDYZ(IJ)=SDYZ(IJ)+X*Y1*Z1*WW
C 912 CONTINUE
C1000 CONTINUE
C
      IN=-NQLIM
      DO 930 NI=1,LIT
      IN=IN+NQLIM
      DO 929 NJ=1,LJT
      JN=IN+NJ
      VXS(JN)=EX(NI,NJ,1)
      VYS(JN)=EY(NI,NJ,1)
      VZS(JN)=EZ(NI,NJ,1)
  929 CONTINUE
  930 CONTINUE
C
      DO 962 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      SX=VXS(NX)
      SY=VYS(NY)
      SZ=VZS(NZ)
      IJ=IJPOS(I)
cets  OV(IJ)=OV(IJ)+SX*SY*SZ*DIJS
      ov(ij)=sx*sy*sz*dijs+ov(ij)
  962 CONTINUE
C
 2000 CONTINUE
C
 3000 CONTINUE
 4000 CONTINUE
 5000 CONTINUE
 6000 CONTINUE
      IF(IPRNT.GT.2)THEN
      WRITE(6,630)
  630 FORMAT(1X,//,'OVERLAP MATRIX',/)
      CALL PRINT(OV,NBATRI,NBFAO,6)
      ENDIF
      IF(IPRNT.GT.1)THEN
      WRITE(6,631)
  631 FORMAT(1X,//,'DENSITY MATRIX',/)
      CALL PRINT( D,NBATRI,NBFAO,6)
      ENDIF
C
      IJK=0
      TRACE=0.0D0
      DO 5030 I=1,NT
      DO 5030 J=1,I
      IJK=IJK+1
      IF(I.EQ.J)THEN
      TRACE=D(IJK)*OV(IJK)+trace
      ELSE
      TRACE=2.D0*D(IJK)*OV(IJK)+trace
      END IF
cets  write(6,*) ijk, trace
  789 format(1x,'ijk= ',i3,2x,'trace= ',f12.6 )
 5030 CONTINUE
      WRITE(6,606)TRACE
  606 FORMAT(//,'TRACE OF P*S    IS  ',F12.6 )
      DO 6102 I=1,NT
      DO 6101 J=1,NT
      PROD(I,J)=0.0D0
      DO 6100 K=1,NT
      IK=IPQ(MAX0(I,K))+MIN0(I,K)
      KJ=IPQ(MAX0(K,J))+MIN0(K,J)
      PROD(I,J)=D(IK)*OV(KJ)+prod(i,j)
 6100 CONTINUE
 6101 CONTINUE
 6102 CONTINUE
      DO 6200 IC=1,NATOM
      MINDEX(IC)=0.0D0
      DO 6200 JC=1,NATOM
 6200 VINDEX(IC,JC)=0.0D0
      DO 6300 ISH=1,NSHELL
      IAT=KNUC(ISH)
      IFI=KLOC(ISH)
      ILI=IFI+KMAX(ISH)-KMIN(ISH)
      DO 6295 JSH=1,NSHELL
      JAT=KNUC(JSH)
      IFJ=KLOC(JSH)
      ILJ=IFJ+KMAX(JSH)-KMIN(JSH)
      DO 6290 I=IFI,ILI
      DO 6290 J=IFJ,ILJ
cets  VINDEX(IAT,JAT)=VINDEX(IAT,JAT)+PROD(I,J)*PROD(J,I)
      vindex(iat,jat)=prod(i,j)*prod(j,i)+vindex(iat,jat)
C     IF(IAT.EQ.JAT)MINDEX(IAT)=MINDEX(IAT)-PROD(I,J)*PROD(J,I)
C     IF(I.EQ.J)MINDEX(IAT)=MINDEX(IAT)+2.D0*PROD(I,J)
 6290 CONTINUE
 6295 CONTINUE
 6300 CONTINUE
      WRITE(6,673)
  673 FORMAT(1X,//,'MULLIKEN BOND-INDEX',/)
      CALL MATOUT(VINDEX,NATOM,NATOM,NATOM,NATOM,6)
      WRITE(6,683)
  683 FORMAT (//,1X,'MULLIKEN VALENCES',/)
C     DO 6322 IC=1,NATOM
C     WRITE(6,612)IC,MINDEX(IC)
C6322 CONTINUE
      DO 6322 IC=1,NATOM
      VAL=0.0D0
      DO 6320 JC=1,NATOM
      IF(JC.EQ.IC)GO TO 6319
      VAL=VINDEX(IC,JC)+val
 6319 CONTINUE
 6320 CONTINUE
      WRITE(6,612)IC,VAL
 6322 CONTINUE
C     DO 9898 I=1,NBATRI
C9898 SAVE(I)=OV(I)

C
C     CALCULATE S**1/2
C
      IW=6
      CALL LIGEN3(NT,NBATRI,NT*NT,OV,V1,E1)
C    .            GAMMA,BETA,BETAQ,W,IPOSV,IVPOS,IORD,P,Q)
      IF(IPRNT.GT.1)THEN
      WRITE(IW,609)
  609 FORMAT(1X,/,'OVERLAP MATRIX EIGENVALUES',/)
      WRITE(IW,607) (I,E1(I),I=1,NT)
  607 FORMAT(6(1X,I6,2X,F12.6))
      ENDIF
      IF(IPRNT.GT.2)THEN
      WRITE(IW,608)
  608 FORMAT(1X,/,'OVERLAP MATRIX EIGENVECTORS',/)
      CALL MATOUT (V1,NT,NT,NT,NT,6)
      END IF
      DO 100 I=1,NT
      DO 100 J=1,I
      DUM=0.0D+00
      DAM=0.0D+00
      IJ=IPQ(I)+J
      DO 50 K=1,NT
      K1INK= (K-1)*NT
      DAM=DAM+V1(K1INK+I)*V1(K1INK+J)/      E1(K)
   50 DUM=DUM+V1(K1INK+I)*V1(K1INK+J)*DSQRT(E1(K))
C     OV1(IJ)=DAM
  100 OV(IJ)=DUM
C     WRITE(*,*)'INVERSE OF OVERLAP MATRIX'
C     CALL PRINT(OV1,NBATRI,NBFAO,6)
C
C     DO 5102 I=1,NT
C     DO 5101 J=1,NT
C     PROD(I,J)=0.0D0
C     DO 5100 K=1,NT
C     IK=IPQ(MAX0(I,K))+MIN0(I,K)
C     KJ=IPQ(MAX0(K,J))+MIN0(K,J)
C     PROD(I,J)=PROD(I,J)+OV1(IK)*SAVE(KJ)
C5100 CONTINUE
C5101 CONTINUE
C5102 CONTINUE
C     WRITE(*,*)'UNIT MATRIX'
C     CALL MATOUT(PROD,NT,NT,NT,NT,6)
      IF(IPRNT.GT.2)THEN
      WRITE(6,632)
  632 FORMAT(1X,//,'HALF OVERLAP MATRIX',/)
      CALL PRINT(OV,NBATRI,NBFAO,6)
      END IF
      DO 7102 I=1,NT
      DO 7101 J=1,NT
      PROD(I,J)=0.0D0
      DO 7100 K=1,NT
      IK=IPQ(MAX0(I,K))+MIN0(I,K)
      KJ=IPQ(MAX0(K,J))+MIN0(K,J)
      PROD(I,J)=PROD(I,J)+OV(IK)*D(KJ)
 7100 CONTINUE
 7101 CONTINUE
 7102 CONTINUE
      DO 7105 I=1,NT
      DO 7104 J=1,NT
      BOND(I,J)=0.0D0
      DO 7103 K=1,NT
      KJ=IPQ(MAX0(K,J))+MIN0(K,J)
      BOND(I,J)=BOND(I,J)+PROD(I,K)*OV(KJ)
 7103 CONTINUE
 7104 CONTINUE
 7105 CONTINUE
      TRACE=0.0 D0
      DO 7107 I=1,NT
 7107 TRACE=TRACE+BOND(I,I)
      WRITE(6,611)TRACE
  611 FORMAT(//,'TRACE OF S1/2*P*S1/2 IS  ',F12.6)
      TRACE=0.0 D0
      DO 7108 I=1,NT
      DO 7108 J=1,NT
 7108 TRACE=TRACE+BOND(I,J)*BOND(I,J)
      WRITE(6,615)TRACE
  615 FORMAT(//,' TRACE OF (S1/2*P*S1/2)**2  IS  ',F12.6 )
      DO 7200 IC=1,NATOM
      DO 7200 JC=1,NATOM
 7200 VINDEX(IC,JC)=0.0D0
      DO 7300 ISH=1,NSHELL
      IAT=KNUC(ISH)
      IFI=KLOC(ISH)
      ILI=IFI+KMAX(ISH)-KMIN(ISH)
      DO 7295 JSH=1,NSHELL
      JAT=KNUC(JSH)
      IFJ=KLOC(JSH)
      ILJ=IFJ+KMAX(JSH)-KMIN(JSH)
      DO 7290 I=IFI,ILI
      DO 7290 J=IFJ,ILJ
      VINDEX(IAT,JAT)=VINDEX(IAT,JAT)+BOND(I,J)*BOND(J,I)
 7290 CONTINUE
 7295 CONTINUE
 7300 CONTINUE
      WRITE(6,633)
  633 FORMAT(1X,//,'LOWDIN BOND-INDEX',/)
      CALL MATOUT(VINDEX,NATOM,NATOM,NATOM,NATOM,6)
      WRITE(6,613)
  613 FORMAT (//,1X,'LOWDIN VALENCES',/)
      DO 7322 IC=1,NATOM
      VAL=0.0D0
      DO 7320 JC=1,NATOM
      IF(JC.EQ.IC)GO TO 7319
      VAL=VAL+VINDEX(IC,JC)
 7319 CONTINUE
 7320 CONTINUE
      WRITE(6,612)IC,VAL
  612 FORMAT (1X,I4,3X,F12.4)
 7322 CONTINUE
C
C   ( S1/2*P*S1/2 )**2  ELEM. IJ
C
C     DO 8102 I=1,NT
C     DO 8101 J=1,NT
C     PROD(I,J)=0.0D0
C     DO 8100 K=1,NT
C     PROD(I,J)=PROD(I,J)+BOND(I,K)*BOND(K,J)
C8100 CONTINUE
C8101 CONTINUE
C8102 CONTINUE
C     DO 8200 IC=1,NATOM
C     DO 8200 JC=1,NATOM
C8200 VINDEX(IC,JC)=0.0D0
C     DO 8300 ISH=1,NSHELL
C     IAT=KNUC(ISH)
C     IFI=KLOC(ISH)
C     ILI=IFI+KMAX(ISH)-KMIN(ISH)
C     DO 8295 JSH=1,NSHELL
C     JAT=KNUC(JSH)
C     IFJ=KLOC(JSH)
C     ILJ=IFJ+KMAX(JSH)-KMIN(JSH)
C     DO 8290 I=IFI,ILI
C     DO 8290 J=IFJ,ILJ
C     VINDEX(IAT,JAT)=VINDEX(IAT,JAT)+PROD(I,J)
C8290 CONTINUE
C8295 CONTINUE
C8300 CONTINUE
C     WRITE(6,633)
C     CALL MATOUT(VINDEX,NATOM,NATOM,NATOM,NATOM,6)
C     WRITE(6,613)
C     DO 8322 IC=1,NATOM
C     VAL=0.0D0
C     DO 8320 JC=1,NATOM
C     IF(JC.EQ.IC)GO TO 8319
C     VAL=VAL+VINDEX(IC,JC)
C8319 CONTINUE
C8320 CONTINUE
C     WRITE(6,612)IC,VAL
C8322 CONTINUE
      RETURN
      END

