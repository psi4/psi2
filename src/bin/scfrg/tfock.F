      SUBROUTINE TFOCK(CM,SU,SOMOV,SOAOV,AOMOV,WMO,WMO2,WMOT,WAO,
     1DC,DO,DO2,SD,NBFSO,NBFAO,LOCU,NBATRI,ISOAOV,NLAMDA,ITAP30,
     2NSYM,MXCOEF,IPRINT,EIG,NTOTAL,NAT,ALPHA,BETA,BUF,WMSIZ)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
CTJL 1DC,DO,DO2,SD,ISOAOV,NLAMDA,EIG,ALPHA,BETA,BUF
C
      INTEGER IDATA(4),DROL(200),LORD(200),IA47(192),FCB47(16)
      INTEGER NSORB(5),IREPN(2),ICICOF(2),WMSIZ
      REAL*8 FOCC(5)
      LOGICAL OSS,TWO,HS,TWOD
      CHARACTER*6 CALTYP,DERTYP,CITYP
      COMMON /OLDCI/ CI1,CI2
      COMMON /TFOC/ OSS,TWO,IOP1,IOP2,OCC1,OCC2,OLDC1,OLDC2,HS
      COMMON /DIM21/ IPQ(256)
      COMMON /SCFIN/ REPNUC,IOPEN,ISCF,IPRCT,IVECT,NBFLD,ICUT
      COMMON /DERT/ CALTYP,DERTYP,CITYP
      COMMON /TAPES/ NIN,IR,IOUT,ICHECK,IFLAG3,ITAPE,I30
      DIMENSION CM(2,NBFSO),SU(MXCOEF),SOMOV(NBFSO,NBFSO),
     1SOAOV(NBFAO,NBFSO),AOMOV(NBFSO,NBFSO),WMO(WMSIZ),WMO2(WMSIZ),
CRBR 1SOAOV(NBFAO,NBFSO),AOMOV(NBFSO,NBFSO),WMO(2),WMO2(2),
     2WMOT(NBATRI),WAO(NBATRI),DC(NBATRI),DO(NBATRI),DO2(NBATRI),
     3SD(2),ISOAOV(2),NLAMDA(NSYM),EIG(NTOTAL),ALPHA(NBATRI),
     4BETA(NBATRI),BUF(NBFSO,NBFSO)
      EQUIVALENCE (IREPN,REPN),(ICICOF(1),CICOF)
C
      A2=2.0D+00
      A1=1.0D+00
      A0=0.0D+00
      A1S2=0.5D+00
      IT47=47
      TWOD=.FALSE.
      IF (DERTYP .EQ. 'SECOND') TWOD=.TRUE.
      IF (CITYP .EQ. 'CI    ') TWOD=.TRUE.
      IF (CITYP .EQ. 'GVBCI ') TWOD=.TRUE.
      WRITE(ICHECK,1501) HS
CTJL  WRITE(ICHECK,1501) HS
 1501 FORMAT(/'  THE FLAG HS IS: ',L3)
      WRITE(ICHECK,1006) TWOD
 1006 FORMAT(/'  TWOD IS: ',L3/)
      NBFSQ=NBFSO*NBFSO
      NORBS=NBFSO
      IF ((NBFSO.NE.NBFAO).OR.(NBFSO.NE.NTOTAL).OR.(NBFAO.NE.NTOTAL))
     1THEN
        WRITE(IOUT,300) NBFSO,NBFAO,NTOTAL
        CALL MABORT
 300    FORMAT(/'  THIS VERSION REQUIRES NBFSO=NBFAO=NTOTAL'/
     1  '  CURRENT VALUES ARE:',3I6)
      END IF
      IF (TWOD) THEN
CRBR        RFILE MOVED BELOW AND WFILE ADDED  2-15-85
C   NO.  :  CONTENTS
C    TRIA. = TRIANGLE
C    SQUA. = SQUARE MATRIX
C    RECT. = RECTANGULAR MATRIX
C    1   : PARAMETERS(1-100),LOCATIONS(101-142),LENGTHS(151-192)
C    2   : LORD
C    3   : EIGENVALUES
C    4   : FOCC
C    5   : NSORB
C    6   : ALPHA (TRIA.)
C    7   : BETA  (TRIA.)
C    8   : SO-AO EIGENVECTORS IN PITZER'S SCF (SQUA.)
C    9   : SO-MO EIGENVECTORS IN PITZER'S SCF (SQUA.)
C   10   : AO-MO EIGENVECTORS IN PITZER'S SCF (SQUA.)
C   11   : WMOT (TRIA.)
C   12   : WAO (TRIA.)
C   13   : CM
C   14   : DC (TRIA.)
C   15   : DO (TRIA.)
C   16   : DO2 (TRIA.)
C   17   : DROL
C   18   : SO-MO EIGENVECTORS IN EIGENVALUE ORDER (SQUA.)
C   19   : AO-MO EIGENVECTORS IN EIGENVALUE ORDER (SQUA.)
C   20   : X (MO CI LAGRANGIAN) (SQUA.)
C   21   : XAO (SYMMETRIZED AO CI LAGRANGIAN) (TRIA.)
C   22   : QAO (AO ONE PARTICLE DENSITY MATRIX) (TRIA.)
C   23   : QMO (MO ONE PARTICLE DENSITY MATRIX) (TRIA.)
C   24   : ZVECT (TRIA.)
C   25   : U (FIRST-ORDER CPHF COEFFICIENTS)
C   26   : FORCE MATRIX
C   27   : IJORD (TRIA.)
C   28   : HIJ (SQUARE)
C   29   : MO DERIVATIVE CI LAGRANGIAN (SQUA.)
C   30   : ELECTRONIC CONTRIBUTION TO THE CI GRADIENT (3*NAT)
C   31   : EPSILON (TRIA)
C   32   : ZETA(TRIA,NORBS)
        IA47(1)=NTOTAL
        IA47(5)=NBATRI
        IA47(6)=NAT
        REPN=REPNUC
        IA47(12)=IREPN(1)
        IA47(13)=IREPN(2)
        CICOF=CI1
        IA47(14)=ICICOF(1)
        IA47(15)=ICICOF(2)
        CICOF=CI2
        IA47(16)=ICICOF(1)
        IA47(17)=ICICOF(2)
        IA47(101)=1
        IA47(102)=IA47(101)+192
        IA47(103)=IA47(102)+NTOTAL
        IA47(104)=IA47(103)+INTOWP(NTOTAL)
        IA47(105)=IA47(104)+INTOWP(5)
        IA47(106)=IA47(105)+5
        IA47(107)=IA47(106)+INTOWP(NBATRI)
        IA47(108)=IA47(107)+INTOWP(NBATRI)
        IA47(109)=IA47(108)+INTOWP(NBFSQ)
        IA47(110)=IA47(109)+INTOWP(NBFSQ)
        IA47(111)=IA47(110)+INTOWP(NBFSQ)
        IA47(112)=IA47(111)+INTOWP(NBATRI)
        IA47(113)=IA47(112)+INTOWP(NBATRI)
        IA47(114)=IA47(113)+INTOWP(2*NTOTAL)
        IA47(115)=IA47(114)+INTOWP(NBATRI)
        IA47(116)=IA47(115)+INTOWP(NBATRI)
        IA47(117)=IA47(116)+INTOWP(NBATRI)
        IA47(118)=IA47(117)+NBFSO
        IA47(119)=IA47(118)+INTOWP(NBFSO*NBFSO)
        IA47(120)=IA47(119)+INTOWP(NBFSO*NBFSO)
        IA47(121)=IA47(120)+INTOWP(NTOTAL*NTOTAL)
        IA47(122)=IA47(121)+INTOWP(NBATRI)
        IA47(123)=IA47(122)+INTOWP(NBATRI)
        IA47(124)=IA47(123)+INTOWP(NBATRI)
        IA47(151)=192
        IA47(152)=NTOTAL
        IA47(153)=INTOWP(NTOTAL)
        IA47(154)=INTOWP(5)
        IA47(155)=5
        IA47(156)=INTOWP(NBATRI)
        IA47(157)=INTOWP(NBATRI)
        IA47(158)=INTOWP(NBFSQ)
        IA47(159)=INTOWP(NBFSQ)
        IA47(160)=INTOWP(NBFSQ)
        IA47(161)=INTOWP(NBATRI)
        IA47(162)=INTOWP(NBATRI)
        IA47(163)=INTOWP(2*NTOTAL)
        IA47(164)=INTOWP(NBATRI)
        IA47(165)=INTOWP(NBATRI)
        IA47(166)=INTOWP(NBATRI)
        IA47(167)=NBFSO
        IA47(168)=INTOWP(NBFSO*NBFSO)
        IA47(169)=INTOWP(NBFSO*NBFSO)
        IA47(170)=INTOWP(NTOTAL*NTOTAL)
        IA47(171)=INTOWP(NBATRI)
        IA47(172)=INTOWP(NBATRI)
        IA47(173)=INTOWP(NBATRI)
CRBR
        WRITE(ICHECK,*) ' IT47,IA47(101),IA47(111),IA47(119) ',
     1                    IT47,IA47(101),IA47(111),IA47(119)
        WRITE(ICHECK,*) ' I2SEC(IA47(119))',I2SEC(IA47(119))
        CALL RFILE(IT47)
        IZSEC = IA47(124)+INTOWP(NBATRI)
     1    +INTOWP(NTOTAL*NTOTAL)*3*NAT
     2    +INTOWP(NAT*NAT)*9
     3    +NBATRI
     4    +INTOWP(NTOTAL*NTOTAL)
     5    +INTOWP(NTOTAL*NTOTAL)
     6    +INTOWP(3*NAT)
     7    +INTOWP(NBATRI)
        IZSEC = I2SEC(IZSEC)
CTJL    IZSEC = I2SEC(IA47(129)+INTOWP(NTOTAL*NTOTAL)) + 20
CTJL    IZSEC = I2SEC(IA47(129)+INTOWP(NTOTAL*NTOTAL))
        CALL ZFILE(IT47,IZSEC)
      END IF
 1003 FORMAT(5X,' MATRIX IA47 ',/,100(10I13,/))
C
C  ----   READ AO-SO VECTOR FROM TAPE 30 ----
C
      CALL WREADW(ITAP30,ISOAOV,INTOWP(NBFSO*NBFAO),LOCU,JUNK)
      IF (IAND(IPRINT,1) .NE. 0) THEN
        WRITE(ICHECK,801)
 801    FORMAT(/'  SO-AO MATRIX:'/)
        CALL MATOUT(SOAOV,NBFAO,NBFSO,NBFAO,NBFSO,IOUT)
      END IF
C
C PUT GVB OCCUPANCIES INTO OPEN ORBITALS IF NECESSARY
C
      IF (TWO) THEN
        CM(1,IOP1)=A0
        CM(2,IOP1)=OCC1
        CM(1,IOP2)=A0
        CM(2,IOP2)=OCC2
      END IF
C
      IT49=49
      CALL SREW(IT49)
C ---- RE-READ SO-MO VECTOR FROM 49 ----
C
      CALL SREAD(IT49,SU,INTOWP(MXCOEF))
      CALL SREAD(IT49,EIG,INTOWP(NTOTAL))
      WRITE(ICHECK,*)'MXCOEF,NTOTAL,IOPEN,NSYM',MXCOEF,NTOTAL,IOPEN,NSYM
      WRITE(ICHECK,798)
 798  FORMAT('  EIGENVALUES:')
      WRITE(ICHECK,799) (EIG(NNN),NNN=1,NTOTAL)
 799  FORMAT(7F10.6)
      IF (TWOD) CALL WWRITW(IT47,EIG,INTOWP(NTOTAL),IA47(103),JUNK)
C
C USE DC AND DO AS SCRATCH IN CONSTRUCTING LORD ARRAY
      IF (TWOD) THEN
        DO 201 I=1,NBFSO
          DC(I)=EIG(I)
          DO(I)=CM(1,I)+CM(2,I)
 201    DROL(I)=I
C
        IOCC=0
        JOCC=0
        DO 301 IORB=1,NTOTAL
          IF (CM(1,IORB) .NE. A0)  IOCC=IOCC+1
          IF (CM(2,IORB) .NE. A0)  JOCC=JOCC+1
 301    CONTINUE
        CALL WWRITW(IT47,CM,INTOWP(2*NTOTAL),IA47(113),JUNK)
        KOCC=IOCC+JOCC
        IA47(2)=IOCC
        IA47(3)=JOCC
        IA47(4)=KOCC
CTJL    WRITE(*,1111) IOCC,JOCC,KOCC
 1111   FORMAT(/'  IOCC,JOCC,KOCC=',3I5)
C
        DO 402 I=1,NBFSO
          VALI=DC(I)
          VOCC1=DO(I)
          DO 403 J=I+1,NBFSO
            IF (VOCC1 .LT. DO(J)) THEN
              ITEMP=DROL(I)
              DROL(I)=DROL(J)
              DROL(J)=ITEMP
              DC(I)=DC(J)
              DC(J)=VALI
              VALI=DC(I)
              DO(I)=DO(J)
              DO(J)=VOCC1
              VOCC1=DO(I)
            END IF
 403      CONTINUE
 402    CONTINUE
C
        DO 202 I=1,IOCC
          VALI=DC(I)
          DO 203 J=I+1,IOCC
            IF (DC(J) .LT. VALI) THEN
              ITEMP=DROL(I)
              DROL(I)=DROL(J)
              DROL(J)=ITEMP
              DC(I)=DC(J)
              DC(J)=VALI
              VALI=DC(I)
            END IF
 203      CONTINUE
 202    CONTINUE
C
        IF (IOPEN .EQ. 0) GOTO 1300
CTJL  WRITE(*,*) '   IN TFOCK TWO IS ',TWO
        IF (TWO) GOTO 1300
CTJL  WRITE(*,*) ' OSS ',OSS
        ISTRT=IOCC+1
        IEND=IOCC+JOCC
        DO 1202 I=ISTRT,IEND
          VALI=DC(I)
          DO 1203 J=I+1,IEND
            IF (DC(J) .LT. VALI) THEN
              ITEMP=DROL(I)
              DROL(I)=DROL(J)
              DROL(J)=ITEMP
              DC(I)=DC(J)
              DC(J)=VALI
              VALI=DC(I)
            END IF
 1203     CONTINUE
 1202   CONTINUE
CTJL
      IF (OSS) THEN
      IF(DROL(ISTRT).GT.DROL(IEND)) THEN
      ITEMP = DROL(ISTRT)
      DROL(ISTRT) = DROL(IEND)
      DROL(IEND) = ITEMP
      END IF
      END IF
CTJL
C
 1300   CONTINUE
        DO 2202 I=KOCC+1,NORBS
          VALI=DC(I)
          DO 2203 J=I+1,NORBS
            IF (DC(J) .LT. VALI) THEN
              ITEMP=DROL(I)
              DROL(I)=DROL(J)
              DROL(J)=ITEMP
              DC(I)=DC(J)
              DC(J)=VALI
              VALI=DC(I)
            END IF
 2203     CONTINUE
 2202   CONTINUE
CRBRBRBRBRBR
CCC     WRITE(ICHECK,*) ' DC MATRIX '
CCC     WRITE(ICHECK,799) (DC(NNN),NNN=1,NTOTAL)
C
        DO 204 I=1,NBFSO
          IYY=DROL(I)
 204    LORD(IYY)=I
C
C       WRITE(*,1204) (DROL(I), I=1,NBFSO)
C       WRITE(*,1206) (LORD(I), I=1,NBFSO)
C1204   FORMAT(/'  DROL ARRAY:',/,10(/,10I5))
C1206   FORMAT(/'  LORD ARRAY:',/,10(/,10I5))
C
        CALL WWRITW(IT47,LORD,NTOTAL,IA47(102),JUNK)
        CALL WWRITW(IT47,DROL,NBFSO,IA47(117),JUNK)
      END IF
C
C ---- READ LAGRANGIAN IN MO FROM 49 ----
C
        DO 1005 II=1,NBATRI
          WMOT(II)=A0
 1005   CONTINUE
C
      IF (IOPEN .EQ. 0) THEN
C
        IOROF=0
        DO 1001 L=1,NSYM
          NN=NLAMDA(L)
          NDET=NN*(NN+1)/2
CTJL  WRITE(*,*) ' NSYM,NN,NDET,L ',NSYM,NN,NDET,L
          DO 1002 I=1,NN
            IOR=I+IOROF
            IJTF=IOR*(IOR+1)/2
            IF (CM(1,IOR) .NE. A0) WMOT(IJTF)=EIG(IOR)*A2
 1002     CONTINUE
          IOROF=IOROF+NN
 1001   CONTINUE
C
      ELSE
CCCCCC  DO 5 I=1,NBATRI
C5      WMOT(I)=A0
        NSOFF=0
        IS=0
        IF (IAND(IPRINT,1) .NE. 0) THEN
          WRITE(ICHECK,101) IOP1,OCC1,IOP2,OCC2,OLDC1,OLDC2
        END IF
 101    FORMAT(/'  OPEN ORBITAL #1 IS',I5,'  OCCUPATION',F10.6/
     1'  OPEN ORBITAL #2 IS',I5,'  OCCUPATION',F10.6/
     2'  OLD OCCUPATIONS:',2F10.6)
        CM(2,IOP1)=A1
        CM(2,IOP2)=A1
        DO 10 I=1,NSYM
          NN=NLAMDA(I)
          NDET=NN*(NN+1)/2
C  NEXT LINE ADDED BY RBR FOR OPEN SHELL GRSCF 2ND CALC AS PER TJL INFO
               IF (IOPEN .NE. 0) THEN
CRBRBRBRBRBRBRBR
      WRITE(ICHECK,*) ' AT LINE 823; BEFORE SREAD(49),WMO,(NDET= ',NDET
                  CALL SREAD(IT49,WMO,INTOWP(NDET))
      WRITE(ICHECK,*) ' AT LINE 825, BEFORE SREAD(49),WMO2,(NDET= ',NDET
                  CALL SREAD(IT49,WMO2,INTOWP(NDET))
               END IF
C  LINE ABOVE ADDED BY RBR FOR OPEN SHELL GRSCF 2ND CALC AS PER TJL INFO
          IJ=0
          DO 12 IOR=1,NN
            ITF=IOR+NSOFF
            DO 12 JOR=1,IOR
              JTF=JOR+NSOFF
              IJ=IJ+1
              IJTF=IPQ(MAX0(ITF,JTF))+MIN0(ITF,JTF)
              IF (CM(1,ITF).EQ.A2 .AND. CM(1,JTF).EQ.A2  .OR.
     1        CM(1,ITF).EQ.A2 .AND. CM(2,JTF).EQ.A1  .OR.
     2        CM(2,ITF).EQ.A1 .AND. CM(1,JTF).EQ.A2) THEN
                WMOT(IJTF)=A2*WMO(IJ)
              ELSE IF (CM(2,ITF).EQ.A1 .AND. CM(2,JTF).EQ.A1)
     *          THEN
                WMOT(IJTF)=WMO2(IJ)
                IF (CALTYP.EQ.'GRSCF ' .OR. CALTYP.EQ.'TCSCF '
     *          ) THEN
                  IS=IS+1
                  IF (IS.EQ.1) THEN
                    WMOT(IJTF)=OLDC1*WMO2(IJ)
                  ELSE
                    WMOT(IJTF)=OLDC2*WMO2(IJ)
                  END IF
                END IF
              END IF
 12       CONTINUE
          NSOFF=NSOFF+NN
 10     CONTINUE
        CM(2,IOP1)=OCC1
        CM(2,IOP2)=OCC2
      END IF
      DO 229 I=1,NTOTAL
C        WRITE (IOUT,227) I,CM(1,I)
C        WRITE (IOUT,228) I,CM(2,I)
  229 CONTINUE
  227 FORMAT (' CM(1,',I3,')=',F5.3)
  228 FORMAT (' CM(2,',I3,')=',F5.3)
C     WRITE (IOUT,*) ' IOPEN=',IOPEN
C     WRITE (IOUT,*) ' HS=',HS
C     WRITE (IOUT,*) ' OSS=',OSS
C     WRITE (IOUT,*) ' TWO=',TWO
      IF (IOPEN.EQ.0) THEN
         NCL=0
         DO 119 I=1,NTOTAL
            IF (CM(1,I).EQ.A2) NCL=NCL+1
  119    CONTINUE
         NVIR=NTOTAL-NCL
         IJIND=NVIR*NCL
      ELSE IF (HS) THEN
         NCL=0
         NALP=0
         NVIR=0
         DO 117 I=1,NTOTAL
            IF (CM(1,I).EQ.A2) THEN
               NCL=NCL+1
            ELSE IF (CM(2,I).EQ.A1) THEN
               NALP=NALP+1
            ELSE
               NVIR=NVIR+1
            END IF
  117    CONTINUE
         IJIND=NVIR*NALP+NVIR*NCL+NALP*NCL
      ELSE IF (OSS) THEN
         NCL=0
         NALP=1
         NBET=1
         DO 118 I=1,NTOTAL
            IF (CM(1,I).EQ.A2) NCL=NCL+1
  118    CONTINUE
         NVIR=NTOTAL-NCL-NALP-NBET
         IJIND=NVIR*NBET+NVIR*NALP+NVIR*NCL+NBET*NALP+NBET*NCL+NALP*NCL
      ELSE IF (TWO) THEN
         NCL=0
         NORB1=1
         NORB2=1
         DO 116 I=1,NTOTAL
            IF (CM(1,I).EQ.A2) NCL=NCL+1
  116    CONTINUE
         NVIR=NTOTAL-NCL-NORB1-NORB2
         IJIND=NVIR*NORB2+NVIR*NORB1+NVIR*NCL+NORB2*NORB1+NORB2*NCL+
     &              NORB1*NCL+2
      END IF
C     WRITE (IOUT,*) ' IJIND=',IJIND
C
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(ICHECK,802)
 802    FORMAT(/'  MO BASIS LAGRANGIAN:'/)
        CALL PRINTS(WMOT,NBATRI,NBFSO,ICHECK)
      END IF
C
      WRITE(ICHECK,1006) TWOD
CRBRBRBRBRBR
      WRITE(ICHECK,*) ' BEFORE WWRITW AT 322 '
      WRITE(ICHECK,*) ' NBATRI,IA47(111),IT47 ' ,NBATRI,IA47(111),IT47
      IF (TWOD)
     1CALL WWRITW(IT47,WMOT,INTOWP(NBATRI),IA47(111),JUNK)
C
C
C ---- MULTIPLY AOSO * SOMO = AOMO
C
      INEXT=0
      NSOFF=0
      DO 30 I=1,NSYM
        NN=NLAMDA(I)
        DO 29 IOR=NSOFF+1,NSOFF+NN
          DO 29 JOR=NSOFF+1,NSOFF+NN
            INEXT=INEXT+1
 29     SOMOV(JOR,IOR)=SU(INEXT)
 30   NSOFF=NSOFF+NN
      IF (IAND(IPRINT,1) .NE. 0) THEN
        WRITE(ICHECK,803)
 803    FORMAT(/'  SO-MO MATRIX:'/)
        CALL MATOUT(SOMOV,NBFSO,NBFSO,NBFSO,NBFSO,IOUT)
      END IF
C
      CALL EBC(AOMOV,SOAOV,SOMOV,NBFAO,NBFSO,NBFSO)
CRRR
CRBR  WRITE(ICHECK,*) ' AT WWRITW AT 344 '
      IF (TWOD) THEN
        CALL WWRITW(IT47,AOMOV,INTOWP(NBFSQ),IA47(110),JUNK)
        CALL WWRITW(IT47,SOAOV,INTOWP(NBFSQ),IA47(108),JUNK)
        CALL WWRITW(IT47,SOMOV,INTOWP(NBFSQ),IA47(109),JUNK)
      END IF
C
      IF (IAND(IPRINT,1) .NE.0) THEN
        WRITE(ICHECK,804)
 804    FORMAT(/'  AO-MO MATRIX:'/)
        CALL MATOUT(AOMOV,NBFAO,NBFSO,NBFAO,NBFSO,IOUT)
      END IF
C
C  CONSTRUCT THE AO-MO AND SO-MO VECTORS IN EIGENVALUE ORDER
C
      IF(TWOD) THEN
C
        DO 501 IORB=1,NBFSO
          IBF=LORD(IORB)
          DO 501 J=1,NBFSO
            BUF(J,IBF)=SOMOV(J,IORB)
 501    CONTINUE
C
        CALL WWRITW(IT47,BUF,IA47(168),IA47(118),JUNK)
        IF (IAND(IPRINT,1) .NE.0) THEN
          WRITE(ICHECK,504)
 504      FORMAT(/'  SO-MO MATRIX IN EIGENVALUE ORDERING:'/)
          CALL MATOUT(BUF,NBFAO,NBFSO,NBFAO,NBFSO,IOUT)
        END IF
C
        DO 502 IORB=1,NBFSO
          IBF=LORD(IORB)
          DO 502 J=1,NBFSO
            BUF(J,IBF)=AOMOV(J,IORB)
 502    CONTINUE
C
        CALL WWRITW(IT47,BUF,IA47(169),IA47(119),JUNK)
        IF (IAND(IPRINT,1) .NE.0) THEN
          WRITE(ICHECK,503)
 503      FORMAT(/'  AO-MO MATRIX IN EIGENVALUE ORDERING:'/)
          CALL MATOUT(BUF,NBFAO,NBFSO,NBFAO,NBFSO,IOUT)
        END IF
      END IF
C
      DO 35 I=1,NBATRI
        DC(I)=A0
        DO(I)=A0
 35   DO2(I)=A0
C
C ---- CONSTRUCT DENSITY MATRICIES IN AO BASIS ----
C
      IJ=0
      DO 40 I=1,NBFAO
        DO 40 J=1,I
          IJ=IJ+1
          VALC=A0
          VALO=A0
          DO 39 K=1,NBFSO
            IF (CM(1,K).EQ.A0) GOTO 39
            VALC=VALC+AOMOV(I,K)*AOMOV(J,K)
 39       CONTINUE
          DC(IJ)=VALC
          IF (TWO .OR. OSS) THEN
            DO(IJ)=AOMOV(I,IOP1)*AOMOV(J,IOP1)
            DO2(IJ)=AOMOV(I,IOP2)*AOMOV(J,IOP2)
          ELSE
            DO 38 K=1,NBFSO
              IF (CM(2,K) .EQ. A0) GOTO 38
              VALO=VALO+AOMOV(I,K)*AOMOV(J,K)
 38         CONTINUE
            DO(IJ)=VALO
          END IF
 40   CONTINUE
CRRR
CRBR  WRITE(ICHECK,*) ' AT WWRITW AT 411 '
      IF (TWOD) THEN
        CALL WWRITW(IT47,DC,INTOWP(NBATRI),IA47(114),JUNK)
        CALL WWRITW(IT47,DO,INTOWP(NBATRI),IA47(115),JUNK)
        CALL WWRITW(IT47,DO2,INTOWP(NBATRI),IA47(116),JUNK)
      END IF
      IF (IAND(IPRINT,4) .NE. 0) THEN
        WRITE(*,805)
 805    FORMAT(/'  CLOSED SHELL DENSITY - AO BASIS:'/)
        CALL PRINTS(DC,NBATRI,NBFAO,6)
        WRITE(*,806)
 806    FORMAT(/'  OPEN SHELL DENSITY - AO BASIS:'/)
        CALL PRINTS(DO,NBATRI,NBFAO,6)
        IF (OSS .OR. TWO) CALL PRINTS(DO2,NBATRI,NBFAO,6)
      END IF
CCC   IF (IOPEN .EQ. 0) GOTO 50
C
C --- TRANSFORM MO LAGRAN TO AO BASIS
C
CCC   CALL TRITRN(NBFAO,0,0,WAO,WMOT,AOMOV,SD)
      IIJJ=0
      DO 125 II=1,NBFAO
        DO 125 JJ=1,II
          IIJJ=IIJJ+1
          VALU=A0
          DO 124 I=1,NBFSO
            DO 124 J=1,NBFSO
              IJ=IPQ(I)+J
              IF (I .LT. J) IJ=IPQ(J)+I
              VALU=VALU+WMOT(IJ)*AOMOV(II,I)*AOMOV(JJ,J)
 124      CONTINUE
          WAO(IIJJ)=VALU
 125  CONTINUE
CRRR
CRBR  WRITE(ICHECK,*) ' AT WWRITW AT 444 '
      IF (TWOD)
     1CALL WWRITW(IT47,WAO,INTOWP(NBATRI),IA47(112),JUNK)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(ICHECK,807)
 807    FORMAT(/'  AO BASIS LAGRANGIAN:'/)
        CALL PRINTS(WAO,NBATRI,NBFAO,ICHECK)
      END IF
 50   CONTINUE
C
C ---- WRITE OUT TO 49
C
      CALL SREW(IT49)
      NTYPES=1
      IF (IOPEN .NE. 0) NTYPES=2
      IF (OSS .OR. TWO) NTYPES=3
      IDATA(1)=NTYPES
      IF (CALTYP .EQ. 'CLSCF ') IDATA(2)=1
      IF (CALTYP .EQ. 'HSOP  ') IDATA(2)=2
      IF (CALTYP .EQ. 'GRSCF ') IDATA(2)=3
      IF (CALTYP .EQ. 'TCSCF ') IDATA(2)=4
      IF (DERTYP .EQ. 'FIRST ') IDATA(3)=1
      IF (DERTYP .EQ. 'SECOND') IDATA(3)=2
      IF (CITYP .EQ. 'SCF   ') IDATA(4)=1
      IF (CITYP .EQ. 'CI    ') IDATA(4)=2
      IF (CITYP .EQ. 'MCSCF ') IDATA(4)=3
      IF (CITYP .EQ. 'GVBCI ') IDATA(4)=4
      CALL SWRIT(IT49,IDATA,4)
      CALL SWRIT(IT49,DC,INTOWP(NBATRI))
      IF (IOPEN .EQ. 0) GOTO 60
      CALL SWRIT(IT49,DO,INTOWP(NBATRI))
      IF (OSS.OR.TWO) CALL SWRIT(IT49,DO2,INTOWP(NBATRI))
 60   CALL SWRIT(IT49,WAO,INTOWP(NBATRI))
CCCC  IF (IOPEN .EQ. 0) GOTO 660
C
C ---- CONSTRUCT FOCC, ALPC, BETC MATRICIES IN OLD ARRAYS
C
      IF (CALTYP.EQ.'GRSCF ' .OR. CALTYP.EQ.'TCSCF ') THEN
        IF (IOPEN .EQ. 0) THEN
          WMO(1)=A2
          CALL SWRIT(IT49,WMO,INTOWP(1))
          WMO(1)=A0
          CALL SWRIT(IT49,WMO,INTOWP(1))
          WMO(1)=A0
          CALL SWRIT(IT49,WMO,INTOWP(1))
        END IF
        IF (HS) THEN
          WMO(1)=A2
          WMO(2)=A1
          CALL SWRIT(IT49,WMO,INTOWP(2))
          WMO(1)=A0
          WMO(2)=A0
          WMO(3)=A0
          CALL SWRIT(IT49,WMO,INTOWP(3))
          WMO(1)=A0
          WMO(2)=A0
          WMO(3)= -A1
          CALL SWRIT(IT49,WMO,INTOWP(3))
        END IF
      END IF
      IF (TWO .OR. OSS) THEN
        WMO(1)=2.00D+00
        WMO(2)=OCC1
        WMO(3)=OCC2
        CALL SWRIT(IT49,WMO,INTOWP(3))
        IF (IAND(IPRINT,8) .NE. 0) THEN
          WRITE(ICHECK,810) (WMO(III), III=1,3)
 810      FORMAT(/'  THE FOCC ARRAY:',3F10.6/)
        END IF
        IF (OSS) THEN
          WMO(1)=A0
          WMO(2)=A0
          WMO(3)=A0
          WMO(4)=A0
          WMO(5)=A0
          WMO(6)=A0
          CALL SWRIT(IT49,WMO,INTOWP(6))
          IF (IAND(IPRINT,8) .NE. 0) THEN
            WRITE(ICHECK,808) (WMO(III), III=1,6)
 808        FORMAT(/'  THE ALPHA COUPLING ELEMENTS:',3F10.6/30X
     *      ,3F10.6)
          END IF
          WMO(1)=A0
          WMO(2)=A0
          WMO(3)=-1.00D+00
          WMO(4)=A0
          WMO(5)=3.00D+00
          WMO(6)=-1.00D+00
          CALL SWRIT(IT49,WMO,INTOWP(6))
          IF (IAND(IPRINT,8) .NE. 0) THEN
            WRITE(ICHECK,809) (WMO(III),III=1,6)
 809        FORMAT('   THE BETA COUPLING ELEMENTS:',3F10.6/30X,
     *      3F10.6)
          END IF
        ELSE IF (TWO) THEN
          CI1=DSQRT(OCC1/A2)
          CI2=DSQRT(OCC2/A2)
          WMO(1)=A0
          WMO(2)=A0
          WMO(3)=A1-(A1/OCC1)
          WMO(4)=A0
          WMO(5)=A1
          WMO(6)=A1-(A1/OCC2)
          CALL SWRIT(IT49,WMO,INTOWP(6))
          IF (IAND(IPRINT,8) .NE. 0) THEN
            WRITE(ICHECK,808) (WMO(III),III=1,6)
          END IF
          WMO(1)=A0
          WMO(2)=A0
          WMO(3)=A1
          WMO(4)=A0
          WMO(5)=A1-(A1/(CI1*CI2))
          WMO(6)=A1
          CALL SWRIT(IT49,WMO,INTOWP(6))
          IF (IAND(IPRINT,8) .NE. 0) THEN
            WRITE(ICHECK,809) (WMO(III),III=1,6)
          END IF
        END IF
      END IF
 660  CONTINUE
      IF (TWOD) THEN
        IA47(7)=NTYPES
        IA47(8)=IDATA(2)
        IA47(9)=IDATA(3)
        IA47(10)=IDATA(4)
        IF (CALTYP.EQ.'GRSCF ' .OR. CALTYP.EQ.'TCSCF ') THEN
          DO 302 IJ=1,NBATRI
            ALPHA(IJ)=A0
 302      BETA(IJ)=A0
          IF (IOPEN .EQ. 0) THEN
            NSORB(1)=IOCC
            NSORB(2)=NTOTAL-IOCC
            FOCC(1)=A2
            FOCC(2)=A0
            IJ=0
            DO 303 I=1,IOCC
              DO 303 J=1,I
                IJ=IJ+1
                ALPHA(IJ)=A2
 303        BETA(IJ)=-A1
          ELSE IF (HS) THEN
            NSORB(1)=IOCC
            NSORB(2)=JOCC
            NSORB(3)=NTOTAL-KOCC
            FOCC(1)=A2
            FOCC(2)=A1
            FOCC(3)=A0
            IJ=0
            DO 304 I=1,IOCC
              DO 304 J=1,I
                IJ=IJ+1
                ALPHA(IJ)=A2
 304        BETA(IJ)=-A1
            IMN=IOCC+1
            IMX=IOCC+JOCC
            DO 305 I=IMN,IMX
              IJ=IPQ(I)
              DO 306 J=1,IOCC
                IJ=IJ+1
                ALPHA(IJ)=A1
 306          BETA(IJ)=-A1S2
              DO 307 J=IMN,I
                IJ=IJ+1
                ALPHA(IJ)=A1S2
 307          BETA(IJ)=-A1S2
 305        CONTINUE
          ELSE IF (OSS) THEN
            NSORB(1)=IOCC
            NSORB(2)=1
            NSORB(3)=1
            NSORB(4)=NTOTAL-KOCC
            FOCC(1)=A2
            FOCC(2)=A1
            FOCC(3)=A1
            FOCC(4)=A0
            IJ=0
            DO 308 I=1,IOCC
              DO 308 J=1,I
                IJ=IJ+1
                ALPHA(IJ)=A2
 308        BETA(IJ)=-A1
            IJ=IPQ(IOCC+1)
            DO 309 J=1,IOCC
              IJ=IJ+1
              ALPHA(IJ)=A1
 309        BETA(IJ)=-A1S2
            IJ=IPQ(IOCC+2)
            DO 1309 J=1,IOCC
              IJ=IJ+1
              ALPHA(IJ)=A1
 1309       BETA(IJ)=-A1S2
            IJ=IPQ(IOCC+2)+IOCC+1
            ALPHA(IJ)=A1S2
            BETA(IJ)=A1S2
          ELSE IF (TWO) THEN
            NSORB(1)=IOCC
            NSORB(2)=1
            NSORB(3)=1
            NSORB(4)=NTOTAL-KOCC
            FOCC(1)=A2
            FOCC(2)=OCC1
            FOCC(3)=OCC2
            FOCC(4)=A0
            IJ=0
            DO 508 I=1,IOCC
              DO 508 J=1,I
                IJ=IJ+1
                ALPHA(IJ)=A2
 508        BETA(IJ)=-A1
            IJ=IPQ(IOCC+1)
            DO 509 J=1,IOCC
              IJ=IJ+1
              ALPHA(IJ)=OCC1
 509        BETA(IJ)=-OCC1*A1S2
            IJ=IPQ(IOCC+2)
            DO 1509 J=1,IOCC
              IJ=IJ+1
              ALPHA(IJ)=OCC2
 1509       BETA(IJ)=-OCC2*A1S2
            IJ=IPQ(IOCC+2)
            ALPHA(IJ)=OCC1*A1S2
            BETA(IJ)=A0
            IJ=IPQ(IOCC+3)
            ALPHA(IJ)=OCC2*A1S2
            BETA(IJ)=A0
            IJ=IPQ(IOCC+2)+IOCC+1
            ALPHA(IJ)=A0
            BETA(IJ)= -DSQRT(OCC1*OCC2)*A1S2
          END IF
C
C  ROTATE ALPHA,BETA TO SCF ORDERING; USE DC FOR SCRATCH
C
          IF (IAND(IPRINT,32) .NE. 0) THEN
            WRITE(ICHECK,*) '  THE ALPHA ARRAY IN SCF ORDER:'
            CALL PRINTS(ALPHA,NBATRI,NTOTAL,ICHECK)
          END IF
          CALL ORDER(ALPHA,LORD,DC,NTOTAL,NBATRI)
          IF (IAND(IPRINT,32) .NE. 0) THEN
            WRITE(ICHECK,*) '  THE ALPHA ARRAY IN DRT ORDER:'
            CALL PRINTS(ALPHA,NBATRI,NTOTAL,ICHECK)
            WRITE(ICHECK,*) '  THE BETA ARRAY IN SCF ORDER:'
            CALL PRINTS(BETA,NBATRI,NTOTAL,ICHECK)
          END IF
          CALL ORDER(BETA,LORD,DC,NTOTAL,NBATRI)
          IF (IAND(IPRINT,32) .NE. 0) THEN
            WRITE(ICHECK,*) '  THE BETA ARRAY IN DRT ORDER:'
            CALL PRINTS(BETA,NUMIJ,NTOTAL,ICHECK)
          END IF
C
CRRR
CRBR  WRITE(ICHECK,*) ' AT WWRITW AT 690 '
          WRITE(ICHECK,1004)
 1004     FORMAT(/'  I AM WRITING TO IT47!')
        IA47(125)=IA47(124)+INTOWP(IJIND)
        IA47(126)=IA47(125)+INTOWP(NTOTAL*NTOTAL)*3*NAT
        IA47(127)=IA47(126)+INTOWP(NAT*NAT)*9
        IA47(128)=IA47(127)+NBATRI
        IA47(129)=IA47(128)+INTOWP(NTOTAL*NTOTAL)
        IA47(130)=IA47(129)+INTOWP(NTOTAL*NTOTAL)
        IA47(131)=IA47(130)+INTOWP(3*NAT)
        IA47(132)=IA47(131)+INTOWP(NBATRI)
C
        IA47(174)=INTOWP(IJIND)
        IA47(175)=INTOWP(NTOTAL*NTOTAL)*3*NAT
        IA47(176)=INTOWP(NAT*NAT)*9
        IA47(177)=NBATRI
        IA47(178)=INTOWP(NTOTAL*NTOTAL)
        IA47(179)=INTOWP(NTOTAL*NTOTAL)
        IA47(180)=INTOWP(3*NAT)
        IA47(181)=INTOWP(NBATRI)
        IA47(182)=INTOWP(NBATRI*NTOTAL)
C
          CALL WWRITW(IT47,IA47,192,IA47(101),JUNK)
          CALL WWRITW(IT47,FOCC,INTOWP(5),IA47(104),JUNK)
          CALL WWRITW(IT47,NSORB,5,IA47(105),JUNK)
          CALL WWRITW(IT47,ALPHA,INTOWP(NBATRI),IA47(106),JUNK)
          CALL WWRITW(IT47,BETA,INTOWP(NBATRI),IA47(107),JUNK)
          WRITE(ICHECK,1003) (IA47(III), III=1,192)
        END IF
      END IF
C
      JCODE = 3
      CALL RCLOSE(IT49,JCODE)
      IF (TWOD) CALL RCLOSE(IT47,JCODE)
      WRITE(ICHECK,*) ' JUST CLOSED FILE 47 '
C
      RETURN
      END
