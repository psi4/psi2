      SUBROUTINE DIPOLE(UAS,P,DIPX,DIPY,DIPZ,ICENT,AUX,AUX2,NLAMDA)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL IANDJ
      CHARACTER*32 CENT(5)
      COMMON/BASIS/NBASIS,NBFAO,NBFSO,NBATRI
      COMMON/COORD/CHGS(112),C(3,112),W(112)
      COMMON/EXYZS/EX(7,7,13),EY(7,7,13),EZ(7,7,13)
      COMMON/FUNCS/NATOM,N3N,NSYM
      COMMON/GAUSS/ZS(200),CS(200)
      COMMON/IJVEC/IX(84),IY(84),IZ(84),JX(84),JY(84),JZ(84)
      COMMON/INDEX/IJX(225),IJY(225),IJZ(225),IJPOS(225)
      COMMON/NSHEL/KNUC(200),KTYPE(200),KSTART(200),KLOC(200),
     1 KMIN(200),KMAX(200),KNG(200),NSHELL,NPRIM
      COMMON/ROOT /XX,U(9),WT(9),NROOTS
      COMMON/SIGNS/IPQ(500),IPRNT
      COMMON/TEMP0/SX0(36),SY0(36),SZ0(36),DX0(36),DY0(36),DZ0(36)
      DIMENSION UAS(NBFAO,NBFSO),AUX(*),NLAMDA(10),AUX2(*)
      DIMENSION P(NBATRI),DIPX(NBATRI),DIPY(NBATRI),DIPZ(NBATRI)
      DATA ITOL / 10 /
      DATA PI212 / 1.1283791670955D+00 /
      DATA PI32 / 5.56832799683170D+00 /
      DATA DEBYE / 2.541765480D+00 /
      DATA AZERO,HALF,ONE,TWO / 0.0D+00 , 0.5D+00 , 1.0D+00 , 2.0D+00 /
      DATA NQLIM / 7 /
      DATA CENT(1) / ' W.R.T. CENTER OF MASS        = '/
      DATA CENT(2) / ' W.R.T. ORIGIN                = '/
      DATA CENT(3) / ' W.R.T. CENTER OF ELEC CHARGE = '/
      DATA CENT(4) / ' W.R.T. CENTER OF NUCL CHARGE = '/
      DATA CENT(5) / ' W.R.T. CENTER OF NET CHARGE  = '/
    1 FORMAT(//,2X,' CALCULATION OF DIPOLE MOMENT'/)
    2 FORMAT(//,2X,' P MATRIX'/)
    3 FORMAT(//,2X,' DIPX MATRIX (AO BASIS)'/)
    4 FORMAT(//,2X,' DIPY MATRIX (AO BASIS)'/)
    5 FORMAT(//,2X,' DIPZ MATRIX (AO BASIS)'/)
    6 FORMAT(//,2X,' DIPOLE MOMENTS',A29,' IN DEBYE'/
     1        /,2X,' DEX = ',F12.8,3X,' DNX = ',F12.8,3X,' DTX = ',F12.8
     2        /,2X,' DEY = ',F12.8,3X,' DNY = ',F12.8,3X,' DTY = ',F12.8
     3        /,2X,' DEZ = ',F12.8,3X,' DNZ = ',F12.8,3X,' DTZ = ',F12.8
     4        /)
    7 FORMAT(2X,' TOTAL DIPOLE MOMENT',A32,F12.8,' DEBYE'/)
C
      TOL=ITOL*2.30258D+00
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,1)
      WRITE(6,2)
      CALL PRINT(P,NBATRI,NBASIS,6)
C
C     ZERO ALL THE CORE THAT WE NEED FOR S AND ONE ELECTRON INTEGRALS
C
  301 CONTINUE
      DO 101 I=1,NBATRI
      DIPX(I)=AZERO
      DIPY(I)=AZERO
      DIPZ(I)=AZERO
  101 CONTINUE
C
C:::::::::::::::::::::::::::::
C:::::----- I SHELL -----:::::
C:::::::::::::::::::::::::::::
C
      DO 6000 ISH=1,NSHELL
C
      IATOM=KNUC(ISH)
      AX=C(1,IATOM)
      AY=C(2,IATOM)
      AZ=C(3,IATOM)
      IGMIN=KSTART(ISH)
      IGMAX=IGMIN+KNG(ISH)-1
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      LOCI=KLOC(ISH)
C
C:::::::::::::::::::::::::::::
C:::::----- J SHELL -----:::::
C:::::::::::::::::::::::::::::
C
      DO 5000 JSH=1,ISH
C
      JATOM=KNUC(JSH)
      BX=C(1,JATOM)
      BY=C(2,JATOM)
      BZ=C(3,JATOM)
      JGMIN=KSTART(JSH)
      JGMAX=JGMIN+KNG(JSH)-1
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      LOCJ=KLOC(JSH)
      IANDJ=ISH.EQ.JSH
C
C     ----- WORK OUT INDICES FOR COMBINING 2D INTEGRALS -----
C
      MIJ=0
      JMAX=MAXJ
      II=-1
      DO 104 I=MINI,MAXI
      II=II+1
      JJ=-1
      NX=IX(I)
      NY=IY(I)
      NZ=IZ(I)
      IF(IANDJ) JMAX=I
      DO 103 J=MINJ,JMAX
      MIJ=MIJ+1
      JJ=JJ+1
      IJX(MIJ)=NX+JX(J)
      IJY(MIJ)=NY+JY(J)
      IJZ(MIJ)=NZ+JZ(J)
      IDXI=LOCI+II
      IDXJ=LOCJ+JJ
      IDXS=IPQ(MAX0(IDXI,IDXJ))+MIN0(IDXI,IDXJ)
      IJPOS(MIJ)=IDXS
  103 CONTINUE
  104 CONTINUE
C
      XAB=AX-BX
      YAB=AY-BY
      ZAB=AZ-BZ
      RAB=XAB*XAB+YAB*YAB+ZAB*ZAB
CIBM  ZEROTH ORDER
      MAXIJ=MAX0(LIT+2,LJT+2)
C
      DO 4000 IG=IGMIN,IGMAX
      CSI=CS(IG)*PI32
      AI=ZS(IG)
      AXI=AI*AX
      AYI=AI*AY
      AZI=AI*AZ
C
      IF(IANDJ) JGMAX=IG
      DO 3000 JG=JGMIN,JGMAX
      CSJ=CS(JG)
      BJ=ZS(JG)
      BXJ=BJ*BX
      BYJ=BJ*BY
      BZJ=BJ*BZ
C
      PP=AI+BJ
      TPP=ONE/PP
      TEMP=(AI*BJ*RAB)*TPP
C
C     ----- IGNORE INTEGRAL IF PRE-EXPONENTIAL TOO SMALL -----
C
      IF(TEMP.GT.TOL) GO TO 3000
C
C     ----- DENSITY FACTOR -----
C
      TP=DSQRT(TPP)
      DIJ=CSI*CSJ*DEXP(-TEMP)*TPP
      IF(IANDJ.AND.IG.NE.JG) DIJ=DIJ+DIJ
      PFAC=DIJ*TP
      PTWO=TPP*HALF
C
C     FORM SOME PRODUCTS NEEDED IN INTEGRAL EVALUATION
C
      PX=(AXI+BXJ)*TPP
      PY=(AYI+BYJ)*TPP
      PZ=(AZI+BZJ)*TPP
      PAX=PX-AX
      PAY=PY-AY
      PAZ=PZ-AZ
      PBX=PX-BX
      PBY=PY-BY
      PBZ=PZ-BZ
C
      CALL ECAL(PAX,PAY,PAZ,PBX,PBY,PBZ,PTWO,MAXIJ)
C
      CX=AZERO
      CY=AZERO
      CZ=AZERO
      PCX=PX-CX
      PCY=PY-CY
      PCZ=PZ-CZ
C
      A12=AI+AI
      B12=BJ+BJ
C
      IN=-NQLIM
      DO 106 NI=1,LIT
      IN=IN+NQLIM
      A11=FLOAT(NI-1)
      DO 105 NJ=1,LJT
      JN=IN+NJ
      B11=FLOAT(NJ-1)
C
C   NORMAL OVERLAP INTEGRALS
      SX0(JN)=EX(NI,NJ,1)
      SY0(JN)=EY(NI,NJ,1)
      SZ0(JN)=EZ(NI,NJ,1)
C
C   NORMAL DIPOLE INTEGRALS
      DX0(JN)=EX(NI,NJ,2)+EX(NI,NJ,1)*PCX
      DY0(JN)=EY(NI,NJ,2)+EY(NI,NJ,1)*PCY
      DZ0(JN)=EZ(NI,NJ,2)+EZ(NI,NJ,1)*PCZ
C
C
  105 CONTINUE
  106 CONTINUE
C
      DO 107 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      X=SX0(NX)
      Y=SY0(NY)
      Z=SZ0(NZ)
      IJ=IJPOS(I)
      XFAC=X*PFAC
      YFAC=Y*PFAC
      ZFAC=Z*PFAC
      YZFAC=Y*Z*PFAC
      XZFAC=X*Z*PFAC
      XYFAC=X*Y*PFAC
      DIPX(IJ)=DIPX(IJ)+DX0(NX)*YZFAC
      DIPY(IJ)=DIPY(IJ)+DY0(NY)*XZFAC
      DIPZ(IJ)=DIPZ(IJ)+DZ0(NZ)*XYFAC
  107 CONTINUE
C
 3000 CONTINUE
 4000 CONTINUE
 5000 CONTINUE
 6000 CONTINUE
C
      IF(IPRNT.LE.2) GO TO 302
      WRITE(6,3)
      CALL PRINT(DIPX,NBATRI,NBFAO,6)
      WRITE(6,4)
      CALL PRINT(DIPY,NBATRI,NBFAO,6)
      WRITE(6,5)
      CALL PRINT(DIPZ,NBATRI,NBFAO,6)
  302 CONTINUE
C
C >>> TRANSFORM FROM AO TO SO BASIS
C
C     NSO2=NBFSO*(NBFSO+1)/2
C     CALL ZERO(AUX,NSO2)
C     DO 1290 I=1,NBFSO
C     DO 1280 J=1,I
C     IJ=IPQ(I)+J
C     VAL=0.0D0
C     DO 1260 MU=1,NBFAO
C     DO 1250 NU=1,NBFAO
C     MUNU=IPQ(MAX0(MU,NU))+MIN0(MU,NU)
C     VAL=VAL+UAS(MU,I)*UAS(NU,J)*DIPZ(MUNU)
C1250 CONTINUE
C1260 CONTINUE
C     AUX(IJ)=VAL
C1280 CONTINUE
C1290 CONTINUE
C
C     WRITE(6,*)' DIPZ MATRIX  (SO BASIS)'
C     CALL PRINT(AUX,NSO2,NBFSO,6)
C 210 CONTINUE
C
C >>> SORT TO SYMMETRY-PACKED SO ORDERING APPROPIATE FOR SCF CODE
C
C     ICNT=0
C     WRITE(6,*)'NSYM=',NSYM
C     IS=0
C     JS=0
C     DO 1490 ISYM=1,NSYM
C     NS=NLAMDA(ISYM)
C     WRITE(6,*)'NS=',NS
C     DO 1470 I=1,NS
C     DO 1460 J=1,I
C     IJ= IPQ(I+IS)+J+JS
C     ICNT=ICNT+1
C     AUX2(ICNT)=AUX(IJ)
C1460 CONTINUE
C1470 CONTINUE
C     JS=JS+NS
C     IS=IS+NS
C1490 CONTINUE
C
C     WRITE(6,*)
C     WRITE(6,*)'ICNT=',ICNT
C     WRITE(6,*)' MATRIX WRITTEN TO FILE84'
C     WRITE(6,6543)(AUX2(IJK),IJK=1,ICNT)
C6543 FORMAT(1X,6F12.7)
C
C     ITAP84=84
C     CALL RFILE(ITAP84)
C     CALL WWRITW(ITAP84,ICNT,1           ,   1,IEND)
C     CALL WWRITW(ITAP84,AUX2,INTOWP(ICNT),IEND,JUNK)
C     CALL RCLOSE(ITAP84,3)
C
C   CALCULATE DIPOLE MOMENTS
      DEX=AZERO
      DEY=AZERO
      DEZ=AZERO
      IJ=0
      DO 110 I=1,NBFAO
      DO 110 J=1,I
      IJ=IJ+1
      FAC=TWO
      IF(I.EQ.J) FAC=ONE
      DEX=DEX+DIPX(IJ)*P(IJ)*FAC
      DEY=DEY+DIPY(IJ)*P(IJ)*FAC
      DEZ=DEZ+DIPZ(IJ)*P(IJ)*FAC
  110 CONTINUE
      DEX=-DEX*DEBYE
      DEY=-DEY*DEBYE
      DEZ=-DEZ*DEBYE
      DNX=AZERO
      DNY=AZERO
      DNZ=AZERO
      DO 112 I=1,NATOM
      DNX=DNX+CHGS(I)*C(1,I)
      DNY=DNY+CHGS(I)*C(2,I)
      DNZ=DNZ+CHGS(I)*C(3,I)
  112 CONTINUE
      DNX=DNX*DEBYE
      DNY=DNY*DEBYE
      DNZ=DNZ*DEBYE
      DTX=DNX+DEX
      DTY=DNY+DEY
      DTZ=DNZ+DEZ
      WRITE(6,6) CENT(ICENT),DEX,DNX,DTX,DEY,DNY,DTY,DEZ,DNZ,DTZ
C
C   CALCULATE THE TOTAL DIPOLE MOMENT
c
      DD=DTX*DTX+DTY*DTY+DTZ*DTZ
      DD=DSQRT(DD)
      WRITE(6,7) CENT(ICENT),DD
c
c   write dipole moment to file28
c
      itap=28
      call ffile(itap,' ',1)
      write(itap,612)dtx,dty,dtz
  612 format(3f20.10)
C
      RETURN
      END
