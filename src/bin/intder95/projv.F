C \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	SUBROUTINE PROJV (NC,IOPT,P2,P3,P4,F1,F2,F3,X3,X4,
     $			  F2P,F3P,F4P)
C \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
C PROJECT CARTESIAN FORCE CONSTANTS AND TEST ROTATIONAL INVARIANCE
C RELATIONS IF TEST OPTION SPECIFIED.
C THIS ROUTINE SUMS IN THE NONLINEAR TERMS.  LINEAR TERMS ARE COMPUTED
C IN LINTR WHICH IS CALLED BEFORE PROJV.
C \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
C ON ENTRY:
C	NC			NA*3
C	P2	(NC,NC)		1ST ORDER PROJECTION MATRIX
C	P3	(NC,NC,NC)	2ND	"	     "
C	P4	(NC,NC,NC,NC)	3RD	"	     "
C	F1	(NC)		SCRATCH SPACE
C	F2	(NC,NC)		SCRATCH SPACE
C	F3	(NC,NC,NC)	SCRATCH SPACE
C	X3	(NC,NC,NC)	SCRATCH SPACE
C	X4	(NC,NC,NC,NC)	SCRATCH SPACE
C	F2P	(NC,NC)		PROJECTED 2ND DERIVATIVES (COMPUTED PREV.
C				BY LINTR)
C ON RETURN:
C	F3P	(NC,NC,NC)	PROJECTED THIRD DERIVS
C	F4P	(NC,NC,NC,NC)	PROJECTED SECOND DERIVS
C NOTES:
C	1. HIGHEST ORDER PROJECTED DETERMINED BY IOPT(4)
C	2. PROJECTED FORCE CONSTANTS ARE SAVED AND PRINTED IN FCOUT
C	   WHICH IS CALLED ELSEWHERE
C \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

	IMPLICIT REAL*8 (A-H,O-Z)

	PARAMETER (TOL=1.0D-10)
	PARAMETER (ZERO = 0.0D0)

	LOGICAL NOERR, NOF1
	CHARACTER STRING*10
	DIMENSION IOPT(30),P2(NC,NC),P3(NC,NC,NC),P4(NC,NC,NC,NC)
	DIMENSION F1(NC), F2(NC,NC), F3(NC,NC,NC)
	DIMENSION X3(NC,NC,NC), X4(NC,NC,NC,NC)
	DIMENSION F2P(NC,NC), F3P(NC,NC,NC), F4P(NC,NC,NC,NC)
      COMMON /IO/ IIN1,IOUT,IIN2,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   I31,I32,I33,I35,I36,I37,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10,
     $   ISCR11,ISCR12,ISCR13,ISCR14
      COMMON /PHYCON/ BOHR,DEBYE,HART,WAVE0,CINT
 2	FORMAT (/' TESTING ROTATIONAL INVARIANCE OF FORCE CONSTANTS:')
 3	FORMAT (/'     NO TESTS PERFORMED: NDER<2')
 4	FORMAT (/'     2ND ORDER RELATION HOLDS FOR ALL CASES.')
 5	FORMAT (/'     3RD ORDER RELATION HOLDS FOR ALL CASES.')
 6	FORMAT (/'     2ND ORDER RELATION FAILS FOR:')
 7	FORMAT ('         I1=',I3,'  I2=',I3)
 8	FORMAT (/'     3RD ORDER RELATION FAILS FOR:')
 9	FORMAT ('         I1=',I3,'  I2=',I3,'  I3=',I3)
 10	FORMAT ('     TOLERANCE IS SET TO:',E10.1D3)
 11	FORMAT (A10)
 12	FORMAT (20X,3F20.10)
 13	FORMAT (2I15)
 14	FORMAT (3F20.10)
 15	FORMAT (/'     NO RELATIONS WILL BE TESTED: ',
     $		 'NO GRADIENTS FOUND IN FILE 11.')

	BOHR2 = BOHR*BOHR
	NOF1 = .FALSE.
        NTEST=IOPT(9)
        NDER=IOPT(4)

	IF (NTEST.EQ.4) THEN
		WRITE (IOUT,2)
		WRITE (IOUT,10) TOL
		END IF

	IF (NDER.LT.2) THEN
	        IF (NTEST.EQ.4) WRITE (IOUT,3)
		RETURN
		END IF
        IF (NTEST.EQ.4.OR.NDER.GT.2) THEN
	  REWIND (I15)
	  READ(I15,13) I,J
	  READ(I15,14) ((F2(I,J),J=1,NC),I=1,NC)
        END IF

	IF (NDER.GT.3) THEN
        REWIND I20
 	READ (I20,13) M,N
 	READ (I20,14) (((F3(I,J,K), K = 1, J), J = 1, I), I = 1, NC)
 	CALL FILL3B (NC,NC,F3)
	END IF


C TEST 1ST ROTATIONAL INVARIANCE RELATION
	IF (NTEST.EQ.4) THEN
		NA = NC/3
		REWIND I11
 128		READ (I11,11,END=129) STRING
		GOTO 128
 129		DO 127 J = 1, NA+1
 127		BACKSPACE I11
      		DO 130 J = 1, NA
 130		READ (I11,12,END=132,ERR=132) (F1((J-1)*3+K),K=1,3)
		GOTO 133

 132		WRITE (IOUT, 15)
		NOF1 = .TRUE.
		GOTO 101	

 133		NOERR = .TRUE.
		DO 100 I1 = 1, NC
		DO 100 I2 = 1, NC
		XXX = ZERO
		DO 110 J1 = 1, NC
 110			XXX = XXX + F1(J1)*P3(J1,I1,I2)*BOHR
	 	IF (ABS(F2(I1,I2)-F2P(I1,I2)-XXX).GT.TOL) THEN
			IF (NOERR) WRITE (IOUT,6)
			NOERR = .FALSE.
			WRITE (IOUT,7) I1,I2
			END IF
 100		CONTINUE
        	IF (NOERR) WRITE (IOUT,4)
	END IF
 101	CONTINUE
      IF (NDER.LT.3) RETURN
C SUM IN ALL TERMS CONTAINING A P2,P3 PRODUCT
	DO 200 J1 = 1, NC
	DO 200 J2 = 1, NC

	DO 210 I = 1, NC
	DO 210 J = 1, NC
	DO 210 K = 1, NC
 210		X3(I,J,K) = P2(J1,I)*P3(J2,J,K)*BOHR

	DO 220 I1 = 1, NC
	DO 220 I2 = 1, I1
	DO 220 I3 = 1, I2
 220	F3P(I1,I2,I3) = F3P(I1,I2,I3) +
     $		F2(J1,J2)* ( X3(I1,I2,I3)+X3(I2,I1,I3)+X3(I3,I1,I2) )

 200    CONTINUE

	IF (NDER.GE.4) THEN

	DO 250 I1 = 1, NC

        DO 252 J2 = 1, NC
        DO 252 J3 = 1, NC
        X4(I1,J2,J3,1) = ZERO
        DO 252 J1 = 1, NC
 252    X4(I1,J2,J3,1) = X4(I1,J2,J3,1) + F3(J1,J2,J3)*P2(J1,I1)

        DO 254 I2 = 1, NC
        DO 254 J3 = 1, NC
        X3(I1,I2,J3) = ZERO
        DO 255 J2 = 1, NC
 255    X3(I1,I2,J3) = X3(I1,I2,J3) + X4(I1,J2,J3,1)*P2(J2,I2)
 254    X3(I1,I2,J3)=X3(I1,I2,J3)*BOHR

 250    CONTINUE

        DO 256  I1 = 1, NC
        DO 256  I2 = 1, I1
        DO 256  I3 = 1, I2
        DO 256  I4 = 1, I3
        DO 256  J3 = 1, NC
 256    F4P(I1,I2,I3,I4) = F4P(I1,I2,I3,I4) +
     $         X3(I1,I2,J3)*P3(J3,I3,I4) + X3(I1,I3,J3)*P3(J3,I2,I4) +
     $         X3(I1,I4,J3)*P3(J3,I2,I3) + X3(I2,I3,J3)*P3(J3,I1,I4) +
     $         X3(I2,I4,J3)*P3(J3,I1,I3) + X3(I3,I4,J3)*P3(J3,I1,I2)

	END IF

        CALL FILL3B(NC,NC,F3P)

	IF (NDER.LT.4) RETURN

C TEST SECOND INVARIACE RELATION (EQ 66)
	IF (NTEST.EQ.4.AND..NOT.NOF1) THEN
		NOERR = .TRUE.
		DO 290 I1 = 1, NC
		DO 290 I2 = 1, NC
		DO 290 I3 = 1, NC
		XXX = ZERO
		DO 295 J = 1, NC
 295		XXX = XXX + F1(J)*P4(J,I1,I2,I3)*BOHR2
		IF (ABS(F3(I1,I2,I3)-F3P(I1,I2,I3)-XXX).GT.TOL) THEN
			IF (NOERR) WRITE (IOUT,8)
			NOERR = .FALSE.
			WRITE (IOUT,9) I1,I2,I3
			END IF
 290		CONTINUE
		IF (NOERR) WRITE (IOUT,5)
	END IF

C COMPLETE FOURTH ORDER FORCE CONSTANTS

        DO 300 I1 = 1, NC
        DO 300 I2 = 1, NC
        DO 300 J2 = 1, NC
        X3(J2,I1,I2) = ZERO
        DO 301 J1 = 1, NC
 301    X3(J2,I1,I2) = X3(J2,I1,I2)+F2(J1,J2)*P3(J1,I1,I2)
 300    X3(J2,I1,I2)=X3(J2,I1,I2)*BOHR2

        DO 310 I1 = 1, NC
        DO 310 I2 = 1, I1
        DO 310 I3 = 1, I2
        DO 310 I4 = 1, I3
        DO 310 J2 = 1, NC
 310    F4P(I1,I2,I3,I4) = F4P(I1,I2,I3,I4) +
     $     X3(J2,I1,I2)*P3(J2,I3,I4) + X3(J2,I1,I3)*P3(J2,I2,I4) +
     $     X3(J2,I1,I4)*P3(J2,I2,I3)

	DO 330 I1 = 1, NC
	DO 330 J2 = 1, NC
        X3(J2,I1,1) = ZERO
	DO 331 J1 = 1, NC
 331	X3(J2,I1,1) = X3(J2,I1,1)+F2(J1,J2)*P2(J1,I1)
 330    X3(J2,I1,1)=X3(J2,I1,1)*BOHR2

	DO 340 I1 = 1, NC
	DO 340 I2 = 1, I1
	DO 340 I3 = 1, I2
	DO 340 I4 = 1, I3
        DO 340 J2 = 1, NC
 340	F4P(I1,I2,I3,I4) = F4P(I1,I2,I3,I4) +
     $     X3(J2,I1,1)*P4(J2,I2,I3,I4) + X3(J2,I2,1)*P4(J2,I1,I3,I4) +
     $     X3(J2,I3,1)*P4(J2,I1,I2,I4) + X3(J2,I4,1)*P4(J2,I1,I2,I3)

	CALL FILL4B(NC,F4P)
	RETURN
	END
