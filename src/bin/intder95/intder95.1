.TH intder95 1 " 22 Oct, 1992" "\*(]W" "\*(]D" 
.SH NAME
intder95 \- program for performing various vibrational analyses and
higher-order nonlinear transformations among force field representations

.SH PREFACE
.LP
This manual documents the 
.B INTDER95
program, which was developed by Wesley D. Allen and co-workers.  While much
care has been exercised in preparing the program package and this manual,
no representation is made that the manual and/or the program are without
error or suitable for every application to which the user may attempt to
apply them.  Any expressed or implied warranties of merchantability or
fitness of the software described herein are disclaimed.  No part of the
software may be reproduced or transmitted in any form or by any means, or
stored in a data base or retrieval system, for any purpose without the
consent of Wesley D. Allen.  Users are responsible for testing the program
package on their own system and comparing results with those supplied with
the software.
.B INTDER95 
is written in standard FORTRAN and has been thoroughly tested only on IBM
RS/6000 machines running under the AIX 3.2.3e and 3.2.5 operating systems
using the XL FORTRAN compiler 2.3.

.SH REQUIRED CITATIONS FOR INTDER95
.LP
General:
.IP "1."
.B INTDER95 
is a general program developed by Wesley D. Allen and co-workers
which performs various vibrational analyses and higher-order nonlinear
transformations among force field representations.
.LP
For force field transformations or Cartesian projection scheme:
.IP "2."
W. D. Allen and A. G. Czaszar, "On the Ab Initio Determination of
Higher-Order Force Constants at Nonstationary Reference Geometries,"
.I J. Chem. Phys. 
.B 98,
2983(1993).
.LP
For Scaled Quantum Mechanical (SQM) force field analyses:
.IP "3."
W. D. Allen, A. G. Csaszar, and D. A. Horner, "The Puckering Inversion
Barrier and Vibrational Spectrum of Cyclopentene.  A Scaled Quantum
Mechanical Force Field Algorithm," 
.I J. Am. Chem. Soc. 
.B 114,
6834(1992).

.SH INTRODUCTION
.LP
.B INTDER95
is a connected set of programs for performing general curvilinear
transformations and associated tasks often encountered in the calculation
of anharmonic molecular force fields.  The capabilites of 
.B INTDER95
include:
.IP "(1)"
Force field transformations between Cartesian and general internal
coordinate spaces up to fourth order, including nonstationary reference
structures.  Both forward and reverse transformations are possible; hence,
by using intermediate Cartesian coordinates, force fields can be
transferred among different representations in the internal space.
.LP
.IP "(2)"
Harmonic vibrational frequency and infrared intensity analyses, both in
Cartesian and internal coordinate space.
.LP
.IP "(3)"
Scaled quantum mechanical (SQM) force field analyses, including efficient
nonlinear optimization of scale factors.
.LP
.IP "(4)"
Transformation of dipole-moment derivatives between Cartesian and internal
coordinates.
.LP
.IP "(5)"
Generation of displaced geometries along general internal coordinates for
use in finite-difference computations of molecular force fields.
.LP
.IP "(6)"
Direct Cartesian projection of any external (translation/rotation) variable
dependence out of Cartesian anharmonic force fields.

The original program 
.B INTDER
was developed to run with the 
.I ab initio
molecular orbital package
.B PSI
(PSITECH Inc., Watkinsville, Georgia).  Accordingly, it used several
conventions for the naming and handling of files.  Such conventions are essentially retained in 
.B INTDER95,
although new output and scratch files have been added.  Vide infra for a
summary of the files used by 
.B INTDER95.

.sL
.pN INPUT        "      "
.pN IDER         "	(if TRANS_TYPE = I_TO_C_R)
.pN FILE11       "	(if READ_GEOM = FALSE)
.pN GEOM         "	(if READ_GEOM = TRUE)
.pN FILE15       "	(if TRANS_TYPE = C_TO_I and DERLVL = 2)
.pN FILE17       "	(if TRANS_TYPE = C_TO_I and TRANS_DIPDER = TRUE or
.pN "\&"         "	 if FREQ_ANAL = CART_CO and IRINT_T = DO)
.pN FILE20       "	(if TRANS_TYPE = C_TO_I and DERLVL = 3)
.pN FILE24       "	(if TRANS_TYPE = C_TO_I and DERLVL = 4)
.pN FILE12       "	(if TRANS_TYPE = I_TO_C and DERLVL = 1)
.pN FILE16       "	(if TRANS_TYPE = I_TO_C and DERLVL = 2)
.pN FILE18       "	(if TRANS_TYPE = I_TO_C and TRANS_DIPDER = TRUE or
.pN "\&"         "	 if FREQ_ANAL = INT_CO and IRINT_T = DO)
.pN FILE21       "	(if TRANS_TYPE = I_TO_C and DERLVL = 3)
.pN FILE25       "	(if TRANS_TYPE = I_TO_C and DERLVL = 4)
.eL "FILES REQUIRED"

.LP
The files
.pN FILE11 ,
.pN FILE15 ,
.pN FILE20 ,
and
.pN FILE24
are the 1st, 2nd, 3rd and 4th derivatives,
respectively, in Cartesian coordinates.
The files
.pN FILE12 ,
.pN FILE16 ,
.pN FILE21 ,
and
.pN FILE25
are the 1st, 2nd, 3rd and 4th derivatives,
respectively, in internal  coordinates.
The file
.pN FILE17
is the dipole moment derivatives in Cartesian coordinates.
The file
.pN FILE18
is the dipole moment derivatives in internal  coordinates.

.sL
.pN FILE31  "	Contains the first derivatives of the external"
.pN "\&"    "	translation and rotation variables with respect"
.pN "\&"    "	to the Cartesian coordinates."
.pN FILE32  "	Contains the second derivatives of the external"
.pN "\&"    "	rotation variables with respect to the Cartesian
.pN "\&"    "	coordinates."
.pN FILE33  "	Contains the third derivatives of the external"
.pN "\&"    "	rotation variables with respect to the Cartesian
.pN "\&"    "	coordinates."
.pN FILE35  "	Contains the second-order projection matrix."
.pN FILE36  "	Contains the third-order projection matrix."
.pN FILE37  "	Contains the fourth-order projection matrix."
.pN FILE80
.pN FILE81
.pN FILE91
.pN FILE92
.pN FILE93
.pN FILE94
.pN FILE95
.pN FILE96
.pN FILE97
.pN FILE98
.eL "TEMPORARY FILES USED"

.sL
.pN OUTPUT
.eL "FILES UPDATED"

.sL
.pN CHECK
.pN INTDERO
.pN FCONST
.pN FILE11       "	(if TRANS_TYPE = I_TO_C or I_TO_C_R and "
.pN "\&"         "	  DERLVL = 1)"
.pN FILE15       "	(if TRANS_TYPE = I_TO_C or I_TO_C_R and "
.pN "\&"         "	  DERLVL = 2)"
.pN FILE17       "	(if TRANS_TYPE = I_TO_C and "
.pN "\&"         "	  TRANS_DIPDER = DO)"
.pN FILE20       "	(if TRANS_TYPE = I_TO_C or I_TO_C_R and "
.pN "\&"         "	  DERLVL = 3)"
.pN FILE24       "	(if TRANS_TYPE = I_TO_C or I_TO_C_R and "
.pN "\&"         "	  DERLVL = 4)"
.pN FILE12       "	(if TRANS_TYPE = C_TO_I and DERLVL = 1)"
.pN FILE16       "	(if TRANS_TYPE = C_TO_I and DERLVL = 2)"
.pN FILE18       "	(if TRANS_TYPE = C_TO_I and "
.pN "\&"         "	  TRANS_DIPDER = DO)"
.pN FILE21       "	(if TRANS_TYPE = C_TO_I and DERLVL = 3)"
.pN FILE25       "	(if TRANS_TYPE = C_TO_I and DERLVL = 4)"
.eL "FILES GENERATED"

.SH INPUT FORMAT
.LP
The input for this program is read from the file
.pN INPUT .
The
.B intder
program reads the definition of internal coordinates from the
.B INTCO
section of the input, and then
searches through the default keyword path (first
.B INTDER
and then
.BR DEFAULT
).  Old-style input may be used by using the 
.B # INTDER ##
indicator at the beginning of the old-style input section of input.dat.
The following keywords are valid:


.IP "\fBDERLVL =\fP \fIinteger\fP"
This gives the highest order of derivative to be transformed.  It can have
a value from 1 to 4.  The default is 2.

.IP "\fBDISPLACEMENTS =\fP \fIdisplacement_vector\fP"
If the DISPLACEMENTS vector is present, this indicates that INTDER95
is to obtain molecular geometries that are distorted in a prescribed
way from the reference geometry.  Note that the distortions are exact
curvilinear distortions.  Each element of this vector is a 
vector consisting of internal coordinate indices and displacement
values.  For example, if you desire two displacements, the
first being a displacement of internal coordinate 1 by 0.01 angstroms,
the second being a combination
of displacements, e.g. coordinate 1 displaced by 0.01 angstroms and
coordinate 2 by 0.05 angstroms, the
.B DISPLACEMENTS
vector would be:
.DS
   displacements = (
     (1 0.01)
     (1 0.01 2 0.05)
     )
.DE

If the 
MASSES array is present, then the Eckart conditions are invoked for the
displacements.  This is important in the evaluation of infrared
intensities by finite differences of dipole moments.  
Otherwise, unit masses are used in the calculation.
If the HIGH_ORDER
option is set, then the new Cartesian geometry is converged upon
using first and second-order information (see 
HIGH_ORDER).

.IP "\fBHIGH_ORDER = \fP \fIboolean\fP"
If true, then first- and second-order information, i.e. the
analytic B(p)(ij) matrices, are used to accelerate convergence to 
new Cartesian geometries in displacement calculations.

.IP "\fBIPRINT =\fP \fIinteger\fP"
This is a four digit number which will be explained below.  The default is
3000.


.IP "\fBDUMMY_ATOMS =\fP \fIreal_array\fP"
This array specifies the Cartesian coordinates of dummy atoms for LIN1
linear bending coordinates.  Each dummy atom position is actually treated
as a fixed direction vector perpendicular to the plane of bending.  The
\fIreal_array\fP is a vector of coordinates of each dummy atom.  Each
element of this vector is another vector in the form \fB(\fP\fIx\fP \fIy\fP
\fIz\fP\fB)\fP.  The numbering for the dummy atoms begins at NA+1 (NA =
number of atoms).  Note that the new LIN1 definition was referred to as
LIN2 in the old intder program.


.IP "\fBFREQ_ANAL =\fP \fIstring\fP"
This option specifies what type of harmonic frequency analysis to perform. 
The options
are:
.  iV            "= NONE"    "no frequency analysis performed"
.  iV            "= INT_CO"  "perform a frequency analysis in internal coordinates"
.  iV            "= CART_CO" "perform a frequency analysis in Cartesian"
.    __                   "coordinates"
.  iV            "= BOTH"    "do frequency analysis in both internal and Cartesian coordinates"
.  iV            "= INT_CO_R"  "the same as = INT_CO except that the force constants"
.    __                   "are input from the"
.    __                   "Q_F_CONSTS vector"
.  iV            "= INTCOR_NO_T"  "the same as = INT_CO_R except that derivatives are not transformed"
.  iV            "= INT_NO_T"  "perform a frequency analysis in internal coordinates but without transforming any derivatives"
.  iV            "= CART_NO_T"  "perform a frequency analysis in Cartesian coordinates but without transforming any derivatives"
.  iV            "= BOTH_T"  "perform a frequency analysis in internal coordinates and Cartesian coordinates but without transforming any derivatives"
.  iV            "= RXN_PATH"  "Perform a frequency analysis in a reduced-dimension internal coordinate space with one constrained reaction variable specified by the RXN_COORD keyword"
.  iV            "= SQMFC"   "Perform a scaled quantum mechanical force constant calculation (SQMFC).  A separate SQMFC input section is required (see below)."
.  iV            "= SQMFC_NO_T" "Same as SQMFC except no derivatives are transformed"
.iL
The default is NONE.

.IP "\fBIRINT_T =\fP \fIstring\fP"
If = NONE, then no IR intensities are computed.  If = DO then internal 
coordinate dipole moment derivatives are read in from
.pN FILE18 
and IR intensities are computed.  Setting IRINT_T = DO_R does the same as
DO except that internal coordinate dipole moment derivatives are read
from the INT_DIPDER vector. The default is NONE.

.IP "\fBINT_DIPDER =\fP \fIreal_matrix\fP"
This matrix must be present if IRINT_T = DO_R.
It is made up of NSX vectors of length 3 and contains 
internal (symmetry) coordinate dipole moment derivatives (x, y, z) in units of
Debye/Angstrom or Debye/radian.
NSX is as defined for Q_F_CONSTS.

.IP "\fBTRANS_DIPDER =\fP \fIboolean\fP"
If true then dipole moment derivatives are transformed.
Masses are read in later so that the
transformation is performed according to the
Eckart conditions.
The dipole derivatives are read from
.pN FILE17
or
.pN FILE18
(see below for a description of
the input required).
For \fBTRANS_DIPDER =\fP true, set DERLVL = 1 and TRANS_TYPE = C_TO_I or I_TO_C.
(TRANS_DIPDER = TRUE assigns TRANS_1DER = TRUE).
It is not possible to transform dipole moment
derivatives at the same time as energy derivatives.
If TRANS_DIPDER = TRUE, FREQ_ANAL and IRINT_T should be NONE.
The default is FALSE.

.IP "\fBMASSES =\fP \fIreal_vector\fP or \fIcharacter_vector\fP" 
Atomic masses are required if FREQ_ANAL is not NONE or TRANS_DIPDER is
TRUE.  The MASSES vector is of length (# of atoms).  This may be the list
of either atomic masses or character labels for the atoms. The available
labels are: "H", "H1", "H2", "H3", "D", "T", "HE", "HE4", "HE3", "LI",
"LI7", "LI6", "BE", "BE9", "B", "B11", "B10", "C", "C12", "C13", "N",
"N14", "N15", "O", "O16", "O17", "O18", "F", "F19", "NE", "NE20", "NE21",
"NE22", "NA", "NA23", "MG", "MG24", "MG25", "MG26", "AL", "AL27", "SI",
"SI28", "SI29", "SI30", "P", "P31", "S", "S32", "S33", "S34", "S36", "CL",
"CL35", "CL37", "AR", "AR36", "AR38", "AR40". The array defaults to unit
masses if the MASSES vector is not required.


.IP "\fBMASS_TRANS =\fP \fIboolean\fP"
If true, the masses specified by the MASSES array are used for derivative
transformations, including Cartesian projections.  Otherwise, unit masses
are used.

.IP "\fBMULTI =\fP \fIinteger\fP"
This option specifies the number of geometries to read from
.pN FILE11 .
If 
.B MULTI 
= 0, the last geometry in 
.pN FILE11
is used.  If 
.B MULTI 
= n, then n geometries are read from
.pN FILE11
from the top to bottom.  The default is 0.  (Supported by new-style
input only).

.IP "\fBNTEST =\fP \fIinteger\fP"
Numerical testing of derivatives of the internal coodinates
with respect to the Cartesian coordinates is useful for
debugging new types of coordinates added to the program.
.  iV            "= \00"  "no test"
.  iV            "= \01"  "numerically test and check the analytic"
.    __                   "B(P)(I,J) and C(P)(M,N) matrices"
.  iV            "= -1"   "form the B(P)(I,J) and C(P)(M,N) matrices"
.    __                   "numerically and use these matrices"
.    __                   "matrices in the transformation of"
.    __                   "derivatives"
.  iV            "= \02"  "numerically test and check the analytic"
.    __                   "B(P)(I,J,K) and C(P)(L,M,N) matrices"
.  iV            "= -2"   "form the B(P)(I,J,K) and C(P)(L,M,N) matrices"
.    __                   "numerically and use these matrices"
.    __                   "in the transformation of derivatives"
.iL
The default is 0.

.IP "\fBREDUN_TEST =\fP \fIboolean\fP"
Analyze the generalized overlap matrix (B u B(T)) to gauge the linear dependence
of the internal coordinates used to construct the first-order B matrix.

.IP "\fBQ_F_CONSTS =\fP \fIreal_matrix\fP"
This matrix must be present if FREQ_ANAL = NONE_R.
Its dimension is NSX by NSX, where NSX = the number of symmetrized
internal coordinates, or the number of simple internal coordinates if
no symmetrized internal coordinates are given.

.IP "\fBREAD_GEOM =\fP \fIboolean\fP"
If true, then the geometry is read from the top of the
.pN GEOM
file.  Otherwise, the last geometry in
.pN FILE11
is used (unless MULTI is greater than 0).  The default is FALSE.

.IP "\fBPED = \fP \fIboolean\fP"
If true, assign normal modes according to the simplified 
potential energy distribution
(PED) method.  Default is false; normal modes are now assigned according
to the diagonal elements of the total energy distribution (TED).

.IP "\fBRXN_COORD = \fP \fIinteger\fP"
If 
.B FREQ_ANAL
= RXN_PATH, then the 
.B RXN_COORD
keyword specifies the number of the internal coordinate which is
constrained as the reaction variable.  There is no default.

.IP "\fBSTOP =\fP \fIinteger\fP"
If 
STOP = 1,
stop after forming the B(P)(I,J) and C(P)(Q,R) matrices (stored on 
FILE91, FILE92, and FILE96),
and the B(P)(I,J,K),
and C(P)(Q,R,S) matrices (stored on FILE93, FILE94, and FILE97), as governed by 
DERLVL and TRANS_1DER.
No auxiliary files are required (unless READ_GEOM = TRUE).
If 
STOP = 2, stop after forming the B(eta)(I1,I2,I3,...,In) matrices for 
Cartesian projection.  If 
STOP = 3, stop after forming the explicit Cartesian projection
matrices.  The default is 0.

.IP "\fBTRANS_1DER =\fP \fIboolean\fP"
If true, then assume non-zero first derivatives are to be transformed.  
The default is FALSE.

.IP "\fBTRANS_TYPE =\fP \fIstring\fP"
This specifies what type of transformation to perform.  If equal to
C_TO_I, Cartesian derivatives are transformed to internal coordinate
derivatives.  If equal to I_TO_C, then internal coordinate derivatives are
transformed to Cartesian derivatives.  I_TO_C_R is the same as I_TO_C 
except the internal coordinate derivatives are read from the file
.pN IDER
which is produced by the
.B intdif
program.  If equal to PROJECT, then Cartesian force constants are projected
onto the internal space of the molecular system.  Direct projection is
currently not available for linear molecules.  However, such analyses can be
performed indirectly by neglecting Cartesian gradients (TRANS_1DER = FALSE),
transforming the force field into any valid, complete set of internal
coordinates (TRANS_TYPE = C_TO_I), and finally back-transforming the results
once again to the Cartesian space (TRANS_TYPE = I_TO_C or I_TO_C_R).
The default is C_TO_I.

.IP "\fBCHECK_ORTHO =\fP \fIboolean\fP"
Check the orthogonality conditions among derivatives of internal and
external variables according to the value of DERLVL.  
If
.B CHECK_ORTHO
is TRUE
the value of 
.B STOP
is set automatically to 1.  Additionally, if 
.B MASS_TRANS
= TRUE, the masses specified by the MASSES array are used.  Otherwise, unit
masses are assumed.  The default is FALSE.

.IP "\fBCHECK_INV =\fP \fIboolean\fP"
Test the Cartesian force field for invariance with respect to external
variables (translations/rotations).  The default is 
.B FALSE.

.SH INPUT FOR SQM FORCE FIELD ANALYSES
.LP
An SQM force field analysis is performed if FREQ_ANAL=SQMFC or
SQMFC_NO_T.   
If an SQM analysis is desired, a separate input section is required. 
In the input file, 
begin a new input section with the label sqmfc.  This input
section may be contained outside or inside the intder section.
The following options are valid.

.IP "\fBFUNDAMENTALS =\fP \fIreal_array"
This keyword specifies the experimental frequencies to be used in the fit.
Although the keyword is named FUNDAMENTALS, note that it is also
possible to fit to experimental harmonic frequencies, if available.
FUNDAMENTALS is a vector of arrays.  Each vector specifies the 
experimental frequencies for a given isotopomer, along with the
corresponding normal mode and an optional weight factor.  
For example, suppose that we wish to perform an SQMFC analysis 
on HNCO and DNCO.  Suppose further that we have experimental
frequencies for all six modes of HNCO, but for only three modes
of DNCO.  The appropriate input might be

.DS
      fundamentals = (
          ((1   568.3)
           (2   635.1)
           (3   826.8)
           (4  1336.3)
           (5  2313.6)
           (6  3724.1 1.0))
          ((4  1323.1)
           (5  2288.4)
           (6  2738.6))
         )
.DE

The frequency 3724.1 is given a weight factor of 1.0, which will
override any weights assigned by the WEIGHT keyword (
.I vide infra
).

For each isotopomer, the fundamentals are to be numbered from lowest
wavenumber to highest wavenumber, disregarding symmetry species but
.I accounting for missing assignments.
In essence, after the eigenvalues of the GF matrix have been determined and
ordered in a given step of the optimization, the specified numbering
indicates the correspondence of these eigenvalues to the experimental
fundamental frequencies involved in the SQMFC procedure.

.IP "\fBISOTOPES =\fP \fIreal_array\fP or \fIcharacter_array\fP" 
Masses are input following this keyword for each of the isotopes 
to be considered in the SQMFC procedure.  The format is the same
as for the MASSES keyword, except that ISOTOPES is a vector
of mass vectors.   For example, the ISOTOPES vector for HNCO
might be

.DS
   isotopes = ((O C N H))
.DE

whereas if the deuterated isotopomer was also to be considered,
the appropriate input would be 

.DS
   isotopes = (
      (O C N H)
      (O C N D)
     )
.DE

.IP "\fBOPT_SF = \fP \fIboolean\fP"
This keyword tells the program whether to optimize the scale factors in the 
SQMFC analysis (true) or to use fixed scale factors (false).

.IP "\fBSCALE_FACTORS = \fP \fIreal and int array\fP"
This keyword allows the input of the scale factors for the SQMFC procedure
(fixed or initial guesses, depending on the value of OPT_SF).
The input consists of one array for each scale factor.  Each array 
contains a scale factor (real) followed by the internal coordinates to
which the scale factor applies (integers).  The following example
shows a scale factor of 0.815 for internal coordinates 1 and 2,
and a scale factor of 0.898 for internal coordinate 3:
.DS

   scale_factors = (
      (0.815 1 2)
      (0.898 3)
     )
.DE

.IP "\fBSF_HESS = \fP \fIstring\fP"
This keyword tells the program how to determine the scale factor Hessian
for an optimization.
The options are:
.  iV            "= GUESS"    "Allow the program to make initial guesses for"
.    __                      "the diagonal elements of the scale factor Hessian."
.  iV            "= INPUT"    "Input the diagonal elements of the inverse of the scale factor Hessian with the SF_HESS_DIAG option."
.  iV            "= ANAL "     "Compute the scale factor Hessian analytically at each step."
.  iV            "= NUM_FD"   "Compute the scale factor Hessian numerically at each step by a finite-difference procedure."
.  iV            "= LLS  "      "Obtain the scale factor Hessian within the linearized least squares approximation."
.iL

If SF_HESS = INPUT, the SF_HESS_DIAG vector must be specified.
The ANAL option is recommended, as it employs a full second-order
algorithm using the Newton-Raphson method.  This choice 
provides the most rapid and cost-effective convergence.  The LLS option
employs a Newton-Raphson method but with the analytic Hessian 
appropriate for a linear least-squares problem.  Convergence is significantly
degraded relative to ANAL in the later iterations.  The NUM_FD option
is not as cost-effective as either ANAL or LLS, even though convergence is
obtained in the same number of steps as ANAL.  The primary use of this
option is to test the analytic Hessians computed by the ANAL option.  Note that the
Hessian is printed at each iteration to the CHECK file.  The INPUT option
provides rapid iterations, but several cycles may be required for convergence.
This option allows one to damp the initial steps by appropriate choice
of the diagonal elements of the inverse Hessian.  Both GUESS and INPUT
utilize a Davidon-Fletcher-Powell scheme with cubic interpolation.

.IP "\fBSF_HESS_DIAG =\fP \fIreal_array\fP"
If SF_HESS = INPUT, then SF_HESS_DIAG specifies the diagonal elements
of the inverse of the scale factor Hessian.  The length of the array is the number
of scale factors used (see SCALE_FACTORS above).  

.IP "\fBWEIGHT = \fP \fIinteger\fP"
This keyword determines how the weights are set in the SQMFC analysis.
A value of 0 sets weights for each frequency to the inverse of the
frequency, a value of 1 sets all weights equal to 1, and a value of 
2 sets weights according to the reciprocal of the square of the frequencies.
The default is 0 (recommended by Pulay et al.)  Weights may be overridden for
specific frequencies in the FUNDAMENTALS input (\fIvide supra\fP).  All
weights are normalized before scale factor optimization begins.

.SH FORMAT OF IDER.DAT FILE
.IP
If TRANS_TYPE = I_TO_C_R the unique internal coordinate derivatives
which are nonzero are read in from the 
.pN IDER
file, which is produced by the
.B intdif
program.
Use units consistent with the energy in
mdyne*Angstrom.  This line takes one or more of several forms
given in a, b, c, and d.

This file has the following format:

.iL "a. FORMAT(I5,15X,F20.10)"
This must be present if TRANS_1DER is TRUE.
It is repeated for each nonzero first derivative and terminated with M = 0.
.iO       "(1) M"     "This is the symmetry internal coordinate number."
.iO       "(2) F1(M)" "The first derivatives."

.iL "b. FORMAT(2I5,10X,F20.10)"
This must be present if DERLVL >= 2.
It is repeated for each nonzero second derivative and terminated with M = 0.
.iO       "(1) M" "A symmetry internal coordinate number."
.iO       "(2) N" "A symmetry internal coordinate number satisfying M >= N."
.iO       "(3) F2(M,N)" "The second derivatives."

.iL "c. FORMAT(3I5,5X,F20.10)"
This must be present if DERLVL >= 3, in which case, line 6b must also
be present.
It is repeated for each nonzero third derivative and terminated with M = 0.
.iO       "(1) M" "A symmetry internal coordinate number."
.iO       "(2) N" "A symmetry internal coordinate number satisfying M >= N."
.iO       "(3) P" "A symmetry internal coordinate number satisfying N >= P."
.iO       "(4) F3(M,N,P)" "The third derivatives."

.iL "d. FORMAT(4I5,F20.10)"
This must be present if DERLVL >= 4, in which case, lines 6b and 6c must also
be present.
It is repeated for each nonzero fourth derivative and terminated with M = 0.
.iO       "(1) M" "A symmetry internal coordinate number."
.iO       "(2) N" "A symmetry internal coordinate number satisfying M >= N."
.iO       "(3) P" "A symmetry internal coordinate number satisfying N >= P."
.iO       "(4) Q" "A symmetry internal coordinate number satisfying P >= Q."
.iO       "(5) F4(M,N,P,Q)" "The fourth derivatives."

.iL

.SH INTERNAL COORDINATE SPECIFICATION
The definition of internal coordinates is nearly the same as for the
.B bmat
program.  However, there have been several changes and additions since the
original
.B intder
program.  The following is a summary of the internal coordinate specifications
for the new 
.B INTDER95 
program.  See intco(2) for a description of how to set up the
.B intco
input for compatibility with  older programs such as 
.B intder
and
.B bmat.

The
.B intco
section of the input is used to define the internal coordinates
used by \fBINTDER95\fP(1).  These internal coordinates consist
of two types,
.I simple
internal coordinates and
.I symmetrized
internal coordinates.  The symmetrized internal coordinates are
symmetry-adapted linear combinations (SALCs) of the simple internal
coordinates.

.SS SIMPLE INTERNAL COORDINATES
.LP
The following types of simple internal coordinates are valid:
.iO     TYPE
.iV         "STRE"   "for bond stretching coordinates"
.iV         "BEND"   "for valence bond angle coordinates"
.iV         "OUT"    "for out-of-plane bending coordinates"
.iV         "TORS"   "for torsion coordinates"
.iV         "LIN1"
for the deformation of a linear chain of atoms in the plane perpendicular to
a specified direction vector
.iV         "SPF"
Simons-Parr-Finlan coordinates for bond lengths, i.e.,
.if n 1-r0/r.
.if t 1-r\s-2\d0\u\s0/r.
.iV         "LINX" 
for the deformation of a linear chain of atoms in the plane containing a fourth
atom
.iV         "LINY"
for the deformation of a linear chain of atoms perpendicular to the plane containing a fourth
atom
.iV         "RCOM"
for center-of-mass separation coordinates between intermolecular fragments.

.LP
The simple internal coordinates are entered as:
.DS

  \fBTYPE \fP= (
    (\fIindex A B \fP<\fIC\fP> <\fID\fP>)
    (  "   " "   "  "   "  ) (\fRrepeat this until
    (  "   " "   "  "   "  )  all simples of this
    (  "   " "   "  "   "  )  type are defined)
    )
.DE
.LP
where
.I index
is a label used in the SYMM and ASYMM vectors,
.I A-D
are atom labels.
Note, the indices must run from 1 to \fInsim \fPwhere
nsim is the total number of simple internal coordinates.
The atom labels are defined as follows:
.iO
For 
.B STRE,
the coordinate is the A-B bond distance, and the order of A and B does not
matter.  (C and D must not be given.)
.iO
For 
.B BEND,
it is the A-B-C bond angle.  A and C can be exchanged but the central atom
must be B.  (D must not be given.)
.iO
For 
.B OUT,
the coordinate is the angle between the AB vector and the plane containing
C-B-D.  The coordinate is positive if A is on the same side of
the plane as the vector 
(B->C) X (B->D) (that is, the cross product of the vector from atom B to atom C and
the vector from atom B to atom D).  Note that the central atom comes second
here and that C and D can be exchanged but that this changes the sign of
the coordinate.
.iO
For 
.B TORS,
the coordinate is defined as the angle between the planes ABC and BCD.
Note that ABCD and DCBA are equivalent.
.iO
For 
.B LIN1,
the coordinate is the bending of the linear chain of atoms ABC in
the plane perpendicular to the vector D.  
The vector D is input as dummy atom coordinates (
.I vide supra,
DUMMY_ATOMS).
LIN1 is positive if (B->C) X (B->A) (that is, the cross product of the vector
from atom B to atom C and the vector from atom B to atom A) is in the same 
direction as the D vector.
.iO
For
.B SPF,
the coordinate involves the A-B bond distance, and the order of A and B
does not matter.  SPF is different from all other simple coordinates in
that C, if specified, is \fIreal \fPrather than an integer.  C, if given,
is the reference bond length
.if n r0.
.if t r\s-2\d0\u\s0.  
If C=0.0 the current value of the A-B bond length is taken as the
reference.
.iO
For 
.B LINX
the coordinate is the x component of the
.B c -> d
unit vector in the local coordinate system in which the 
.B b -> c
vector defines the +z axis and the 
.B a
atom lies in the xz plane in the +x direction.
.iO
For 
.B LINY
the coordinate is the y component of the
.B c -> d
unit vector in the local coordinate system in which the 
.B b -> c
vector defines the +z axis and the 
.B a
atom lies in the xz plane in the +x direction.
.iO
For
.B RCOM
the coordinate is the distance between the center of mass of fragment A
(range of atoms: [
.B a,b
]) and that of fragment B (range of atoms: [
.B c,d
]).  Specification of this coordinate type necessitates input of masses.

.LP
So, for example, the simple internal coordinates for water would be:
.LP
.DS
intco: (
  stre = (
   (1 1 2)
   (2 1 3))
  bend = (
   (3 2 1 3))
 )
.DE
.LP
where the oxygen is atom 1, and the hydrogens are atoms 2 and 3.

.SS SYMMETRIZED INTERNAL COORDINATES
.LP
The definition of symmetrized internal coordinates is a little more
complex.  \fBSYMM \fP and \fBASYMM \fP arrays are constructed which define
the totally symmetric and asymmetric symmetrized internal coordinates, respectively.
.LP
The symmetry internal coordinates are entered as:
.DS
  \fBsymm \fP= (
    (\fIlabel (\fIinteger array\fP) \fP<(\fIreal array\fP)>)
    (  "   " "   "  "   "  ) (\fRrepeat this until
    (  "   " "   "  "   "  )  all symmetric coordinates 
    (  "   " "   "  "   "  )  are defined)
    )
.DE
.DS
  \fBasymm \fP= (
    (\fIlabel (\fIinteger array\fP) \fP<(\fIreal array\fP)>)
    (  "   " "   "  "   "  ) (\fRrepeat this until
    (  "   " "   "  "   "  )  all asymmetric coordinates 
    (  "   " "   "  "   "  )  are defined)
    )
.DE
.LP
where
.I label
is a string used to denote the particular symmetry coordinate, 
.I integer array
lists the numbers of the simple internal coordinates involved in the
symmetry coordinate (including a positive or negative sign for the linear
combination), and
.I real array
is an optional array of the coefficients of each simple internal coordinate
in the symmetry coordinate.
For the water example, above, the symmetry coordinates would be specified in the 
.B intco
input section by:
.LP
.DS
intco: (
  stre = (
   (1 1 2)
   (2 1 3))
  bend = (
   (3 2 1 3))

  symm = (
    ("o-h symm st" (1 2) (1.0 1.0))
    ("oh2 bend" (3 1 2))
    }
  asymm = (
    ("o-h asymm st" (1 -2)(1.0 1.0))
    )
  )
.DE
.LP
If the optional coefficients are not specified they default to 1.0.

.SH PRINT CONTROL
Printing in \fBintder\fP is controlled by the IPRINT option.  This is a
four digit number, DCBA, the meaning of which is as follows:

.iO       A
.  iV        "=  0"     "default, standard output"
.  iV        ">= 1"     "cubic and quartic force constants are printed"
.  iV        ">= 2"     "the symmetrized B matrix is printed"
.  iV        ">= 3"     "the A matrix (= B inverse) is printed"
.  iV        ">= 4"     "the transpose of the symmetrized B B(T) matrix is"
.    __                 "printed"
.  iV        ">= 5"     "linear transformation contributions to the force constants are printed"

.iO       TRANS_TYPE=PROJECT:
.  iV        "=  0"     "default, standard output"
.  iV        ">= 1"     "projected force constants are printed"
.  iV        ">= 2"     "projection matrices are printed"
.  iV        ">= 3"     "derivatives of the external coordinates of the molecule with respect to the Cartesian coordinates are printed"

.iO       B      "control of printing with the NTEST option"
.  iV        "=  0"    "default, no printing of B(P)(I1,I2,...,IN) matrices"
.  iV        ">= 1"    "analytic B(P)(I1,I2,...,IN) and C(P)(I1,I2,...,IN) matrices are printed as governed by NTEST"
.  iV        ">= 2"    "error matrices (analytic - numerical) are printed as governed by NTEST"

.iO       C      "control of printing with the FREQ_ANAL option"
.  iV        "=  0"     "default, standard output"
.  iV        "= 1"     "the G matrix and its eigenvalues are printed if FREQ_ANAL = INT_CO, BOTH or NONE_R."
.  iV        "= 2"     "the dipole moment derivatives with respect to normal coordinates are printed if FREQ_ANAL does not equal NONE."
.  iV        "= 3"    "eigenvectors for the zero frequencies in normal"
.    __                "coordinates are printed if FREQ_ANAL = CART_CO"
.    __                "or BOTH."

.iO       D      "control of printing to the"
.  __            ".pN CHECK"
.  __            "file"
.  iV        "=  0"     "default, standard output"
.  iV        ">= 1"     "messages from subroutines XIN, XOUT, YIN and"
.    __                "YOUT are suppressed"
.  iV        ">= 2"     "force constants are printed in NINV = 2 format"
.  iV        ">= 4"     "input for use with the old \fBgfmat\fP program is"
.    __                "printed"



.SH DIPOLE MOMENT DERIVATIVES
If TRANS_DIPDER = TRUE, then dipole moment derivatives are to be read from
.pN FILE17
(if TRANS_TYPE = C_TO_I) or from
.pN FILE18
(if TRANS_TYPE = I_TO_C).
.LP
The information required in
.pN FILE17
is:
.iL "1. FORMAT(2I5,3F20.10)"
.iO       NA        "number of atoms"
.iO       ICHG      "total charge on molecule"
.iO       MUX       "X component of dipole moment (Debye)"
.iO       MUY       "Y component of dipole moment (Debye)"
.iO       MUZ       "Z component of dipole moment (Debye)"

.iL "2. FORMAT(3F20.10)"
.iO      "((U(I,J), J=1,NC), I=1,3)"
.  __              "Cartesian dipole moment derivatives in Debye/A"
.  __              "(NC = 3*NA)"

.LP
The information required in
.pN FILE18
is:
.iL "1. FORMAT(2I5,3F20.10)"
.iO       NA        "number of atoms"
.iO       ICHG      "total charge on molecule"
.iO       MUX       "X component of dipole moment"
.iO       MUY       "Y component of dipole moment"
.iO       MUZ       "Z component of dipole moment"

.iL "2. FORMAT(3F20.10)"
.iO       "((U(M,N), M=1,NSX), N=1,3)"
.  __               "internal (symmetry) coordinate dipole moment"
.  __               "derivatives in Debye/A or Debye/radian"
.  __               "(NSX = number of internal coordinates."
.  __               "NSX = NSYM unless NSYM = 0, and then NSX = NS.)"
.iO
.  __               "Thus, the x-axis dipole derivative with respect"
.  __               "to all of the symmetry internal coordinates are"
.  __               "first, then y-axis, and, finally, z-axis.  Only"
.  __               "three derivatives can be given on each occurrence"
.  __               "of line 2."


.SH TESTING INTDER95
.LP
A set of input decks designed for testing many of intder95's features are
available in the 
.B tests
subdirectory of the intder95 source code repository.  The 18 test cases
are provided with input decks with both old and new style input, output
files, and other data files.  

