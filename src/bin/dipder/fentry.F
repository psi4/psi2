cets The following is called by a C program which handles dynamic
cets allocation of memory.
      subroutine fentry(cc,ia,maxcor)
cets  PROGRAM DIPDER
C   THE DIPOLE DERIVATIVE PROGRAM
c  edward seidl (cets030991)
c  march 9, 1991
c  use new input format
c
c  modified on August 11, 1989 by Edward Seidl (cets).
c  added fentry to allow for dynamic core allocation
c
C**********************************************************
C***LAST UPDATED ON FEBRUARY 06, 1985 BY YUKIO YAMAGUCHI***
C**********************************************************
C
      IMPLICIT REAL*8 (A-H,O-Z)
cets030991
#include <error.h>
      integer errcod, frdi
cets  integer corsiz
cets  parameter (corsiz=maxcor)
cets  DIMENSION CC(corsiz),IA(1)
cets  dimension cc(maxcor),ia(intowp(maxcor))
      dimension cc(maxcor),ia(1)
      DIMENSION I30(200),A30(100)
      COMMON/BASIS/NBASIS,NTRI,NBFAO,NBFSO,NBATRI
      COMMON/COORD/CHGS(112),X(3,112)
      COMMON/DIPOL/DIPDA(3,45),DIPDN(3,45)
      COMMON/FLAGS/MPOINT,MCONST
      COMMON/FUNCS/NATOM,N3N,NSYM
      COMMON/GAUSS/ZS(200),CS(200)
      COMMON/NSHEL/KNUC(200),KTYPE(200),KPRIM(200),KLOC(200),
     1 KMIN(200),KMAX(200),KNG(200),NSHELL,NPRIM
      COMMON/SIGNS/IOFF(500),IPRNT
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
cets  EQUIVALENCE (CC,IA)
      EQUIVALENCE (I30,A30)
    1 FORMAT(//,2X,' THE DIPOLE DERIVATIVE PROGRAM'/)
    2 FORMAT(8I5)
    3 FORMAT(/,2X,' PARAMETERS'/
     * 2X,' NBASIS = ',I8/
     * 2X,' NTRI   = ',I8/
     * 2X,' NTRI2  = ',I8/
     * 2X,' NBFAO  = ',I8/
     * 2X,' NBFSO  = ',I8/
     * 2X,' NATOM  = ',I8/
     * 2X,' N3N    = ',I8/
     * 2X,' NSYM   = ',I8/
     * 2X,' IOPEN  = ',I8/
     * 2X,' NSHELL = ',I8/
     * 2X,' NPRIM  = ',I8/
     * 2X,' IPRNT  = ',I8/)
    4 FORMAT(//,3X,20A4)
    5 FORMAT(//,2X,' ENUC  = ',F20.10/
     1          2X,' ESCF  = ',F20.10/)
    6 FORMAT(//,2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
    7 FORMAT(//,2X,' REQUIRED MEMORY EXCEEDS MAXCOR'/
     1          2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
C
cets030991      call drum
      call psinit('APPEND')
c
      CALL TSTART(6)
      CALL INITMF(1)
C
      ITAPE3=3
      INPUT=5
      ITAPE6=6
      ITAP30=30
      ITAP43=43
cets  MAXCOR=corsiz
      CALL LOCATE(INPUT,'# DIPDER #',IERR)
C
      WRITE(6,1)
      WRITE(3,1)
      if(ierr.eq.0) then
        READ(5,2) IPRNT
      else
        iprnt=0
        errcod = frdi('IPRINT',iprnt)
      endif
      IOFF(1)=0
      DO 101 I=1,499
  101 IOFF(I+1)=IOFF(I)+I
C
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      IEND=I30(1)
      MPOINT=I30(2)
      MCONST=I30(3)
      MCALCS=I30(4)
      NCALCS=I30(5)
      NBFSO=I30(18)
      NATOM=I30(19)
      NBFAO=I30(22)
      NSHELL=I30(27)
      NPRIM=I30(32)
      NSYM=I30(41)
      IOPEN=I30(43)
      NBASIS=NBFSO
      NTRI=IOFF(NBASIS+1)
      NTRI2=intowp(NTRI)
      N3N=NATOM*3
      NBATRI=IOFF(NBFAO+1)
C
      WRITE(6,3) NBASIS,NTRI,NTRI2,NBFAO,NBFSO,NATOM,N3N,NSYM,IOPEN,
     1           NSHELL,NPRIM,IPRNT
C
C   READ IN LABELS
      JUNK=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,JUNK,JUNK)
      CALL WREADW(ITAP30,I30,60,LOCCAL,LOCCAL)
      WRITE(6,4) (I30(I),I=1,20)
C
C   READ IN GEOMETRY
      LOCCAL=LOCCAL+20
cets added natom*3
      CALL WREADW(ITAP30,X,intowp(NATOM*3),LOCCAL,LOCCAL)
C
C   READ IN ENUC AND ESCF
      CALL WREADW(ITAP30,I30,20,LOCCAL,LOCCAL)
      ENUC=A30(1)
      ESCF=A30(2)
      WRITE(6,5) ENUC,ESCF
C
C   READ IN BASIS SET INFORMATION
      WRITE(3,21)
   21 FORMAT(//,2X,' NOW YOU ARE IN BASSET'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      ICMAX=IC3+NBFAO*NBASIS
      WRITE(3,6) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C.................EIG     OCC     EAO.....
      CALL BASSET(CC(IC1),CC(IC2),CC(IC3))
C
C   FORM A DENSITY MATRIX
      WRITE(3,22)
   22 FORMAT(//,2X,' NOW YOU ARE IN DENSTY'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFAO*NBASIS
      ICMAX=IC4+NBATRI
      WRITE(3,6) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C.................OCC     EAO     P.......
      CALL DENSTY(CC(IC2),CC(IC3),CC(IC4))
C
C   CALCULATE ONE ELECTRON INTEGRALS
      WRITE(3,23)
   23 FORMAT(//,2X,' NOW YOU ARE IN ONEHGT'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFAO*NBASIS
      IC5=IC4+NBATRI
      IC6=IC5+NBATRI
      IC7=IC6+NBATRI
      IC8=IC7+NBATRI
      IC9=IC8+NBATRI
      IC10=IC9+NBFAO*NBFAO
      ICMAX=IC10+NBFAO*NBFAO
      WRITE(3,6) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C.................EAO     P       SS      TT      VV      HH......
      CALL ONEHGT(CC(IC3),CC(IC4),CC(IC5),CC(IC6),CC(IC7),CC(IC8),
C.................UU      T........
     1            CC(IC9),CC(IC10))
C
C   CALCULATE DIPOLE MOMENT DERIVATIVES (AO PART)
      WRITE(3,24)
   24 FORMAT(//,2X,' NOW YOU ARE IN DERAO'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFAO*NBASIS
      IC5=IC4+NBATRI
      IC6=IC5+NBATRI
      IC7=IC6+NBATRI
      IC8=IC7+NBATRI
      IC9=IC8+NBATRI*NATOM*9
      IC10=IC9+NBFAO*NBFAO
      ICMAX=IC10+NBFAO*NBFAO
      WRITE(3,6) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EAO     P       DIPX    DIPY    DIPZ    DDER....
      CALL DERAO(CC(IC3),CC(IC4),CC(IC5),CC(IC6),CC(IC7),CC(IC8),
C................UU      T........
     1           CC(IC9),CC(IC10))
      GO TO 400
C
  399 WRITE(6,7) ICMAX,MAXCOR
  400 CONTINUE
      CALL RCLOSE(ITAP43,3)
      CALL TSTOP(6)
C
      STOP
      END
      SUBROUTINE BASSET(EIG,OCC,EAO)
      IMPLICIT REAL*8 (A-H,O-Z)
      integer nbasis,nbfao
      DIMENSION EIG(NBASIS),OCC(NBASIS)
      DIMENSION EAO(NBFAO,NBASIS)
      DIMENSION I30(200),A30(100),CONTR(600)
      COMMON/BASIS/NBASIS,NTRI,NBFAO,NBFSO,NBATRI
      COMMON/COORD/CHGS(112),XX(3,112)
      COMMON/FLAGS/MPOINT,MCONST
      COMMON/FUNCS/NATOM,N3N,NSYM
      COMMON/GAUSS/ZS(200),CS(200)
      COMMON/NSHEL/KNUC(200),KTYPE(200),KPRIM(200),KLOC(200),
     1 KMIN(200),KMAX(200),KNG(200),NSHELL,NPRIM
      COMMON/SIGNS/IPQ(500),IPRNT
      EQUIVALENCE (I30,A30)
      DATA ZERO / 0.0D+00 /
    1 FORMAT(//,2X,' NPRIM  IS ',I5)
    2 FORMAT(2X,I5,2F20.10)
    3 FORMAT(//,2X,' NSHELL IS ',I5)
    4 FORMAT(2X,8I5)
    5 FORMAT(//,2X,' NATOM IS ',I5)
    6 FORMAT(2X,I5,4F20.10,5X,2I5)
    7 FORMAT(//,2X,' EAO MATRIX'/)
C
C
      ITAP30=30
      JUNK=101+MCONST
      CALL WREADW(ITAP30,I30,MPOINT,JUNK,JUNK)
C
C   READ IN BASIS SET
      CALL WREADW(ITAP30,CHGS,intowp(NATOM),I30(1),JUNK)
      CALL WREADW(ITAP30,ZS,intowp(NPRIM),I30(5),JUNK)
      CALL WREADW(ITAP30,CONTR,intowp(NPRIM*3),I30(6),JUNK)
      CALL WREADW(ITAP30,KPRIM,NSHELL,I30(7),JUNK)
      CALL WREADW(ITAP30,KNUC,NSHELL,I30(8),JUNK)
      CALL WREADW(ITAP30,KTYPE,NSHELL,I30(9),JUNK)
      CALL WREADW(ITAP30,KNG,NSHELL,I30(10),JUNK)
      CALL WREADW(ITAP30,KLOC,NSHELL,I30(11),JUNK)
      CALL WREADW(ITAP30,KMIN,NSHELL,I30(12),JUNK)
      CALL WREADW(ITAP30,KMAX,NSHELL,I30(13),JUNK)
C
      IJ=0
      DO 102 I=1,3
      DO 101 J=1,NPRIM
      IJ=IJ+1
      VALU=CONTR(IJ)
      IF(VALU.EQ.ZERO) GO TO 101
      CS(J)=VALU
  101 CONTINUE
  102 CONTINUE
C
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1) NPRIM
      DO 103 I=1,NPRIM
  103 WRITE(6,2) I,ZS(I),CS(I)
      WRITE(6,3) NSHELL
      DO 104 I=1,NSHELL
  104 WRITE(6,4) I,KNUC(I),KTYPE(I),KPRIM(I),KLOC(I),KMIN(I),KMAX(I),
     1 KNG(I)
      WRITE(6,5) NATOM
      DO 105 I=1,NATOM
  105 WRITE(6,6) I,XX(1,I),XX(2,I),XX(3,I),CHGS(I)
C
C   READ IN AO-MO EIGENVECTOR MATRIX
  201 CONTINUE
      CALL MREAD(EIG,17)
      CALL MREAD(OCC,18)
      CALL MREAD(EAO,20)
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,7)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
  202 CONTINUE
C
      RETURN
      END
      SUBROUTINE DENSTY(OCC,EAO,P)
      IMPLICIT REAL*8 (A-H,O-Z)
      integer nbasis,nbfao,nbatri
      DIMENSION OCC(NBASIS),EAO(NBFAO,NBASIS),P(NBATRI)
      COMMON/BASIS/NBASIS,NTRI,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(500),IPRNT
      DATA ZERO / 0.0D+00 /
    1 FORMAT(//,2X,' DENSITY MATRIX'/)
C
C   FORM DENSITY MATRIX
      DO 101 I=1,NBATRI
  101 P(I)=ZERO
      IJ=0
      DO 103 I=1,NBFAO
      DO 103 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 102 K=1,NBASIS
      IF(OCC(K).LE.ZERO) GO TO 102
      VALU=VALU+EAO(I,K)*EAO(J,K)*OCC(K)
  102 CONTINUE
      P(IJ)=VALU
  103 CONTINUE
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1)
      CALL PRINT(P,NBATRI,NBFAO,6)
C
  201 CONTINUE
      RETURN
      END
      SUBROUTINE ONEHGT(EAO,P,SS,TT,VV,HH,UU,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      integer nbatri,nbfao,nbasis
      LOGICAL IANDJ,EQUAL
      DIMENSION P(NBATRI),SS(NBATRI),TT(NBATRI),VV(NBATRI),HH(NBATRI)
      DIMENSION EAO(NBFAO,NBASIS),UU(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION VX0(36),VY0(36),VZ0(36)
      COMMON/BASIS/NBASIS,NTRI,NBFAO,NBFSO,NBATRI
      COMMON/COORD/CHGS(112),C(3,112)
      COMMON/EXYZS/EX(7,7,13),EY(7,7,13),EZ(7,7,13)
      COMMON/FUNCS/NATOM,N3N,NSYM
      COMMON/GAUSS/ZS(200),CS(200)
      COMMON/IJVEC/IX(84),IY(84),IZ(84),JX(84),JY(84),JZ(84)
      COMMON/INDEX/IJX(225),IJY(225),IJZ(225),IJPOS(225)
      COMMON/NSHEL/KNUC(200),KTYPE(200),KSTART(200),KLOC(200),
     1 KMIN(200),KMAX(200),KNG(200),NSHELL,NPRIM
      COMMON/ROOT /XX,U(9),WT(9),NROOTS
      COMMON/SIGNS/IPQ(500),IPRNT
      COMMON/TEMP0/SX0(36),SY0(36),SZ0(36),TX0(36),TY0(36),TZ0(36)
      EQUIVALENCE (SX0,VX0),(SY0,VY0),(SZ0,VZ0)
      DATA ITOL / 10 /
      DATA PI212 / 1.1283791670955D+00 /
      DATA PI32 / 5.56832799683170D+00 /
      DATA ZERO,HALF,ONE,TWO / 0.0D+00 , 0.5D+00 , 1.0D+00 , 2.0D+00 /
      DATA NQLIM / 7 /
    1 FORMAT(//,2X,' S MATRIX'/)
    2 FORMAT(//,2X,' T MATRIX'/)
    3 FORMAT(//,2X,' V MATRIX'/)
    4 FORMAT(//,2X,' H MATRIX'/)
    5 FORMAT(/,2X,' EONE = ',F20.10)
    6 FORMAT(//,2X,' H MATRIX (MO BASIS)'/)
C
      TOL=ITOL*2.30258D+00
C
C     ZERO ALL THE CORE THAT WE NEED FOR S AND ONE ELECTRON INTEGRALS
C
      DO 101 I=1,NBATRI
      SS(I)=ZERO
      TT(I)=ZERO
      VV(I)=ZERO
  101 CONTINUE
C
C:::::::::::::::::::::::::::::
C:::::----- I SHELL -----:::::
C:::::::::::::::::::::::::::::
C
      DO 6000 ISH=1,NSHELL
C
      IATOM=KNUC(ISH)
      AX=C(1,IATOM)
      AY=C(2,IATOM)
      AZ=C(3,IATOM)
      IGMIN=KSTART(ISH)
      IGMAX=IGMIN+KNG(ISH)-1
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      LOCI=KLOC(ISH)
C
C:::::::::::::::::::::::::::::
C:::::----- J SHELL -----:::::
C:::::::::::::::::::::::::::::
C
      DO 5000 JSH=1,ISH
C
      JATOM=KNUC(JSH)
      BX=C(1,JATOM)
      BY=C(2,JATOM)
      BZ=C(3,JATOM)
      JGMIN=KSTART(JSH)
      JGMAX=JGMIN+KNG(JSH)-1
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      LOCJ=KLOC(JSH)
      IANDJ=ISH.EQ.JSH
      EQUAL=IATOM.EQ.JATOM
C
C     ----- WORK OUT INDICES FOR COMBINING 2D INTEGRALS -----
C
      MIJ=0
      JMAX=MAXJ
      II=-1
      DO 103 I=MINI,MAXI
      II=II+1
      JJ=-1
      NX=IX(I)
      NY=IY(I)
      NZ=IZ(I)
      IF(IANDJ) JMAX=I
      DO 102 J=MINJ,JMAX
      MIJ=MIJ+1
      JJ=JJ+1
      IJX(MIJ)=NX+JX(J)
      IJY(MIJ)=NY+JY(J)
      IJZ(MIJ)=NZ+JZ(J)
      IDXI=LOCI+II
      IDXJ=LOCJ+JJ
      IDXS=IPQ(MAX0(IDXI,IDXJ))+MIN0(IDXI,IDXJ)
      IJPOS(MIJ)=IDXS
  102 CONTINUE
  103 CONTINUE
C
      XAB=AX-BX
      YAB=AY-BY
      ZAB=AZ-BZ
      RAB=XAB*XAB+YAB*YAB+ZAB*ZAB
      NROOTS=(LIT+LJT-2)/2+1
      MAXIJ=MAX0(LIT,LJT+2)
C
      DO 4000 IG=IGMIN,IGMAX
      CSI=CS(IG)*PI32
      AI=ZS(IG)
      AXI=AI*AX
      AYI=AI*AY
      AZI=AI*AZ
C
      IF(IANDJ) JGMAX=IG
      DO 3000 JG=JGMIN,JGMAX
      CSJ=CS(JG)
      BJ=ZS(JG)
      BXJ=BJ*BX
      BYJ=BJ*BY
      BZJ=BJ*BZ
C
      PP=AI+BJ
      TPP=ONE/PP
      TEMP=(AI*BJ*RAB)*TPP
C
C     ----- IGNORE INTEGRAL IF PRE-EXPONENTIAL TOO SMALL -----
C
      IF(TEMP.GT.TOL) GO TO 3000
C
C     ----- DENSITY FACTOR -----
C
      TP=DSQRT(TPP)
      DIJ=CSI*CSJ*DEXP(-TEMP)*TPP
      IF(IANDJ.AND.IG.NE.JG) DIJ=DIJ+DIJ
      PFAC=DIJ*TP
      PFACH=PFAC*HALF
      DIJPI=DIJ*PI212
      PTWO=TPP*HALF
C
C     FORM SOME PRODUCTS NEEDED IN INTEGRAL EVALUATION
C
      PX=(AXI+BXJ)*TPP
      PY=(AYI+BYJ)*TPP
      PZ=(AZI+BZJ)*TPP
      IF(EQUAL) GO TO 201
      PAX=PX-AX
      PAY=PY-AY
      PAZ=PZ-AZ
      PBX=PX-BX
      PBY=PY-BY
      PBZ=PZ-BZ
      GO TO 202
  201 CONTINUE
      PAX=ZERO
      PAY=ZERO
      PAZ=ZERO
      PBX=ZERO
      PBY=ZERO
      PBZ=ZERO
C
  202 CONTINUE
      CALL ECAL(PAX,PAY,PAZ,PBX,PBY,PBZ,PTWO,MAXIJ)
C
      BJ2=BJ+BJ
      B23=BJ2*BJ2
      IN=-NQLIM
      DO 105 NI=1,LIT
      IN=IN+NQLIM
      DO 104 NJ=1,LJT
      JN=IN+NJ
      XNJ=DBLE(NJ)
      B22=BJ2*(XNJ+XNJ-ONE)
C
C   NORMAL OVERLAP INTEGRALS
      SX0(JN)=EX(NI,NJ,1)
      SY0(JN)=EY(NI,NJ,1)
      SZ0(JN)=EZ(NI,NJ,1)
C
C   NORMAL KINETIC INTEGRALS
      TX00=EX(NI,NJ+2,1)*B23
      TY00=EY(NI,NJ+2,1)*B23
      TZ00=EZ(NI,NJ+2,1)*B23
      IF(NJ.LE.2) GO TO 203
      B21=(XNJ-ONE)*(XNJ-TWO)
      TX00=TX00+EX(NI,NJ-2,1)*B21
      TY00=TY00+EY(NI,NJ-2,1)*B21
      TZ00=TZ00+EZ(NI,NJ-2,1)*B21
  203 CONTINUE
      TX00=TX00-EX(NI,NJ,1)*B22
      TY00=TY00-EY(NI,NJ,1)*B22
      TZ00=TZ00-EZ(NI,NJ,1)*B22
      TX0(JN)=TX00
      TY0(JN)=TY00
      TZ0(JN)=TZ00
  104 CONTINUE
  105 CONTINUE
C
      DO 106 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      X=SX0(NX)
      Y=SY0(NY)
      Z=SZ0(NZ)
      IJ=IJPOS(I)
      SS(IJ)=SS(IJ)+X*Y*Z*PFAC
      TT(IJ)=TT(IJ)-(TX0(NX)*Y*Z+TY0(NY)*X*Z+TZ0(NZ)*X*Y)*PFACH
  106 CONTINUE
C
C     ----- LOOP OVER ATOMS IN POTENTIAL TERM -----
C
      DO 2000 IC=1,NATOM
      ZNUC=-CHGS(IC)*DIJPI
      CX=C(1,IC)
      CY=C(2,IC)
      CZ=C(3,IC)
      PCX=PX-CX
      PCY=PY-CY
      PCZ=PZ-CZ
      XX=PP*(PCX*PCX+PCY*PCY+PCZ*PCZ)
      IF(NROOTS.LE.3) THEN
      CALL RT123
      ELSE IF(NROOTS.EQ.4) THEN
      CALL ROOT4
      ELSE IF(NROOTS.EQ.5) THEN
      CALL ROOT5
      ELSE IF(NROOTS.LE.9) THEN
      CALL DROOT
      ELSE
      STOP ' NOT ENOUGH ROOTS IN ONEINT'
      END IF
C
      DO 1000 IROOT=1,NROOTS
      ROOT2=U(IROOT)/(ONE+U(IROOT))
      WW=WT(IROOT)*ZNUC
      AROOT2=-ROOT2*(PP+PP)
C
      IN=-NQLIM
      DO 110 NI=1,LIT
      IN=IN+NQLIM
      DO 109 NJ=1,LJT
      MAXT=NI+NJ-1
      JN=IN+NJ
      CALL GCAL(PCX,PCY,PCZ,VXX,VYY,VZZ,AROOT2,NI,NJ,MAXT)
      VX0(JN)=VXX
      VY0(JN)=VYY
      VZ0(JN)=VZZ
  109 CONTINUE
  110 CONTINUE
C
      DO 112 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      X=VX0(NX)
      Y=VY0(NY)
      Z=VZ0(NZ)
      IJ=IJPOS(I)
      VV(IJ)=VV(IJ)+X*Y*Z*WW
  112 CONTINUE
C
 1000 CONTINUE
 2000 CONTINUE
C
 3000 CONTINUE
 4000 CONTINUE
 5000 CONTINUE
 6000 CONTINUE
C
      DO 115 I=1,NBATRI
  115 HH(I)=TT(I)+VV(I)
C
      IF(IPRNT.LE.2) GO TO 210
      WRITE(6,1)
      CALL PRINT(SS,NBATRI,NBFAO,6)
      WRITE(6,2)
      CALL PRINT(TT,NBATRI,NBFAO,6)
      WRITE(6,3)
      CALL PRINT(VV,NBATRI,NBFAO,6)
      WRITE(6,4)
      CALL PRINT(HH,NBATRI,NBFAO,6)
  210 CONTINUE
C
C   CALCULATE ONE ELCTRON ENERGY FOR A TEST
      EONE=ZERO
      IJ=0
      DO 120 I=1,NBFAO
      DO 120 J=1,I
      IJ=IJ+1
      FAC=TWO
      IF(I.EQ.J) FAC=ONE
      EONE=EONE+HH(IJ)*P(IJ)*FAC
  120 CONTINUE
      WRITE(6,5) EONE
C
C   FORM H MATRIX IN MO BASIS
      IF(IPRNT.LE.2) GO TO 215
      CALL MOCONV(HH,NBATRI,HH,NBATRI,EAO,UU,T)
      WRITE(6,6)
      CALL PRINT(HH,NBATRI,NBASIS,6)
C
  215 CONTINUE
      RETURN
      END
      SUBROUTINE MOCONV(SA,NNA,SM,NNM,EAO,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      integer nna,nnm,nbfao,nbasis
      DIMENSION SA(NNA),SM(NNM)
      DIMENSION EAO(NBFAO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(500),IPRNT
      DATA ZERO / 0.0D+00 /
C
C   TRANSFORM INTEGRALS FROM AO TO MO BASIS
      DO 101 II=1,NBFAO
      DO 101 JJ=1,NBFAO
      IIJJ=IOFF(MAX0(II,JJ))+MIN0(II,JJ)
      T(II,JJ)=SA(IIJJ)
  101 CONTINUE
      DO 103 II=1,NBFAO
      DO 103 J=1,NBASIS
      SUM=ZERO
      DO 102 JJ=1,NBFAO
      SUM=SUM+EAO(JJ,J)*T(II,JJ)
  102 CONTINUE
      U(II,J)=SUM
  103 CONTINUE
      DO 105 I=1,NBASIS
      DO 105 J=1,I
      IJ=IOFF(I)+J
      SUM=ZERO
      DO 104 II=1,NBFAO
      SUM=SUM+EAO(II,I)*U(II,J)
  104 CONTINUE
      SM(IJ)=SUM
  105 CONTINUE
C
      RETURN
      END
      SUBROUTINE DERAO(EAO,P,DIPX,DIPY,DIPZ,DDER,UU,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL IANDJ
      integer nbatri,natom,nbfao,nbasis
      DIMENSION P(NBATRI),DIPX(NBATRI),DIPY(NBATRI),DIPZ(NBATRI)
      DIMENSION DDER(NBATRI,9,NATOM)
      DIMENSION EAO(NBFAO,NBASIS),UU(NBFAO,NBFAO),T(NBFAO,NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NBFAO,NBFSO,NBATRI
      COMMON/COORD/CHGS(112),C(3,112)
      COMMON/DIPOL/DIPDA(3,45),DIPDN(3,45)
      COMMON/EXYZS/EX(7,7,13),EY(7,7,13),EZ(7,7,13)
      COMMON/FUNCS/NATOM,N3N,NSYM
      COMMON/GAUSS/ZS(200),CS(200)
      COMMON/IJVEC/IX(84),IY(84),IZ(84),JX(84),JY(84),JZ(84)
      COMMON/INDEX/IJX(225),IJY(225),IJZ(225),IJPOS(225)
      COMMON/NSHEL/KNUC(200),KTYPE(200),KSTART(200),KLOC(200),
     1 KMIN(200),KMAX(200),KNG(200),NSHELL,NPRIM
      COMMON/ROOT /XX,U(9),WT(9),NROOTS
      COMMON/SIGNS/IPQ(500),IPRNT
      COMMON/TEMP0/SX0(36),SY0(36),SZ0(36),DX0(36),DY0(36),DZ0(36)
      COMMON/TEMP1/SX1(36),SY1(36),SZ1(36),DX1(36,2),DY1(36,2),DZ1(36,2)
      DATA ITOL / 10 /
      DATA PI212 / 1.1283791670955D+00 /
      DATA PI32 / 5.56832799683170D+00 /
      DATA DEBYE / 2.541765480D+00 /
      DATA ZERO,HALF,ONE,TWO / 0.0D+00 , 0.5D+00 , 1.0D+00 , 2.0D+00 /
      DATA NQLIM / 7 /
    1 FORMAT(//,2X,' FIRST DERIVATIVES OF DIPOLE MOMENTS'/)
    2 FORMAT(//,2X,' P MATRIX'/)
    3 FORMAT(//,2X,' DIPX MATRIX (AO BASIS)'/)
    4 FORMAT(//,2X,' DIPY MATRIX (AO BASIS)'/)
    5 FORMAT(//,2X,' DIPZ MATRIX (AO BASIS)'/)
    6 FORMAT(//,2X,' DIPOLE MOMENTS W.R.T. ORIGIN IN DEBYE'/
     1 /,2X,' DEX    = ',F12.8,3X,' DNX    = ',F12.8,3X,' DTX    = ',
     2 F12.8
     3 /,2X,' DEY    = ',F12.8,3X,' DNY    = ',F12.8,3X,' DTY    = ',
     4 F12.8
     5 /,2X,' DEZ    = ',F12.8,3X,' DNZ    = ',F12.8,3X,' DTZ    = ',
     6 F12.8
     7 //,2X,' TOTAL DIPOLE MOMENT W.R.T. ORIGIN = ',F12.8,' DEBYE'/)
    7 FORMAT(//,2X,' DIPX MATRIX (MO BASIS)'/)
    8 FORMAT(//,2X,' DIPY MATRIX (MO BASIS)'/)
    9 FORMAT(//,2X,' DIPZ MATRIX (MO BASIS)'/)
   10 FORMAT(//,2X,' DDER MATRIX (AO BASIS), IABC = ',I5,5X,
     1 ' IPQR = ',I5/)
   11 FORMAT(//,2X,' DIPDA MATRIX'/)
   12 FORMAT(//,2X,' DIPDN MATRIX'/)
   13 FORMAT(//,2X,' DDER MATRIX (MO BASIS), IABC,IXYZ,IFGH,ISPOT = ',
     1 4I5/)
C
      TOL=ITOL*2.30258D+00
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,1)
      WRITE(6,2)
      CALL PRINT(P,NBATRI,NBASIS,6)
C
C     ZERO ALL THE CORE THAT WE NEED FOR S AND ONE ELECTRON INTEGRALS
C
  301 CONTINUE
      DO 101 I=1,NBATRI
      DIPX(I)=ZERO
      DIPY(I)=ZERO
      DIPZ(I)=ZERO
  101 CONTINUE
      DO 102 I=1,NBATRI
      DO 102 J=1,9
      DO 102 K=1,NATOM
      DDER(I,J,K)=ZERO
  102 CONTINUE
C
C:::::::::::::::::::::::::::::
C:::::----- I SHELL -----:::::
C:::::::::::::::::::::::::::::
C
      DO 6000 ISH=1,NSHELL
C
      IATOM=KNUC(ISH)
      AX=C(1,IATOM)
      AY=C(2,IATOM)
      AZ=C(3,IATOM)
      IGMIN=KSTART(ISH)
      IGMAX=IGMIN+KNG(ISH)-1
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      LOCI=KLOC(ISH)
C
C:::::::::::::::::::::::::::::
C:::::----- J SHELL -----:::::
C:::::::::::::::::::::::::::::
C
      DO 5000 JSH=1,ISH
C
      JATOM=KNUC(JSH)
      BX=C(1,JATOM)
      BY=C(2,JATOM)
      BZ=C(3,JATOM)
      JGMIN=KSTART(JSH)
      JGMAX=JGMIN+KNG(JSH)-1
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      LOCJ=KLOC(JSH)
      IANDJ=ISH.EQ.JSH
C
C     ----- WORK OUT INDICES FOR COMBINING 2D INTEGRALS -----
C
      MIJ=0
      JMAX=MAXJ
      II=-1
      DO 104 I=MINI,MAXI
      II=II+1
      JJ=-1
      NX=IX(I)
      NY=IY(I)
      NZ=IZ(I)
      IF(IANDJ) JMAX=I
      DO 103 J=MINJ,JMAX
      MIJ=MIJ+1
      JJ=JJ+1
      IJX(MIJ)=NX+JX(J)
      IJY(MIJ)=NY+JY(J)
      IJZ(MIJ)=NZ+JZ(J)
      IDXI=LOCI+II
      IDXJ=LOCJ+JJ
      IDXS=IPQ(MAX0(IDXI,IDXJ))+MIN0(IDXI,IDXJ)
      IJPOS(MIJ)=IDXS
  103 CONTINUE
  104 CONTINUE
C
      XAB=AX-BX
      YAB=AY-BY
      ZAB=AZ-BZ
      RAB=XAB*XAB+YAB*YAB+ZAB*ZAB
      MAXIJ=MAX0(LIT+2,LJT+2)
C
      DO 4000 IG=IGMIN,IGMAX
      CSI=CS(IG)*PI32
      AI=ZS(IG)
      AXI=AI*AX
      AYI=AI*AY
      AZI=AI*AZ
C
      IF(IANDJ) JGMAX=IG
      DO 3000 JG=JGMIN,JGMAX
      CSJ=CS(JG)
      BJ=ZS(JG)
      BXJ=BJ*BX
      BYJ=BJ*BY
      BZJ=BJ*BZ
C
      PP=AI+BJ
      TPP=ONE/PP
      TEMP=(AI*BJ*RAB)*TPP
C
C     ----- IGNORE INTEGRAL IF PRE-EXPONENTIAL TOO SMALL -----
C
      IF(TEMP.GT.TOL) GO TO 3000
C
C     ----- DENSITY FACTOR -----
C
      TP=DSQRT(TPP)
      DIJ=CSI*CSJ*DEXP(-TEMP)*TPP
      IF(IANDJ.AND.IG.NE.JG) DIJ=DIJ+DIJ
      PFAC=DIJ*TP
      PTWO=TPP*HALF
C
C     FORM SOME PRODUCTS NEEDED IN INTEGRAL EVALUATION
C
      PX=(AXI+BXJ)*TPP
      PY=(AYI+BYJ)*TPP
      PZ=(AZI+BZJ)*TPP
      PAX=PX-AX
      PAY=PY-AY
      PAZ=PZ-AZ
      PBX=PX-BX
      PBY=PY-BY
      PBZ=PZ-BZ
C
      CALL ECAL(PAX,PAY,PAZ,PBX,PBY,PBZ,PTWO,MAXIJ)
C
      CX=ZERO
      CY=ZERO
      CZ=ZERO
      PCX=PX-CX
      PCY=PY-CY
      PCZ=PZ-CZ
C
      A12=AI+AI
      B12=BJ+BJ
C
      IN=-NQLIM
      DO 106 NI=1,LIT
      IN=IN+NQLIM
      A11=DBLE(NI-1)
      DO 105 NJ=1,LJT
      JN=IN+NJ
      B11=DBLE(NJ-1)
C
C   NORMAL OVERLAP INTEGRALS
      SX0(JN)=EX(NI,NJ,1)
      SY0(JN)=EY(NI,NJ,1)
      SZ0(JN)=EZ(NI,NJ,1)
C
C   FIRST DERIVATIVES OF OVERLAP INTEGRALS
      SX11=EX(NI+1,NJ,1)*A12
      SY11=EY(NI+1,NJ,1)*A12
      SZ11=EZ(NI+1,NJ,1)*A12
      IF(NI.LE.1) GO TO 201
      SX11=SX11-EX(NI-1,NJ,1)*A11
      SY11=SY11-EY(NI-1,NJ,1)*A11
      SZ11=SZ11-EZ(NI-1,NJ,1)*A11
  201 CONTINUE
      SX1(JN)=SX11
      SY1(JN)=SY11
      SZ1(JN)=SZ11
C
C   NORMAL DIPOLE INTEGRALS
      DX0(JN)=EX(NI,NJ,2)+EX(NI,NJ,1)*PCX
      DY0(JN)=EY(NI,NJ,2)+EY(NI,NJ,1)*PCY
      DZ0(JN)=EZ(NI,NJ,2)+EZ(NI,NJ,1)*PCZ
C
C   FIRST DERIVATIVES OF DIPOLE INTEGRALS
      DX1A=(EX(NI+1,NJ,2)+EX(NI+1,NJ,1)*PCX)*A12
      DY1A=(EY(NI+1,NJ,2)+EY(NI+1,NJ,1)*PCY)*A12
      DZ1A=(EZ(NI+1,NJ,2)+EZ(NI+1,NJ,1)*PCZ)*A12
      IF(NI.LE.1) GO TO 202
      DX1A=DX1A-(EX(NI-1,NJ,2)+EX(NI-1,NJ,1)*PCX)*A11
      DY1A=DY1A-(EY(NI-1,NJ,2)+EY(NI-1,NJ,1)*PCY)*A11
      DZ1A=DZ1A-(EZ(NI-1,NJ,2)+EZ(NI-1,NJ,1)*PCZ)*A11
  202 CONTINUE
      DX1B=(EX(NI,NJ+1,2)+EX(NI,NJ+1,1)*PCX)*B12
      DY1B=(EY(NI,NJ+1,2)+EY(NI,NJ+1,1)*PCY)*B12
      DZ1B=(EZ(NI,NJ+1,2)+EZ(NI,NJ+1,1)*PCZ)*B12
      IF(NJ.LE.1) GO TO 203
      DX1B=DX1B-(EX(NI,NJ-1,2)+EX(NI,NJ-1,1)*PCX)*B11
      DY1B=DY1B-(EY(NI,NJ-1,2)+EY(NI,NJ-1,1)*PCY)*B11
      DZ1B=DZ1B-(EZ(NI,NJ-1,2)+EZ(NI,NJ-1,1)*PCZ)*B11
  203 CONTINUE
      DX1(JN,1)=DX1A
      DY1(JN,1)=DY1A
      DZ1(JN,1)=DZ1A
      DX1(JN,2)=DX1B
      DY1(JN,2)=DY1B
      DZ1(JN,2)=DZ1B
C
  105 CONTINUE
  106 CONTINUE
C
      DO 107 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      X=SX0(NX)
      Y=SY0(NY)
      Z=SZ0(NZ)
      IJ=IJPOS(I)
      XFAC=X*PFAC
      YFAC=Y*PFAC
      ZFAC=Z*PFAC
      YZFAC=Y*Z*PFAC
      XZFAC=X*Z*PFAC
      XYFAC=X*Y*PFAC
      DIPX(IJ)=DIPX(IJ)+DX0(NX)*YZFAC
      DIPY(IJ)=DIPY(IJ)+DY0(NY)*XZFAC
      DIPZ(IJ)=DIPZ(IJ)+DZ0(NZ)*XYFAC
      DDER(IJ,1,IATOM)=DDER(IJ,1,IATOM)+DX1(NX,1)*YZFAC
      DDER(IJ,1,JATOM)=DDER(IJ,1,JATOM)+DX1(NX,2)*YZFAC
      DXY1=DX0(NX)*SY1(NY)*ZFAC
      DDER(IJ,2,IATOM)=DDER(IJ,2,IATOM)+DXY1
      DDER(IJ,2,JATOM)=DDER(IJ,2,JATOM)-DXY1
      DXZ1=DX0(NX)*SZ1(NZ)*YFAC
      DDER(IJ,3,IATOM)=DDER(IJ,3,IATOM)+DXZ1
      DDER(IJ,3,JATOM)=DDER(IJ,3,JATOM)-DXZ1
      DYX1=SX1(NX)*DY0(NY)*ZFAC
      DDER(IJ,4,IATOM)=DDER(IJ,4,IATOM)+DYX1
      DDER(IJ,4,JATOM)=DDER(IJ,4,JATOM)-DYX1
      DDER(IJ,5,IATOM)=DDER(IJ,5,IATOM)+DY1(NY,1)*XZFAC
      DDER(IJ,5,JATOM)=DDER(IJ,5,JATOM)+DY1(NY,2)*XZFAC
      DYZ1=DY0(NY)*SZ1(NZ)*XFAC
      DDER(IJ,6,IATOM)=DDER(IJ,6,IATOM)+DYZ1
      DDER(IJ,6,JATOM)=DDER(IJ,6,JATOM)-DYZ1
      DZX1=SX1(NX)*DZ0(NZ)*YFAC
      DDER(IJ,7,IATOM)=DDER(IJ,7,IATOM)+DZX1
      DDER(IJ,7,JATOM)=DDER(IJ,7,JATOM)-DZX1
      DZY1=SY1(NY)*DZ0(NZ)*XFAC
      DDER(IJ,8,IATOM)=DDER(IJ,8,IATOM)+DZY1
      DDER(IJ,8,JATOM)=DDER(IJ,8,JATOM)-DZY1
      DDER(IJ,9,IATOM)=DDER(IJ,9,IATOM)+DZ1(NZ,1)*XYFAC
      DDER(IJ,9,JATOM)=DDER(IJ,9,JATOM)+DZ1(NZ,2)*XYFAC
  107 CONTINUE
C
 3000 CONTINUE
 4000 CONTINUE
 5000 CONTINUE
 6000 CONTINUE
C
      IF(IPRNT.LE.2) GO TO 302
      WRITE(6,3)
      CALL PRINT(DIPX,NBATRI,NBFAO,6)
      WRITE(6,4)
      CALL PRINT(DIPY,NBATRI,NBFAO,6)
      WRITE(6,5)
      CALL PRINT(DIPZ,NBATRI,NBFAO,6)
C
C   CALCULATE DIPOLE MOMENTS
  302 CONTINUE
      DEX=ZERO
      DEY=ZERO
      DEZ=ZERO
      IJ=0
      DO 110 I=1,NBFAO
      DO 110 J=1,I
      IJ=IJ+1
      FAC=TWO
      IF(I.EQ.J) FAC=ONE
      DEX=DEX+DIPX(IJ)*P(IJ)*FAC
      DEY=DEY+DIPY(IJ)*P(IJ)*FAC
      DEZ=DEZ+DIPZ(IJ)*P(IJ)*FAC
  110 CONTINUE
      DEX=-DEX*DEBYE
      DEY=-DEY*DEBYE
      DEZ=-DEZ*DEBYE
      DNX=ZERO
      DNY=ZERO
      DNZ=ZERO
      DO 112 I=1,NATOM
      DNX=DNX+CHGS(I)*C(1,I)
      DNY=DNY+CHGS(I)*C(2,I)
      DNZ=DNZ+CHGS(I)*C(3,I)
  112 CONTINUE
      DNX=DNX*DEBYE
      DNY=DNY*DEBYE
      DNZ=DNZ*DEBYE
      DTX=DNX+DEX
      DTY=DNY+DEY
      DTZ=DNZ+DEZ
      DIPOL=DSQRT(DTX*DTX+DTY*DTY+DTZ*DTZ)
      WRITE(6,6) DEX,DNX,DTX,DEY,DNY,DTY,DEZ,DNZ,DTZ,DIPOL
C
C   TRANSFORM DIPOLE MOMENT INTEGRALS FROM AO TO MO BASIS
      CALL MOCONV(DIPX,NBATRI,DIPX,NBATRI,EAO,UU,T)
      CALL MOCONV(DIPY,NBATRI,DIPY,NBATRI,EAO,UU,T)
      CALL MOCONV(DIPZ,NBATRI,DIPZ,NBATRI,EAO,UU,T)
      IF(IPRNT.LE.2) GO TO 303
      WRITE(6,7)
      CALL PRINT(DIPX,NBATRI,NBASIS,6)
      WRITE(6,8)
      CALL PRINT(DIPY,NBATRI,NBASIS,6)
      WRITE(6,9)
      CALL PRINT(DIPZ,NBATRI,NBASIS,6)
C
  303 CONTINUE
      IF(IPRNT.LE.5) GO TO 304
      DO 115 IABC=1,NATOM
      DO 114 IPQR=1,9
      WRITE(6,10) IABC,IPQR
      CALL PRINT(DDER(1,IPQR,IABC),NBATRI,NBFAO,6)
  114 CONTINUE
  115 CONTINUE
C
  304 CONTINUE
      DO 116 I=1,3
      DO 116 J=1,N3N
      DIPDA(I,J)=ZERO
      DIPDN(I,J)=ZERO
  116 CONTINUE
      DO 118 IABC=1,NATOM
      ZNUC=CHGS(IABC)
      I00=(IABC-1)*3
      IXX=I00+1
      IYY=I00+2
      IZZ=I00+3
      IJ=0
      DO 117 I=1,NBFAO
      DO 117 J=1,I
      IJ=IJ+1
      FAC=TWO
      IF(I.EQ.J) FAC=ONE
      DIPDA(1,IXX)=DIPDA(1,IXX)+DDER(IJ,1,IABC)*P(IJ)*FAC
      DIPDA(1,IYY)=DIPDA(1,IYY)+DDER(IJ,2,IABC)*P(IJ)*FAC
      DIPDA(1,IZZ)=DIPDA(1,IZZ)+DDER(IJ,3,IABC)*P(IJ)*FAC
      DIPDA(2,IXX)=DIPDA(2,IXX)+DDER(IJ,4,IABC)*P(IJ)*FAC
      DIPDA(2,IYY)=DIPDA(2,IYY)+DDER(IJ,5,IABC)*P(IJ)*FAC
      DIPDA(2,IZZ)=DIPDA(2,IZZ)+DDER(IJ,6,IABC)*P(IJ)*FAC
      DIPDA(3,IXX)=DIPDA(3,IXX)+DDER(IJ,7,IABC)*P(IJ)*FAC
      DIPDA(3,IYY)=DIPDA(3,IYY)+DDER(IJ,8,IABC)*P(IJ)*FAC
      DIPDA(3,IZZ)=DIPDA(3,IZZ)+DDER(IJ,9,IABC)*P(IJ)*FAC
  117 CONTINUE
      DIPDN(1,IXX)=ZNUC
      DIPDN(2,IYY)=ZNUC
      DIPDN(3,IZZ)=ZNUC
  118 CONTINUE
      DO 120 I=1,3
      DO 120 J=1,N3N
      DIPDA(I,J)=-DIPDA(I,J)*DEBYE
      DIPDN(I,J)=DIPDN(I,J)*DEBYE
  120 CONTINUE
      IF(IPRNT.LE.2) GO TO 305
      WRITE(6,11)
      CALL MATOUT(DIPDA,3,45,3,N3N,6)
      WRITE(6,12)
      CALL MATOUT(DIPDN,3,45,3,N3N,6)
C
C   STORE DIPOLE DERIVATIVE MATRICES IN TAPE43
  305 CONTINUE
      ITAP43=43
      NTRI2=intowp(NTRI)
      CALL RFILE(ITAP43)
      CALL SWRIT(ITAP43,DIPDA,270)
      CALL SWRIT(ITAP43,DIPDN,270)
      CALL SWRIT(ITAP43,DIPX,NTRI2)
      CALL SWRIT(ITAP43,DIPY,NTRI2)
      CALL SWRIT(ITAP43,DIPZ,NTRI2)
C
C   TRANSFORM DERIVATIVE DIPOLE MOMENT INTEGRALS FROM AO TO MO BASIS
C   AND STORE THEM IN TAPE43
      DO 123 IABC=1,NATOM
      DO 122 IXYZ=1,3
      DO 121 IFGH=1,3
      ISPOT=IXYZ+(IFGH-1)*3
      CALL MOCONV(DDER(1,ISPOT,IABC),NBATRI,DDER(1,ISPOT,IABC),NBATRI,
     1            EAO,UU,T)
      CALL SWRIT(ITAP43,DDER(1,ISPOT,IABC),NTRI2)
      IF(IPRNT.LE.3) GO TO 121
      WRITE(6,13) IABC,IXYZ,IFGH,ISPOT
      CALL PRINT(DDER(1,ISPOT,IABC),NBATRI,NBASIS,6)
  121 CONTINUE
  122 CONTINUE
  123 CONTINUE
      CALL SREW(ITAP43)
C
      RETURN
      END
      SUBROUTINE ECAL(PAX,PAY,PAZ,PBX,PBY,PBZ,PTWO,MAXIJ)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL EQUAL
      COMMON/EXYZS/EX(7,7,13),EY(7,7,13),EZ(7,7,13)
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
C
      EX(1,1,1)=ONE
      EY(1,1,1)=ONE
      EZ(1,1,1)=ONE
C
      DO 110 II=2,MAXIJ
      DO 109 JJ=1,II
      EQUAL=II.EQ.JJ
      IJTOT=(II-2)+(JJ-1)
      KMAX=II+JJ-1
      DO 108 KK=1,KMAX
      PXX=ZERO
      PYY=ZERO
      PZZ=ZERO
      QXX=ZERO
      QYY=ZERO
      QZZ=ZERO
C
      KM1=KK-1
      IF(KM1.LT.1) GO TO 201
      PXX=PXX+EX(II-1,JJ,KM1)*PTWO
      PYY=PYY+EY(II-1,JJ,KM1)*PTWO
      PZZ=PZZ+EZ(II-1,JJ,KM1)*PTWO
      IF(EQUAL) GO TO 201
      QXX=QXX+EX(JJ,II-1,KM1)*PTWO
      QYY=QYY+EY(JJ,II-1,KM1)*PTWO
      QZZ=QZZ+EZ(JJ,II-1,KM1)*PTWO
C
  201 CONTINUE
      IF(KM1.GT.IJTOT) GO TO 202
      PXX=PXX+EX(II-1,JJ,KK)*PAX
      PYY=PYY+EY(II-1,JJ,KK)*PAY
      PZZ=PZZ+EZ(II-1,JJ,KK)*PAZ
      IF(EQUAL) GO TO 202
      QXX=QXX+EX(JJ,II-1,KK)*PBX
      QYY=QYY+EY(JJ,II-1,KK)*PBY
      QZZ=QZZ+EZ(JJ,II-1,KK)*PBZ
C
  202 CONTINUE
      IF(KK.GT.IJTOT) GO TO 203
      KP1=KK+1
      T=DBLE(KK)
      PXX=PXX+EX(II-1,JJ,KP1)*T
      PYY=PYY+EY(II-1,JJ,KP1)*T
      PZZ=PZZ+EZ(II-1,JJ,KP1)*T
      IF(EQUAL) GO TO 203
      QXX=QXX+EX(JJ,II-1,KP1)*T
      QYY=QYY+EY(JJ,II-1,KP1)*T
      QZZ=QZZ+EZ(JJ,II-1,KP1)*T
C
  203 CONTINUE
      EX(II,JJ,KK)=PXX
      EY(II,JJ,KK)=PYY
      EZ(II,JJ,KK)=PZZ
      IF(EQUAL) GO TO 205
      EX(JJ,II,KK)=QXX
      EY(JJ,II,KK)=QYY
      EZ(JJ,II,KK)=QZZ
C
  205 CONTINUE
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
C
      RETURN
      END
      SUBROUTINE GCAL(PCX,PCY,PCZ,VX,VY,VZ,A22,NI,NJ,MAXT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION GX(10),GY(10),GZ(10)
      COMMON/EXYZS/EX(7,7,13),EY(7,7,13),EZ(7,7,13)
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
C
      GX(1)=ONE
      GY(1)=ONE
      GZ(1)=ONE
      GX(2)=PCX*A22
      GY(2)=PCY*A22
      GZ(2)=PCZ*A22
C
      IF(MAXT.LE.2) GO TO 201
      DO 101 I=2,MAXT-1
      XI1=DBLE(I-1)
      GX(I+1)=(PCX*GX(I)+XI1*GX(I-1))*A22
      GY(I+1)=(PCY*GY(I)+XI1*GY(I-1))*A22
      GZ(I+1)=(PCZ*GZ(I)+XI1*GZ(I-1))*A22
  101 CONTINUE
C
  201 CONTINUE
      VX=ZERO
      VY=ZERO
      VZ=ZERO
      DO 102 I=1,MAXT
      VX=VX+EX(NI,NJ,I)*GX(I)
      VY=VY+EY(NI,NJ,I)*GY(I)
      VZ=VZ+EZ(NI,NJ,I)*GZ(I)
  102 CONTINUE
C
      RETURN
      END
      BLOCK DATA
      COMMON/IJVEC/IX(84),IY(84),IZ(84),JX(84),JY(84),JZ(84)
C
C FIRST ROW CONTAINS S,P, AND D INDICES
C SECOND ROW CONTAINS F
C THIRD ROW CONTAINS G
C FOURTH AND FIFTH ROWS CONTAIN  H
C SIXTH AND SEVENTH ROWS CONTAIN  I
C
      DATA IX / 1, 8, 1, 1,15, 1, 1, 8, 8, 1,
     *         22, 1, 1,15,15, 8, 1, 8, 1, 8,
     *         29, 1, 1,22,22, 8, 1, 8, 1,15,15, 1,15, 8, 8,
     *         36, 1, 1,29,29, 8, 1, 8, 1,22,22,15, 1,15, 1,22, 8, 8,15,
     *          8,15,
     *         43, 1, 1,36,36, 8, 1, 8, 1,29,29,15, 1,15, 1,22,22, 1,29,
     *          8, 8,22,22,15, 8,15, 8,15/
      DATA JX / 0, 1, 0, 0, 2, 0, 0, 1, 1, 0,
     *          3, 0, 0, 2, 2, 1, 0, 1, 0, 1,
     *          4, 0, 0, 3, 3, 1, 0, 1, 0, 2, 2, 0, 2, 1, 1,
     *          5, 0, 0, 4, 4, 1, 0, 1, 0, 3, 3, 2, 0, 2, 0, 3, 1, 1, 2,
     *          1, 2,
     *          6, 0, 0, 5, 5, 1, 0, 1, 0, 4, 4, 2, 0, 2, 0, 3, 3, 0, 5,
     *          1, 1, 3, 3, 2, 1, 2, 1, 2/
      DATA IY / 1, 1, 8, 1, 1,15, 1, 8, 1, 8,
     *          1,22, 1, 8, 1,15,15, 1, 8, 8,
     *          1,29, 1, 8, 1,22,22, 1, 8,15, 1,15, 8,15, 8,
     *          1,36, 1, 8, 1,29,29, 1, 8,15, 1,22,22, 1,15, 8,22, 8,15,
     *         15, 8,
     *          1,43, 1, 8, 1,36,36, 1, 8,15, 1,29,29, 1,15,22, 1,22, 8,
     *         29, 8,15, 8,22,22, 8,15,15/
      DATA JY / 0, 0, 1, 0, 0, 2, 0, 1, 0, 1,
     *          0, 3, 0, 1, 0, 2, 2, 0, 1, 1,
     *          0, 4, 0, 1, 0, 3, 3, 0, 1, 2, 0, 2, 1, 2, 1,
     *          0, 5, 0, 1, 0, 4, 4, 0, 1, 2, 0, 3, 3, 0, 2, 1, 3, 1, 2,
     *          2, 1,
     *          0, 6, 0, 1, 0, 5, 5, 0, 1, 2, 0, 4, 4, 0, 2, 3, 0, 3, 1,
     *          5, 1, 2, 1, 3, 3, 1, 2, 2/
      DATA IZ / 1, 1, 1, 8, 1, 1,15, 1, 8, 8,
     *          1, 1,22, 1, 8, 1, 8,15,15, 8,
     *          1, 1,29, 1, 8, 1, 8,22,22, 1,15,15, 8, 8,15,
     *          1, 1,36, 1, 8, 1, 8,29,29, 1,15, 1,15,22,22, 8, 8,22, 8,
     *         15,15,
     *          1, 1,43, 1, 8, 1, 8,36,36, 1,15, 1,15,29,29, 1,22,22, 8,
     *          8,29, 8,15, 8,15,22,22,15/
      DATA JZ / 0, 0, 0, 1, 0, 0, 2, 0, 1, 1,
     *          0, 0, 3, 0, 1, 0, 1, 2, 2, 1,
     *          0, 0, 4, 0, 1, 0, 1, 3, 3, 0, 2, 2, 1, 1, 2,
     *          0, 0, 5, 0, 1, 0, 1, 4, 4, 0, 2, 0, 2, 3, 3, 1, 1, 3, 1,
     *          2, 2,
     *          0, 0, 6, 0, 1, 0, 1, 5, 5, 0, 2, 0, 2, 4, 4, 0, 3, 3, 1,
     *          1, 4, 1, 2, 1, 2, 3, 3, 2/
C
      END
