C/////////////////////////////////////////////////////
C     INPUT FOR PROGRAM ONEPDM:
C     OPTIONS ARE READ FROM THE NORMAL SCF-CI INPUT FILE: TAPE5
C     CARD 1:
C     # ONEPDM ###################
C     CARD 2:
C     PRINT,MAX,PRPFLG,ROOTI,ROOTF,PGROUP,prnt2 FORMAT:5I5,2X,A3,i5
C
C     MAX:  THE MAX MOST IMPORTANT CONFIGURATIONS ARE DISPLAYED. DEFAULT
C     ROOTI AND ROOTF : THE FIRST AND LAST CI ROOTS FOR WHICH ONEPDM IS
C          BE RUN.  DEFAULT=1,1
C     PRPFLG=-1      DISPLAY THE MOST IMPORTANT CONFIGURATIONS ONLY.
C     PRPFLG=0   IN ADDITION TO THE ABOVE,  FORM THE 1-PDM AND PRINT THE
C                POPULATIONS IN THE MO'S.
C     PRPFLG=1   IN ADDITION TO THE ABOVE, DIAGONALIZE THE 1-PDM TO OBTA
C                THE NATURAL ORBITALS IN TERMS OF THE MO'S , SO'S, AND
C                AO'S. THE AO ONEPDM IS THEN WRITTEN TO THE MASTER FILE.
C     PRPFLG=2   IN ADDITION TO THE ABOVE, WRITE THE NATURAL ORBITALS
C                (RELATIVE TO THE SO'S) OVER THE SCF VECTOR IN FILE30.
C     PRINT =0   NO ADDITIONAL PRINTING.
C     PRINT =1   PRINT THE 1-PDM TO TAPE6 ALSO.
C     PRINT =2   PRINT THE 1-PDM AND NO-MO MATRIX TO TAPE6.
C     PRINT =3   PRINT THE 1-PDM, NO-MO MATRIX, AND NO-SO MATRIX TO TAPE
C     PGROUP     THE POINT GROUP OF THE MOLECULE, E.G. C2V,CS,D2H,ETC.
C             THIS INFORMATION IS USED FOR THE PURPOSE OF LABELLING
C             THE ORBITALS WITH THE CORRECT IRREDUCIBLE REPRESENTATION.
C             DEFAULT:  C1,CS,C2V, OR D2H.
C
C     MAIN INPUT :  FILE5=THE NORMAL INPUT FILE
C                   FILE58=THE DRT TAPE.
C                   FILE54=THE TAPE ON WHICH THE CI VECTOR IS STORED.
C                   FILE30=THE OUTPUT TAPE FROM PITZER'S SCF PROGRAM ON
C                    WHICH THE SCF EIGENVECTORS AND EIGENVALUES ARE STOR
C                    (ONLY NECESSARY IF PRPFLG=1)
C     OUTPUT :  FILE6 IS THE NORMAL OUTPUT UNIT.
C               FILE50 IS AN UNBLOCKED FILE TO WHICH THE SO ONEPDM IS
C                      WRITTEN.
C               FILE51 IS A BLOCKED WORK FILE FOR STORING THE SCF VECTOR
C                 AND THE NO-MO TRANSFORMATION MATRIX.
C
C
C                                         WESLEY D. ALLEN
C                                         9/17/85
C
C///////////////////////////////////////////////////////////////////////
      SUBROUTINE MAINOP(A,ia,MAXR)
      IMPLICIT INTEGER (A-Z)
cets030291
#include <error.h>
      integer frdi, frdc, frdboo, errcod
      integer prdup, prcntr
      DOUBLE PRECISION A(MAXR)
      integer ia(1)
C   PROGRAM TO CALCULATE ONE-PARTICLE DENSITY MATRICES AND TRANSFORMATIO
C   TO GET NATURAL ORBITALS AND DENSITY MATRICES FOR ONE ELECTRON PROPER
      DOUBLE PRECISION ECI,FZCORE,REP,CZERO,EGUESS
      CHARACTER PGROUP*3,SYMLBL*3
      LOGICAL PAGEIN
      DOUBLE PRECISION ACF,DRTVER
      INTEGER BMAX,PUWK,PRPFLG,PRINT,ROOTI,ROOTF,SYMOFF,IRSYM
      INTEGER DRTLBL,SCFLBL,SYMDIF,IERROR,ICBN12(16),ICBN8(16)
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30,ifil76
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /LOOPS/ACF,IUWK,JUWK,NLWK,IORB,JORB,PUWK
      COMMON /PAGE/ IWORD3,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
cets071791      COMMON /DRT/ IA(20000)
      IFILE5=5
      IFILE6=6
      IFIL58=58
      IFIL30=30
      IFIL40=40
      IFIL54=54
      IFIL50=50
      IFIL51=51
      ifil76=76
      IDEV=0
c!!!  MAXI=20000   this is not related to maxcor
cets      MAXI=20000
cets071791           it is now!!!
      maxi=intowp(maxr)
c
      WRITE(IFILE6,5)
    5 FORMAT(1H )
CRBR  WRITE(IFILE6,6)
    6 FORMAT(/,13(10('*')),/)
      WRITE(IFILE6,10)
   10 FORMAT(1H ,20X,'THE SHAPE DRIVEN GRAPHICAL UNITARY GROUP',/
     $,      1H ,20X,'   CONFIGURATION INTERACTION PACKAGE ')
      WRITE(IFILE6,11)
   11 FORMAT(1H ,17X,'ONE PARTICLE DENSITY MATRIX GENERATION PROGRAM')
      WRITE(IFILE6,12)
   12 FORMAT(1H ,11X,'WRITTEN BY WILLIAM D. LAIDIG AND ADAPTED BY '
     $,              'DOUGLAS J. FOX'/)
      WRITE(IFILE6,13)
   13 FORMAT(18X,'CONVERTED TO THE IBM SYSTEM WITH ADDITIONS AND'
     $,     /,25X,'MODIFICATIONS BY WESLEY D. ALLEN.',/)
      WRITE(IFILE6,6)
C   OPEN ALL FILES
      call ffile(ifil51,' ',80)
      CALL RFILE(IFIL54)
      CALL RFILE(IFIL58)
      CALL RFILE(IFIL50)
      CALL RFILE(IFIL30)
      CALL DCDLBL(IFIL54,INTLBL,SCFLBL,REFWLK,IX,NWKS,EGUESS,ECI,CZERO)
c
      errcod = prcntr('OFF NOMO NOSO OPDMSO OPDMMO')
c
      CALL LOCATE(IFILE5,'# ONEPDM #',IERROR)
      IF(IERROR.NE.0) THEN
cets030291           WRITE(IFILE6,14)
cets   14 FORMAT(1X,'WARNING! NO ONEPDM INPUT FOUND ',
cets     +' **** DEFAULT OPTIONS BEING USED **** ')
cets030291           GO TO 19
        MAX = 20
        ROOTI = 1
        ROOTF = 1
        PRINT = 0
        PRPFLG = -1
        PGROUP='   '
        prnt2 = 0

        errcod = frdi('NCSF',max)

        errcod = frdi('ROOT1',rooti)

        errcod = frdi('NUMROOTS',nroo)
        rootf = nroo+rooti-1

        errcod = frdc('SYMMETRY',pgroup)

        errcod = frdi('IPRINT2',prnt2)

        ijunk=0
        errcod = frdboo('MK_OPDM',ijunk)
        if(ijunk.ne.0) then
          prpflg=0
          errcod = prcntr('ON OPDMSO OPDMMO')
        endif

        ijunk=0
        errcod = frdboo('WRTOPDM',ijunk)
        if(ijunk.ne.0) then
          prpflg=1
          errcod = prcntr('ON OPDMSO OPDMMO')
        endif

        ijunk=0
        errcod = frdboo('WRTNOS',ijunk)
        if(ijunk.eq.1) then
          prpflg = 2
          errcod = prcntr('ON NOMO NOSO')
        endif

        errcod = frdi('PRPFLG',prpflg)

        errcod = frdi('IPRINT',print)
      else
        READ(IFILE5,20) PRINT,MAX,PRPFLG,ROOTI,ROOTF,PGROUP,prnt2
   20   FORMAT(5I5,2X,A3,i5)
      END IF
   19 CONTINUE
c
      errcod = prdup()
c
      IF(PRPFLG.GE.1) CALL INITMF(1)
      CALL WREADW(IFIL58,DRTVER,INTOWP(1),1,IEND)
      CALL WREADW(IFIL58,DRTLBL,26,IEND,IEND)
      CALL WREADW(IFIL58,NBF,1,IEND,IEND)
      CALL WREADW(IFIL58,NSYM,1,IEND,IEND)
      CALL WREADW(IFIL58,NORBS,1,IEND,IEND)
      CALL WREADW(IFIL58,NROWS,1,IEND,IEND)
      CALL WREADW(IFIL58,NROWS4,1,IEND,IEND)
      CALL WREADW(IFIL58,NLEVS,1,IEND,IEND)
      CALL WREADW(IFIL58,NREFS,1,IEND,IEND)
      CALL WREADW(IFIL58,IX,1,IEND,IEND)
      CALL WREADW(IFIL58,IX,1,IEND,IEND)
      CALL WREADW(IFIL58,NWKS,1,IEND,IEND)
      CALL WREADW(IFIL58,IX,1,IEND,IEND)
      CALL WREADW(IFIL58,IX,1,IEND,IEND)
      CALL WREADW(IFIL58,ORBFRM,1,IEND,IEND)
      CALL WREADW(IFIL58,NUMKL,1,IEND,IEND)
      CALL WREADW(IFIL58,NUMIJ,1,IEND,IEND)
      CALL WREADW(IFIL58,NGROUP,1,IEND,IEND)
      CALL WREADW(IFIL58,NUMINT,1,IEND,IEND)
      CALL WREADW(IFIL58,NMAX,1,IEND,IEND)
      CALL WREADW(IFIL58,BMAX,1,IEND,IEND)
      IEND=IEND+2+2*NUMKL+2*NUMIJ+4*NORBS+NGROUP+NBF
      IF(NSYM.EQ.1) THEN
      IRSYM=1
      ELSE IF(NSYM.EQ.2) THEN
      IRSYM=2
      ELSE IF(NSYM.EQ.4) THEN
      IRSYM=2
      ELSE
      IRSYM=3
      END IF
      CALL SETSYM(PGROUP)
      IF(MAX.LE.0) MAX=20
      IF(MAX.GT.NWKS) MAX=NWKS
      IF(ROOTI.LE.0) ROOTI=1
      IF(ROOTF.LT.ROOTI) ROOTF=ROOTI
      NROOTS=ROOTF-ROOTI+1
      WRITE(IFILE6,21)
   21 FORMAT(1H ,'OPTIONS',18X,'PRINT MAX PRPFLG ROOTI ROOTF PRNT2')
      WRITE(IFILE6,22)PRINT,MAX,PRPFLG,ROOTI,ROOTF,prnt2
   22 FORMAT(1H ,22X,2I6,I5,2I6,i5)
      WRITE(IFILE6,23)DRTLBL
   23 FORMAT(/,1H ,'LABEL FROM DRT:  ',26A3)
      if (iand(prnt2,1) .ne. 0) then
        WRITE(IFILE6,524)EGUESS,ECI
  524   FORMAT(/,1H ,'EGUESS =',F22.16,/,1H ,'ECI    =',F22.16,/)
      else
        WRITE(IFILE6,24)EGUESS,ECI
   24   FORMAT(/,1H ,'EGUESS =',F16.10,/,1H ,'ECI    =',F16.10,/)
        endif
      LEVFRM=ORBFRM+1
      NWKS2=NWKS*2
      NORBSQ=NORBS*NORBS
      NBFSQ=NBF*NBF
      NLEVS=NORBS+1
      NLWKS = 1
      BVAL   = NLWKS + NROWS
      ARC    = BVAL + NROWS
      WGHT   = ARC + NROWS4
      ISEGM  = WGHT + NROWS4
      JSEGM  = ISEGM + NLEVS
      IMAIN  = JSEGM + NLEVS
      ISUB   = IMAIN + NLEVS
      IUWKMN = ISUB  + NLEVS
      IUWKSB = IUWKMN + NLEVS
      HDWGT  = IUWKSB + NLEVS
      HDSEG  = HDWGT + NLEVS
      HDPNT  = HDSEG + NLEVS
      ORBSYM = HDPNT + NLEVS
      ORBTBF = ORBSYM + NORBS
      BFCODE = ORBTBF + NORBS
crsg021594 BFCODE is dimensioned NREFS*NBF, not just NBF
crsg021594      BFSYM  = BFCODE + NBF
      BFSYM  = BFCODE + nrefs*NBF
      ORDER  = BFSYM + NBF
      CNF    = ORDER + MAX
      POP    = CNF + MAX
      LENI   = POP + NOCCMX*MAX
      IF(LENI.LE.MAXI) GO TO 31
      IF(ORDER.GT.MAXI) GO TO 900
      MAX=(MAXI-ORDER)/(NOCCMX+2)
      CNF    = ORDER + MAX
      POP    = CNF + MAX
      WRITE(IFILE6,30)MAX
   30 FORMAT(1H ,'INSUFFICIENT INTEGER STORAGE, MAX LOWERED TO ',I4)
   31 CALL GETDRT(IA(ISEGM),IA(BVAL),IA(ARC),IA(NLWKS),IA(WGHT)
     $,           IA(ORBSYM),IA(ORBTBF),IA(BFSYM),IA(BFCODE))
      NWKSMX=NWKS
      NWKMX2=NWKS2
c
cets071791 start at bottom of integer stuff
cets071791      DRTDM=1
      drtdm=iadtwp(leni)
      ACOEF  = DRTDM + NBFSQ
      COEF   = ACOEF + NLEVS
      VECTOR = COEF + MAX
      LENR= VECTOR + NWKS
      IF(LENR.LT.MAXR) GO TO 50
      WRITE(IFILE6,41)
   41 FORMAT(1H ,'INSUFFICIENT CORE TO HOLD ALL VECTORS. PAGING WILL'
     *,' BE TRIED,')
      NWKSMX=(MAXR-VECTOR)
      NWKMX2=NWKSMX + NWKSMX
      IF(NLWKMX.GT.NWKSMX) GO TO 940
      WRITE(IFILE6,42) NWKSMX
   42 FORMAT(1X,I8,' ELEMENTS OF THE VECTOR CAN BE HELD AT ONCE.')
   50 CONTINUE
C   OVER LAPPING ASSIGNMENTS FOR USE LATER ON
      SCFDM  = DRTDM + NBFSQ
      SCFVEC = SCFDM + NBFSQ
      MOOCC  = SCFVEC + NBFSQ
      NOOCC  = MOOCC + NBF
      XSO = NOOCC + NBF
      SCRTCH = XSO+ NBF*(NBF+1)/2
      CALL INITPG(A(VECTOR))
      DO 80 I=1,NROOTS
      WRITE(IFILE6,60) I
   60 FORMAT(1H ,37X,'ROOT ',I2)
      CALL LRGCNF(A(VECTOR),A(COEF),IA(CNF),IA(ORDER))
clj070389
      if (iand(prnt2,1) .ne. 0) then
      CALL OCCprc(IA(ARC),IA(WGHT),IA(ORBTBF),IA(ISEGM),IA(IUWKMN)
     $,         IA(IMAIN),A(COEF),IA(CNF),IA(ORDER),IA(POP),IA(BFSYM),
     &          prnt2)
      else
      CALL OCCUPY(IA(ARC),IA(WGHT),IA(ORBTBF),IA(ISEGM),IA(IUWKMN)
     $,         IA(IMAIN),A(COEF),IA(CNF),IA(ORDER),IA(POP),IA(BFSYM))
      endif
      IF(PRPFLG.LT.0) GO TO 80
      CALL INITDM(A(DRTDM),A(VECTOR))
      CALL LOOP1(IA(BVAL),IA(NLWKS),IA(WGHT),IA(ARC),IA(ORBSYM)
     $,          IA(ISEGM),IA(JSEGM),IA(IMAIN),IA(ISUB),IA(IUWKMN)
     $,          IA(IUWKSB),A(ACOEF),IA(HDWGT),IA(HDSEG),IA(HDPNT)
     $,          a(drtdm),a(vector))
      CALL DENSMA(A(DRTDM),A(SCRTCH),A(SCFDM),A(SCFVEC),A(MOOCC)
     $, A(NOOCC),A(XSO),IA(ORBTBF),IA(BFCODE),IA(ORDER),A(DRTDM))
      IF(PRPFLG.LT.1) GO TO 80
CWA   LOCATE THE AO-SO TRANSFORMATION MATRIX IN FILE30.
      CALL SCFLCU(LOCU,NUMAO)
CWA   FORM THE AO 1-PDM FROM THE SO 1-PDM ON FILE50.
      USOTAO=DRTDM
      XSO=USOTAO+NUMAO*NBF
      XAO=XSO+NBF*(NBF+1)/2
      SCRT1=XAO+NUMAO*(NUMAO+1)/2
      SCRT2=SCRT1+NUMAO*NUMAO
      SCRT3=SCRT2+NUMAO*NUMAO
      CALL XAOWRT(A(USOTAO),A(XSO),A(XAO),A(SCRT1),A(SCRT2),A(SCRT3),
     $      NBF,NUMAO,LOCU)
      call rclose(ifil50,3)
      WRITE(IFILE6,5)
   80 IWORD3=IWORD3+NWKS2
      WRITE(IFILE6,6)
      IF(PRPFLG.GE.1) CALL RCLOSE(IFIL40,3)
      IF(PRPFLG.GE.2) CALL RCLOSE(IFIL30,3)
      RETURN
  900 WRITE(IFILE6,905) LENI
  905 FORMAT(1X,'INSUFFICIENT INTEGER STORAGE ',I6,' WORDS NEEDED.')
      CALL mabort
  940 WRITE(IFILE6,945) VECTOR + NLWKMX
  945 FORMAT(1X,'INSUFFICIENT REAL STORAGE ',I8,' REAL WORDS NEEDED.')
      CALL mabort
      END
