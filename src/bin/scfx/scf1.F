 
C     //////////////////////////////////////////////////////
      SUBROUTINE SCF1(CM,NLAMDA,NV,SU,ITYP,C1,C2,NX,NORBS,ALPHA,BETA
     1,               NC,NO,S,H,DCP,DQP,DRP,DC,DQ,SD,ALL,D1OLD
     2,  EIG,IBUFFR,BUFFER,DR,DQQ,DRQ,DAB,DQRP,ICM,ISUQ,IALPHA
     3,  IBETA,IEIG
     3,  SFC,SFO,SFR,SFQ,G0,CC1,CC2,CCS,SUC,SUQ,SUR,SEX,SCRTCH,SUND
     4,  UNIT,FEX,DCP1,DCP2,DRP1,DRP2,DQP1,DQP2,DRQ1,DRQ2,DQQ1
     5,  DQQ2,DQRP1,DQRP2,NQVIRQ,SUR0,QALP,RALP,SUCOLD,SUQOLD,SUROLD)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
Crawdad.122192
#include <error.h>
C
C
      integer mxcoef,nsfmax,msfru,nsym,nmat,ntotal,nq,nqvirq,nvirq
      REAL*8 JK12,RATIO
      INTEGER IFCB49(16),IFCB48(16),IN48
      INTEGER QALP,RALP,QOFF,QOFFSQ,QQ,RR,KKQ,NSOFF(8)
      INTEGER ICM(1),ISUQ(1),IALPHA(1),IBETA(1),IEIG(1)
      CHARACTER CALTYP*6,CITYP*6,DERTYP*6
      DIMENSION SD(1),BUFFER(1),IBUFFR(1),DC(1),DQ(1),DCP(1)
      DIMENSION ALPHA(1),BETA(1),ALL(1),DQP(1),DRP(1)
      DIMENSION SU(MXCOEF),NX(NSFMAX),CM(2,MSFRU)
      DIMENSION NC(NSYM),NO(NSYM),NORBS(NSYM)
      DIMENSION NLAMDA(NSYM),NV(2,NSYM),C1(NSYM),C2(NSYM),ITYP(NSYM)
      DIMENSION D1OLD(NMAT),S(NMAT),H(NMAT),EIG(NTOTAL)
      DIMENSION DR(NMAT),DQQ(NMAT),DRQ(NMAT),DAB(NMAT),DQRP(NMAT)
      DIMENSION SFC(NMAT),SFO(NMAT),SFQ(NMAT),SFR(NMAT),G0(NMAT),
     1CC1(NQ,NQ),CC2(NQ,NQ),CCS(NQ,NQ),SUQ(NQ),SUR(NQ),SUR0(NQ),
     2SEX(NQ,NQ),SCRTCH(NQ,NQ),SUND(NQVIRQ),UNIT(NVIRQ,NVIRQ),
     3FEX(NQ,NQ),SUQOLD(NQ),SUROLD(NQ),SUCOLD(NQ,NQ),SUC(NQ,NQ)
      DIMENSION DCP1(1),DCP2(1),DRP1(1),DRP2(1),DQP1(1),DQP2(1),
     1DRQ1(1),DRQ2(1),DQQ1(1),DQQ2(1),DQRP1(1),DQRP2(1)
      DIMENSION H3CFG(6),Z3CFG(3,3),W3CFG(3),FV1CFG(6),FV2CFG(6)
      INTEGER PRINT,NAME(6)
      INTEGER START, END
      LOGICAL TWOCON,IPOPLE,EXTEST,FIRST,CHOSE,GSTATE,TERMIN,QRDAMP
      LOGICAL EGBND,MOFIX
      COMMON /CHSR/ CHOSE,GSTATE,TERMIN,QRDAMP,MOFIX
      COMMON /OLDCI/ OCI1,OCI2
      COMMON /QDATA/ ISYMQ,NQ,NVIRQ,NDOC,NMATQ,IAVRQ
      COMMON /POP/ IPOPLE
      COMMON /PRINT/ PRINT
      COMMON /TAPES/ NIN,IR,IOUT,ICHECK,IFLAG3,ITAPE,ITERML
      COMMON /GVB/ ALPHA1,ALPHA2,ALPHA3,IJUP,TWOCON
      COMMON /FLAGS/ IDEBUG,ISTO,IPUNCH,ISAVE,IRORDR
      COMMON /IFDMP/ DAMPSV,INFLG,MICMX,IDFIX
      COMMON /SCFIN/ REPNUC,IOPEN,ISCF,IPRCT,IVECT,NBFLD,ICUT
      COMMON /INPT/  NSYM,IPMAX,NMAT,ITMAX,NSFMAX,NTOTAL,MXCOEF,MSFRU
      COMMON /DIM21/ IPQ(256)
      COMMON /NEWRUN/ ITPREP
Crawdad.122192
      integer frdf,frdc,errcod
      logical oldinp
      common /oldin/ oldinp
      common /eneg/ egmin,egmax,c2init
C
      COMMON /T102/ NOUT,IHALF,ITHIRD,MAXNO,IOUTBF,KINADR
      COMMON /EXTR/ NMAT2,NMAT3,NMAT4,NMAT5,NMAT6,NMAT7
      COMMON/timex/ITIME,ICONT0,JCOUNT,ITIME2,ICONT2,ITIME3,ICONT3,
     1ITIME4,ICONT4,ITIME1,ICONT1
      DATA  EPS2,   A0, APT1, APT2, A1S2,   A1,A2PT2,   A10
     1/1.0D-6,0.0D0,0.1D0,0.2D0,0.5D0,1.0D0,2.2D0,10.0D0/
C
      EPSLON=1.0D-15
C
      ITAP49=49
CWA  SAVE T INTEGRALS FOR LATER.
      CALL SREW(ITAP49)
      CALL SWRIT(ITAP49,DCP,INTOWP(NMAT))
      IT48=48
      A2=2.0D0
      SQ1=0.0D0
      SQ2=0.0D0
      EXTEST=.FALSE.
      EGBND=.FALSE.
      CUT=FLOAT(ICUT)
      IF (CUT .LT. 0.0D0) CUT=ABS(1.0D0/CUT)
      IF (INFLG .LT. 0) FIRST=.TRUE.
      SQDIF=1.0D+00
      DO 2000 I=1,NMAT
        D1OLD(I)=0.0D+00
        DC(I)=0.0D+00
        DQ(I)=0.0D+00
        DR(I)=0.0D+00
 2000 CONTINUE
      THRSH=A10**(-ISTO)
      MXITR=ITMAX-1
      EPS=A10**(-ISCF)
      IF (TWOCON) THEN
        ISCFT=1
        EPS=0.1D0
        IVECTS=IVECT
        IVECT=-1
        KLI=0
        KL=0
        DO 2002 L=1,NSYM
          NN=NLAMDA(L)
          DO 2001 I=1,NN
            KL=KL+1
            IF (CM(2,KL).NE.0.0D0) THEN
              IF (KLI.NE.0) THEN
                KLII=KL
                LII=L
                GO TO 1040
              ELSE
                KLI=KL
                LI=L
              END IF
            END IF
 2001     CONTINUE
 2002   CONTINUE
      END IF
 1040 NOC=1
      IF (IOPEN.NE.0) NOC=2
      DO 1 I=1,NSYM
 1    NV(2,I)=0
      NEXT=0
      ELEC=A0
      KL=0
      DO 3 I=1,NSYM
        C1(I)=A0
        C2(I)=A0
        NN=NLAMDA(I)
        DO 2 J=1,NN
          KL=KL+1
          IF(CM(1,KL).NE.A0) C1(I)=CM(1,KL)
          IF(CM(2,KL).NE.A0) C2(I)=CM(2,KL)
 2      CONTINUE
        IF (TWOCON) THEN
          IF (I.EQ.LI) C1I=C1(I)
          IF (I.EQ.LII) C1II=C1(I)
        END IF
        DEN=C1(I)-C2(I)
        IF(DEN.EQ.A0) GO TO 3
        C1(I)=C1(I)/DEN
        C2(I)=C2(I)/DEN
 3    CONTINUE
      DO 5 M=1,NOC
        KL=0
        DO 5 I=1,NSYM
          NZCOUN=0
          NN=NLAMDA(I)
          DO 4 J=1,NN
            KL=KL+1
            IF(CM(M,KL).EQ.A0) GO TO 4
            ELEC=ELEC+CM(M,KL)
            NZCOUN=NZCOUN+1
 4        CONTINUE
 5    NV(M,I)=NZCOUN
C
      CALL SCHMIT(NSYM,NV,0,THRSH,NLAMDA,SU,S,SD)
C
      KK=1
      DO 15 L=1,NSYM
        NN=NLAMDA(L)
        NNV=NORBS(L)
        DO 6 I=1,NN
 6      NX(I)=I
        IF(NNV.EQ.0) GO TO 9
        DO 8 I=1,NNV
          XMAX=A0
          DO 7 J=1,NN
            IF(XMAX.GT.ABS(SU(KK))) GO TO 7
            IF(NX(J).EQ.0) GO TO 7
            XMAX=ABS(SU(KK))
            JMAX=J
 7        KK=KK+1
          NX(JMAX)=0
 8      CONTINUE
 9      IU=NN-NNV
        IF(IU.EQ.0) GO TO 14
        JMAX=1
        DO 13 I=1,IU
 10       IF(NX(JMAX).NE.0) GO TO 11
          JMAX=JMAX+1
          GO TO 10
 11       DO 12 J=1,NN
            SU(KK)=A0
            IF(J.EQ.JMAX) SU(KK)=A1
 12       KK=KK+1
          JMAX=JMAX+1
 13     CONTINUE
 14     CONTINUE
 15   CONTINUE
C
      NSOFF(1)=0
      QOFFSQ=0
      KKQ=0
      QOFF=0
      DO 91 L=2,NSYM
 91   NSOFF(L)=NSOFF(L-1)+NLAMDA(L-1)
      QOFF=NSOFF(ISYMQ)
      DO 92 L=1,ISYMQ-1
        NN=NLAMDA(L)
        QOFFSQ=QOFFSQ+NN*NN
 92   KKQ=KKQ+NN*(NN+1)/2
      CALL SCHMIT(NSYM,NV,1,THRSH,NLAMDA,SU,S,SD)
      WRITE(IOUT,905) QOFF,QOFFSQ,NMATQ,ISYMQ,NQ,NVIRQ,NDOC,KKQ
 905  FORMAT(/'  PARAMETERS FOR THE SCFEX PROGRAM:'
     1/5X,'QOFF  QOFFSQ   NMATQ  ISYMQ     NQ     NVIRQ  NDOC      KKQ',
     */8I8)
      WRITE(IOUT,906) QALP,RALP
 906  FORMAT('  THE OPEN SHELLS ARE:  QALP=',I6,'  RALP=',I6)
C
      IRORDR=2
      NEXT=0
      ICH=0
      CALL EXPAND(SEX,S(KKQ+1),NQ,NMATQ)
      IOFFR=QOFFSQ+(RALP-1)*NQ
      IOFFQ=QOFFSQ+(QALP-1)*NQ
CWA  VARIOUS OPTIONS FOR OBTAINING INITIAL ORBITALS.
Crawdad.122292
      if(oldinp) then
 119     READ(IR,16) EGMIN,EGMAX,C2INIT
      end if
Crawdad
      IF(EGMIN.LT.EGMAX.AND.EGMAX.LT.0.0D0) EGBND=.TRUE.
CWA   READ(IR,16) DAMP,DAM1
      IF(DABS(C2INIT).GE.1.0D0) C2INIT=0.0D0
      C1INIT=DSQRT(1.0D0-C2INIT*C2INIT)
      SINIT=(C1INIT+C2INIT)/(C1INIT-C2INIT)
      IF(DABS(SINIT).GE.1.0D0) SINIT=0.0D0
      CS1WA=DSQRT((1.0D0+SINIT)/2.0D0)
      CS2WA=DSQRT((1.0D0-SINIT)/2.0D0)
      CALL SREAD(IT48,IN48,1)
      IF (IN48.EQ.1) THEN
        DO 116 I=1,NQ
          SUR(I)=SU(I+IOFFR)
          SUR0(I)=SUR(I)
 116    SUQ(I)=SU(I+IOFFQ)
      ELSE IF(IN48.EQ.2) THEN
        DO 117  I=1,NQ
          SUR(I)=(SU(I+IOFFQ)*CS1WA-SU(I+IOFFR)*CS2WA)
          SUR0(I)=SUR(I)
 117      SUQ(I)=(SU(I+IOFFQ)*CS1WA+SU(I+IOFFR)*CS2WA)
      ELSE IF(IN48.EQ.5) THEN
        CALL SREAD(IT48,SUR,INTOWP(NQ))
        CALL SREAD(IT48,SUR0,INTOWP(NQ))
        CALL SREAD(IT48,SUQ,INTOWP(NQ))
      ELSE IF(IN48.EQ.-5) THEN
        CALL SREAD(IT48,SUQ,INTOWP(NQ))
        CALL SREAD(IT48,SUR0,INTOWP(NQ))
        CALL SREAD(IT48,SUR,INTOWP(NQ))
      END IF
C
  16  FORMAT(3F20.10)
      DAMP=0.0D0
      DAM1=0.0D+00
      WRITE(IOUT,240) EGMAX,EGMIN,C2INIT,SINIT
 240  FORMAT(1X,'UPPER BOUND ON ENERGY=',F20.10/' LOWER BOUND ON',
     *     ' ENERGY=',F20.10/' C2INIT=',F20.10,4X,'SINIT=',F10.6//)
 18   WRITE (IOUT,19)
      IF(IFLAG3.GT.0) WRITE(ICHECK,19)
C19   FORMAT (10H ITERATION,6X,6HENERGY,14X,2HDE,12X,5HSQDIF,12X,4HDAMP,
CWA  *10X,19HONE-ELECTRON ENERGY,3X,19HTWO-ELECTRON ENERGY/)
 19   FORMAT (10H ITERATION,6X,6HENERGY,14X,2HDE,12X,5HSQDIF,13X,3HS12,
     *26X,3HSQ1,19X,3HSQ2/)
C
C
 1210 CONTINUE
C
 20   CONTINUE
C
C  CONSTRUCT CLOSED SHELL DENSITY
C
      CALL DMAT1(NLAMDA,CM,SU,1,DC,DQ,IOPEN,SQDIF,NEXT,ALL,ICOUNT)
      IF(IOPEN.EQ.0)GO TO 39
C
C  CONSTRUCT OPEN SHELL DENSITIES Q(I)*Q(J), R(I)*R(J), Q(I)*R(J)
C
      DO 120 IJ=1,KKQ
        DR(IJ)=A0
        DQ(IJ)=A0
 120  DAB(IJ)=A0
      IJ=KKQ
      DO 130 I=1,NQ
        DO 130 J=1,I
          IJ=IJ+1
          VAL=SUQ(I)*SUQ(J)
          CC1(I,J)=VAL
          CC1(J,I)=VAL
          IF (I.NE.J) VAL=VAL*2.0D+00
          DQ(IJ)=VAL
          VAL=SUQ(I)*SUR(J)+SUQ(J)*SUR(I)
          IF (I.NE.J) VAL=VAL*2.0D+00
          DAB(IJ)=VAL
          VAL=SUR(I)*SUR(J)
          CC2(I,J)=VAL
          CC2(J,I)=VAL
          IF (I.NE.J) VAL=VAL*2.0D+00
 130  DR(IJ)=VAL
      DO 140 IJ2=IJ+1,NMAT
        DQ(IJ2)=A0
        DR(IJ2)=A0
 140  DAB(IJ2)=A0
 39   CONTINUE
C
C  DENSITY MATRICIES MULTIPLY SUPERMATRICIES (J-K/2) AND (K/2)
C
      CALL CONTR3 (BUFFER,IBUFFR,DC,DQ,DR,DAB,DCP,DQP,DRP,DQQ,DRQ,DQRP,
     1NMAT)
C
      JK12=0.0D0
      S12=0.0D0
      H12=0.0D0
      IJ=KKQ
      DO 150 I=1,NQ
        DO 150 J=1,I
          IJ=IJ+1
 150  JK12=JK12+DQ(IJ)*(DRP(IJ)+3.0D0*DRQ(IJ))
C
      DO 160 I=1,NQ
        DO 160 J=1,NQ
          VAL=SUQ(I)*SUR(J)
          I1=MAX(I,J)
          J1=MIN(I,J)
          IJ1=IPQ(I1)+J1+KKQ
          S12=S12+VAL*S(IJ1)
 160  H12=H12+VAL*H(IJ1)
      ALP=(1.0D+00)/((1.0D+00)+S12*S12)
      WRITE(ICHECK,821) S12,JK12,SQ1,SQ2
CWA   WRITE(IOUT,821) S12,JK12,SQ1,SQ2
 821  FORMAT('  S12=',F12.8,4X,'JK12=',F12.8,4X,
     *   'SQ1=',F12.8,4X,'SQ2=',F12.8)
      KEY=0
      E1P=E1
      E2P=E2
      ELASTP=ELAST
      DE1P=DE1
      DEP=DE
      E1=2.0D0*ALP*H12*S12
      E2=ALP*JK12
      EOP=2.0D0*H12*S12+JK12
      IF(NEXT.EQ.1) DEAVG=ABS(DE)
      IF(IOPEN.NE.0) GO TO 22
      WRITE(ICHECK,*) '  CAN ONLY DO OPEN SHELL SINGLETS. ERROR AT 22'
      STOP
C     DO 21 I=1,NMAT
C     E1=E1+D1(I)*H(I)
C 21  E2=E2+D1(I)*P1(I)
C     GO TO 24
 22   DO 23 I=1,NMAT
        E1=E1 + (DC(I)+ ALP*(DQ(I)+DR(I))) * H(I)
        VAL=(DQ(I)+DR(I))*DCP(I) + S12*DC(I)*DQRP(I)
        E2=E2+ 0.50D+00*DC(I)*DCP(I) + ALP*VAL
        EOP=EOP+ VAL + (DQ(I)+DR(I))*H(I)
  23  CONTINUE
 24   CONTINUE
      ELAST=E1+E2+REPNUC
      IF(E2.NE.A0) DE1=(E2-E2P)/ABS(E2)
      IF(INEW.EQ.0) GO TO 26
      IF(ABS(ELAST-ELASTP).GT.EPS) GO TO 25
      DEAVG=(ABS(DE1)+ABS(DE1P)+APT2*DEAVG)/A2PT2
      DE=DE1
      DEP=DE1P
      GO TO 27
 25   INEW=0
 26   DE=ELAST-ELASTP
      IF(NEXT.GE.2) DEAVG=(ABS(DE)+ABS(DEP)+APT2*DEAVG)/A2PT2
      IF(NEXT.GE.2.AND.DEAVG.LT.EPS2) INEW=1
      IF(NEXT.EQ.0) DE=A0
 27   NEXT=NEXT+1
CWA   WRITE(IOUT,72) NEXT,ELAST,DE,SQDIF,DAMP,E1,E2
      WRITE(IOUT,72) NEXT,ELAST,DE,SQDIF,S12,SQ1,SQ2
cets090289 added to write to output after each iteration
      call fioflu(iout)
CWA
      IF(MOFIX) GO TO 660
CWA   ADDED OPTION TO INTERACT IN INITIAL ITERATIONS.
      IF(TERMIN)
     1  WRITE(ITERML,72) NEXT,ELAST,DE,SQDIF
      IF(IFLAG3.GT.0)WRITE (ICHECK,72) NEXT,ELAST,DE,SQDIF,DAMP,E1,E2
      IF(ABS(E1-E1P).LT.ABS(E1*EPS).AND.ABS(E2-E2P).LT.ABS(E2*EPS))
     1KEY=1
CC    IF(IDFIX.NE.0.OR.NEXT.LT.3) GO TO 28
CC    CALL CNTRL (DE,DEP,DEAVG,DAMP,EPS,INEW)
C28   IF(KEYCNV.EQ.1) GO TO 31
CC    IF (DAMP .EQ. A0) GOTO 31
      IFEXT=0
C     CALL EXTRL(NEXT,NMAT,DCP,DCP1(1),DCP2(1),IPRCT,DAMP,IFEXT)
CCCC  IF(IOPEN.EQ.0) GO TO 29
C     CALL EXTRL(NEXT,NMAT,DRP,DRP1(1),DRP2(1),IPRCT,DAMP,IFEXT)
C     CALL EXTRL(NEXT,NMAT,DRQ,DRQ1(1),DRQ2(1),IPRCT,DAMP,IFEXT)
C     CALL EXTRL(NEXT,NMAT,DQP,DQP1(1),DQP2(1),IPRCT,DAMP,IFEXT)
C     CALL EXTRL(NEXT,NMAT,DQQ,DQQ1(1),DQQ2(1),IPRCT,DAMP,IFEXT)
C     CALL EXTRL(NEXT,NMAT,DQRP,DQRP1(1),DQRP2(1),IPRCT,DAMP,IFEXT)
C29   IF(IFEXT.EQ.1) WRITE(IOUT,30)
C     IF(IFEXT.EQ.1.AND.IFLAG3.GT.0) PRINT 30
C30   FORMAT (28X,10(2H* ),21HEXTRAPOLATE P MATRIX ,10(2H* ))
C31   CONTINUE
      IF(IOPEN.NE.0) GO TO 33
      WRITE(ICHECK,*) '  CAN ONLY DO OPEN SHELL SINGLETS. ERROR AT 33'
      STOP
C     DO 32 I=1,NMAT
C 32  SF2(I)=H(I)+P1(I)
C     GO TO 35
 33   DO 34 I=1,NMAT
        SFC(I) =H(I) + DCP(I)
        SFO(I) =SFC(I) + ALP*(DQP(I) + DRP(I) + S12*DQRP(I))
 34   CONTINUE
 36   KK=0
      L0=0
      ISU=0
      DO 59 L=1,NSYM
        NN=NLAMDA(L)
        NNIJ=IPQ(NN+1)
        IF (NN.EQ.0) GOTO 59
        NNV=NV(1,L)+NV(2,L)
        K0P=L0
        IF(NNV.NE.0.OR.KEYCNV.EQ.1.OR.NEXT.GT.MXITR) GO TO 38
        DO 37 I=1,NN
          K0P=K0P+1
 37     EIG(K0P)=A0
        GO TO 58
 38     MIC=MAX0(1,MICMX)
        IF(NV(2,L).EQ.0.OR.NV(1,L).EQ.0.OR.KEYCNV.EQ.1)MIC=1
        IF (L.EQ.ISYMQ) GOTO 1010
C
C  SOLVE CLOSED SHELL SYMMETRY BLOCK
C
        CALL EXTRL(NEXT,NNIJ,SFC(KK+1),DCP1(KK+1),DCP2(KK+1),
     1  IPRCT,DAMP,IFEXT)
        CALL EXTRL(NEXT,NNIJ,SFO(KK+1),DRP1(KK+1),DRP2(KK+1),
     1  IPRCT,DAMP,IFEXT)
        CALL TRN1E(SU(ISU+1),SFO(KK+1),G0,SCRTCH,NN,NN,NNIJ,NNIJ)
        DO 200 ISH=1,NN
          II=IPQ(ISH+1)
          IORB=ISH+L0
 200    IF(CM(1,IORB)+CM(2,IORB).EQ.A0) G0(II)=G0(II)+DAM1
C
        CALL ERDUW(G0,SU(ISU+1),NN,1.0D-15,CM(1,L0+1),IRORDR)
C
        DO 210 ISH=1,NN
          II=IPQ(ISH+1)
          IORB=ISH+L0
          IF(CM(1,IORB)+CM(2,IORB).EQ.A0) G0(II)=G0(II)-DAM1
 210    EIG(IORB)=G0(II)
        GOTO 58
C
C  SOLVE OPEN SHELL SYMMETRY BLOCK
C
 1010   CONTINUE
CWA
        SMIN=1.0D0
        K=0
        DO 255  J=1,NQ
        DO 255  I=1,NQ
        K=K+1
 255    SUCOLD(I,J)=SU(ISU+K)
CWA
        CALL EXPAND(FEX,SFC(KK+1),NQ,IPQ(NQ+1))
C
C  SFQ=SFC+(SFC)(CC2)(S)+(S)(CC2)(SFC)-ALP*EOP*(S)(CC2)(S)+JR+KR
C
        CALL EBC(CCS,CC2,SEX,NQ,NQ,NQ)
        CALL EBC(SCRTCH,FEX,CCS,NQ,NQ,NQ)
        IJ=0
        IJK=KK
        DO 260 I=1,NQ
          DO 260 J=1,I
            IJ=IJ+1
            IJK=IJK+1
 260    SFQ(IJ)=SFC(IJK)+SCRTCH(I,J)+SCRTCH(J,I)+DRP(IJK)+3.0D0*
     *    DRQ(IJK)
        CALL EBC(SCRTCH,SEX,CCS,NQ,NQ,NQ)
        IJ=0
        DO 270 I=1,NQ
          DO 270 J=1,I
            IJ=IJ+1
 270    SFQ(IJ)=SFQ(IJ)-ALP*EOP*SCRTCH(I,J)
C
C  SFR=SFC+(SFC)(CC1)(S)+(S)(CC1)(SFC)-ALP*EOP*(S)(CC1)(S)+JQ+KQ
C
        CALL EBC(CCS,CC1,SEX,NQ,NQ,NQ)
        CALL EBC(SCRTCH,FEX,CCS,NQ,NQ,NQ)
        IJ=0
        IJK=KK
        DO 280 I=1,NQ
          DO 280 J=1,I
            IJ=IJ+1
            IJK=IJK+1
 280    SFR(IJ)=SFC(IJK)+SCRTCH(I,J)+SCRTCH(J,I)+DQP(IJK)+3.0D0*
     *     DQQ(IJK)
        CALL EBC(SCRTCH,SEX,CCS,NQ,NQ,NQ)
        IJ=0
        DO 290 I=1,NQ
          DO 290 J=1,I
            IJ=IJ+1
 290    SFR(IJ)=SFR(IJ)-ALP*EOP*SCRTCH(I,J)
C
C SFO=SFO-ALP/2*((SFQ)(CC1)(S)+(S)(CC1)(SFQ)+(SFR)(CC2)(S)+(S)(CC2)(SFR)
C
        CALL EXPAND(FEX,SFQ,NQ,IPQ(NQ+1))
        CALL EBC(CCS,CC1,SEX,NQ,NQ,NQ)
        CALL EBC(SCRTCH,FEX,CCS,NQ,NQ,NQ)
        IJ=0
        IJK=KK
        DO 300 I=1,NQ
          DO 300 J=1,I
            IJ=IJ+1
            IJK=IJK+1
 300    SFO(IJK)=SFO(IJK)-ALP*0.50D0*(SCRTCH(I,J)+SCRTCH(J,I))
        CALL EXPAND(FEX,SFR,NQ,IPQ(NQ+1))
        CALL EBC(CCS,CC2,SEX,NQ,NQ,NQ)
        CALL EBC(SCRTCH,FEX,CCS,NQ,NQ,NQ)
        IJ=0
CWA     IJK=0
        IJK=KK
        DO 310 I=1,NQ
          DO 310 J=1,I
            IJ=IJ+1
            IJK=IJK+1
 310    SFO(IJK)=SFO(IJK)-ALP*0.50D0*(SCRTCH(I,J)+SCRTCH(J,I))
C
C  TRANSFORM SFO TO MO BASIS; SOLVE G0*C=E*C
C
        CALL EXTRL(NEXT,NNIJ,SFC(KK+1),DCP1(KK+1),DCP2(KK+1),
     1  IPRCT,DAMP,IFEXT)
        CALL EXTRL(NEXT,NNIJ,SFO(KK+1),DRP1(KK+1),DRP2(KK+1),
     1  IPRCT,DAMP,IFEXT)
        CALL EXTRL(NEXT,NNIJ,SFQ(KK+1),DRQ1(KK+1),DRQ2(KK+1),
     1  IPRCT,DAMP,IFEXT)
        CALL EXTRL(NEXT,NNIJ,SFR(KK+1),DQP1(KK+1),DQP2(KK+1),
     1  IPRCT,DAMP,IFEXT)
        IF (NDOC .EQ. 0) GOTO 1015
        CALL TRN1E(SU(ISU+1),SFO(KK+1),G0,SCRTCH,NN,NN,NNIJ,NNIJ)
        IF (IAND(PRINT,2048) .NE. 0) THEN
          WRITE(ICHECK,802) L
 802      FORMAT(/'  G0 CLOSED BEFORE SHIFT FOR SYMM',I4)
          CALL PRINTS(G0,NNIJ,NN,ICHECK)
        END IF
        DO 320 ISH=1,NN
          II=IPQ(ISH+1)
          IORB=ISH+L0
          IF (CM(1,IORB)+CM(2,IORB).EQ.A0) G0(II)=G0(II)+DAM1
          IF (CM(2,IORB).NE.A0) G0(II)=G0(II)+0.5D0*DAM1
 320    CONTINUE
C
        CALL ERDUW(G0,SU(ISU+1),NN,1.0D-15,CM(1,L0+1),IRORDR)
        IF (IAND(PRINT,2048) .NE. 0) THEN
          WRITE(ICHECK,803)
 803      FORMAT(/'  DIAGONAL G0:')
          CALL PRINTS(G0,NNIJ,NN,ICHECK)
          WRITE(ICHECK,804)
 804      FORMAT(/'  THE NEW ORBITALS:')
          CALL MATOUT(SU(ISU+1),NN,NN,NN,NN,ICHECK)
        END IF
CWA
        K=0
        DO 308  J=1,NQ
        DO 308  I=1,NQ
        K=K+1
 308    SUC(I,J)=SU(ISU+K)
        IF(QRDAMP) THEN
          DO 309  J=1,NDOC
          VN=0.0D0
             DO 307  K=1,NQ
             DO 307  M=1,NQ
 307         VN=VN+SEX(K,M)*SUC(K,J)*SUCOLD(M,J)
             IF(VN.LT.0.0D0) THEN
             VN=-VN
             DO 306   I=1,NQ
 306         SUCOLD(I,J)=-SUCOLD(I,J)
             END IF
             SMIN=DMIN1(SMIN,VN)
 309      CONTINUE
        END IF
CWA
        DO 330 ISH=1,NN
          II=IPQ(ISH+1)
          IORB=ISH+L0
CC    IF (CM(1,IORB).EQ.A0) GOTO 331
CC    G0(II)=G0(II)+DAM1*2.0D+00
          IF (CM(1,IORB)+CM(2,IORB).EQ.A0) G0(II)=G0(II)-DAM1
          IF (CM(2,IORB).NE.A0) G0(II)=G0(II)-0.50D0*DAM1
          EIG(IORB)=G0(II)
C331  IF (IORB.EQ.QALP) G0(II)=G0(II)+DAM1
C     IF (IORB.EQ.RALP) G0(II)=G0(II)+DAM1*0.50D0
 330    CONTINUE
C
C  PUT NON-DOUBLY OCCUPIED ORBITALS IN SUND
C
 1015   IADD=QOFFSQ+NDOC*NN
        DO 340 I=1,NQ*NVIRQ
 340    SUND(I)=SU(I+IADD)
C
C  TRANSFORM SFQ TO MO BASIS; SOLVE G0*C=E*C; BECAUSE ERDUW REQUIRES
C  SQUARE ARRAY, NEED UNIT AS INTERMEDIATE
C
        DO 350 I=1,NVIRQ
          DO 350 J=1,NVIRQ
            UNIT(I,J)=A0
            UNIT(J,I)=A0
            IF (I.EQ.J) UNIT(I,J)=1.0D+00
 350    CONTINUE
        CALL TRN1E(SUND,SFQ,G0,SCRTCH,NN,NVIRQ,IPQ(NVIRQ+1),IPQ(NN+1)
     *  )
        IF (IAND(PRINT,2048) .NE. 0) THEN
          WRITE(ICHECK,805)
 805      FORMAT(/'  G0 FOR FQ BEFORE SHIFT:')
          CALL PRINTS(G0,IPQ(NVIRQ+1),NVIRQ,ICHECK)
        END IF
        DO 360 ISH=1,NVIRQ
          II=IPQ(ISH+1)
          IORB=ISH+L0+NDOC
          IF (CM(1,IORB)+CM(2,IORB).EQ.A0) G0(II)=G0(II)+DAM1
          IF(CM(2,IORB).NE.A0) G0(II)=G0(II)-DAM1
 360    CONTINUE
C
        CALL ERDUW(G0,UNIT,NVIRQ,1.0D-15,CM(1,L0+1+NDOC),1)
        CALL SUEIG(SUND,UNIT,SCRTCH,NN,NVIRQ,G0,CM(1,L0+1+NDOC),
     1  2,IPQ(NVIRQ+1))
        IF (IAND(PRINT,2048) .NE. 0) THEN
          WRITE(ICHECK,803)
          CALL PRINTS(G0,IPQ(NVIRQ+1),NVIRQ,ICHECK)
          WRITE(ICHECK,804)
          CALL MATOUT(SUND,NQ,NVIRQ,NQ,NVIRQ,ICHECK)
        END IF
C
        DO 370 ISH=1,NVIRQ
          II=IPQ(ISH+1)
          IORB=ISH+L0+NDOC
          IF (CM(1,IORB)+CM(2,IORB).EQ.A0) G0(II)=G0(II)-DAM1
          IF (CM(2,IORB).NE.A0) G0(II)=G0(II)+DAM1
 370    CONTINUE
        EIG(QALP+L0)=G0(IPQ(QALP-NDOC+1))
C
        IADD=(QALP-NDOC-1)*NQ
        DO 380 I=1,NQ
        SUQOLD(I)=SUQ(I)
 380    SUQ(I)=SUND(IADD+I)
        CALL OVERLP(SUQ,SUQOLD,S,NQ,NMAT,KKQ,SQ1)
CWA
        IF(SQ1.LT.0.0D0) THEN
          SQ1=-SQ1
          DO 378  I=1,NQ
 378      SUQOLD(I)=-SUQOLD(I)
        END IF
        SMIN=DMIN1(SMIN,SQ1)
CWA
        IADD=(RALP-NDOC-1)*NQ
        DO 381 I=1,NQ
 381    SUR0(I)=SUND(IADD+I)
C
C  DO THE SAME FOR SFR
C
        DO 390 I=1,NVIRQ
          DO 390 J=1,NVIRQ
            UNIT(I,J)=A0
            UNIT(J,I)=A0
            IF (I.EQ.J) UNIT(I,J)=1.0D+00
 390    CONTINUE
        CALL TRN1E(SUND,SFR,G0,SCRTCH,NN,NVIRQ,IPQ(NVIRQ+1),IPQ(NN+1)
     *  )
        IF (IAND(PRINT,2048) .NE. 0) THEN
          WRITE(ICHECK,806)
 806      FORMAT(/'  G0 FOR FR BEFORE SHIFT')
          CALL PRINTS(G0,IPQ(NVIRQ+1),NVIRQ,ICHECK)
        END IF
        DO 400 ISH=1,NVIRQ
          II=IPQ(ISH+1)
          IORB=ISH+L0+NDOC
          IF (CM(1,IORB)+CM(2,IORB).EQ.A0) G0(II)=G0(II)+DAM1
          IF (CM(2,IORB).NE.A0) G0(II)=G0(II)-DAM1
 400    CONTINUE
C
        CALL ERDUW(G0,UNIT,NVIRQ,1.0D-15,CM(1,L0+1+NDOC),1)
        CALL SUEIG(SUND,UNIT,SCRTCH,NN,NVIRQ,G0,CM(1,L0+1+NDOC),
     1  2,IPQ(NVIRQ+1))
        IF (IAND(PRINT,2048) .NE. 0) THEN
          WRITE(ICHECK,803)
          CALL PRINTS(G0,IPQ(NVIRQ+1),NVIRQ,ICHECK)
          WRITE(ICHECK,804)
          CALL MATOUT(SUND,NQ,NVIRQ,NQ,NVIRQ,ICHECK)
        END IF
C
        DO 410 ISH=1,NVIRQ
          II=IPQ(ISH+1)
          IORB=ISH+NDOC+L0
          IF (CM(1,IORB)+CM(2,IORB).EQ.A0) G0(II)=G0(II)-DAM1
          IF (CM(2,IORB).NE.A0) G0(II)=G0(II)+DAM1
          IF (ISH+NDOC .NE. QALP) EIG(IORB)=G0(II)
 410    CONTINUE
C
        L2=L0+NDOC+1
        CALL CHOSER(SUQ,EIG(L2),S,SUND,NQ,NVIRQ,KKQ,NMAT,QALP-NDOC,
     1  RALP-NDOC,PRINT)
        IXALP=RALP
CWA     ADDED OPTION TO CONVERGE ON GROUND STATE.
        IF(GSTATE) IXALP=QALP
CWA     ADDED OPTION FOR INPUT FROM TERMINAL.
        IF(TERMIN) THEN
             WRITE(ITERML,*) 'INPUT OPTION'
             READ(ITERML,'(I1)') ITMOPT
             IF(ITMOPT.EQ.1) THEN
               WRITE(ITERML,*) 'INPUT IXALP'
               READ(ITERML,'(I2)') IXALP
               WRITE(ITERML,*) 'IXALP=',IXALP
             ELSE IF(ITMOPT.EQ.2) THEN
               WRITE(ITERML,*) 'INPUT IAVRQ'
               READ(ITERML,'(I2)') IAVRQ
               WRITE(ITERML,*) 'IAVRQ=',IAVRQ
             ELSE IF(ITMOPT.EQ.3) THEN
               WRITE(ITERML,*) 'INPUT MXITR'
               READ(ITERML,'(I3)') MXITR
               MXITR=MXITR-1
               WRITE(ITERML,*) 'MXITR=',MXITR
             END IF
        END IF
        IADD=(IXALP-NDOC-1)*NQ
        DO 420 I=1,NQ
        SUROLD(I)=SUR(I)
 420    SUR(I)=SUND(IADD+I)
        CALL OVERLP(SUR,SUROLD,S,NQ,NMAT,KKQ,SQ2)
CWA
        IF(SQ2.LT.0.0D0) THEN
          SQ2=-SQ2
          DO 418  I=1,NQ
 418      SUROLD(I)=-SUROLD(I)
        END IF
        SMIN=DMIN1(SMIN,SQ2)
CWA
C
C
C  PUT NEW SUND INTO SU
C
        IADD=QOFFSQ+NDOC*NQ
        DO 430 I=1,NQ*NVIRQ
 430    SU(IADD+I)=SUND(I)
CWA
        IF(QRDAMP.AND.SMIN.GT.0.5D0) THEN
          WRITE(ICHECK,*) ' QRDAMP SECTION ENTERED '
          WGHT=DBLE(IAVRQ)/10.0D0
          DO 422  I=1,NQ
          SUQ(I)=SUQOLD(I)*(1.0D0-WGHT)+WGHT*SUQ(I)
 422      SUR(I)=SUROLD(I)*(1.0D0-WGHT)+WGHT*SUR(I)
          DO 423  J=1,NDOC
          DO 423  I=1,NQ
 423      SUC(I,J)=SUCOLD(I,J)*(1.0D0-WGHT)+WGHT*SUC(I,J)
          CALL WSCHMT(NQ,NDOC,QALP,RALP,IXALP,SUC,SUQ,SUR,SCRTCH,
     $                  SEX,SUND)
          K=0
          IADD=QOFFSQ
          DO 431  J=1,NQ
          DO 431  I=1,NQ
          K=K+1
 431      SU(IADD+K)=SUC(I,J)
          K=0
          DO 435  J=NDOC+1,NQ
          DO 435  I=1,NQ
          K=K+1
 435      SUND(K)=SUC(I,J)
        END IF
CWA
        IF (IAND(PRINT,2048) .NE. 0) THEN
          WRITE(ICHECK,807)
 807      FORMAT(/'  THE NEW VECTOR:')
          CALL MATOUT(SU(ISU+1),NN,NN,NN,NN,ICHECK)
          WRITE(ICHECK,808)
 808      FORMAT(/'  THE NEW SUQ')
          WRITE(ICHECK,810) (SUQ(III), III=1,NQ)
          WRITE(ICHECK,809)
 809      FORMAT(/'  THE NEW SUR')
          WRITE(ICHECK,810) (SUR(III), III=1,NQ)
 810      FORMAT(5F10.6)
        END IF
 58     L0=L0+NN
        KK=KK+IPQ(NN+1)
        ISU=ISU+NN*NN
 59   CONTINUE
      IF(NEXT.GT.MXITR) THEN
        IVECT=IVECTS
        GOTO 660
      END IF
      IF(KEYCNV.EQ.1) GO TO 660
      SUM=0.0D0
      DO 8811 I=1,NMAT
        SUM=SUM+(DC(I)+DQ(I)+DR(I)+ABS(DAB(I))-D1OLD(I))**2
 8811   D1OLD(I)=DC(I)+DQ(I)+DR(I)+ABS(DAB(I))
      SQDIF=DSQRT(SUM)/NMAT
      IF(EGBND.AND.NEXT.GE.10) THEN
         IF(ELAST.LT.EGMIN.OR.ELAST.GT.EGMAX) THEN
         WRITE(IOUT,*) 'RUN TERMINATED, ENERGY OUT OF GIVEN BOUNDS.'
         GO TO 660
         END IF
      END IF
      IF (.NOT. IPOPLE) EXTEST=.TRUE.
      IF (IPOPLE .AND. ICOUNT .GT. 1) EXTEST=.TRUE.
      IF (INFLG .LT. 0 .AND. NEXT .LT. 3) EXTEST=.FALSE.
      IF (SQDIF .LE. 10.**(-ISCF) .AND. EXTEST) KEYCNV=1
CC    IF ((SQDIF .LE. 1.0D-05 .AND. NEXT .GT.2).OR. IPOPLE) THEN
CC    DAMP=0.0
CC    DAMPSV=0.0
CC    END IF
      IF ((SQDIF.LE.EPS).AND.TWOCON) GOTO 660
      CALL SCHMIT(NSYM,NV,1,THRSH,NLAMDA,SU,S,SD)
      IF(IVECT.GT.0)CALL CPRINT(NEXT,NV,NLAMDA,ITYP,SU,EIG)
      GO TO 20
C
C FORM ORTHOGONAL ORBITALS FROM Q & R
C
 660  S12=0.0D+00
      DO 560 I=1,NQ
        DO 560 J=1,NQ
          VAL=SUQ(I)*SUR(J)
          I1=MAX(I,J)
          J1=MIN(I,J)
          IJ1=IPQ(I1)+J1+KKQ
 560  S12=S12+VAL*S(IJ1)
C
CWA
      IF(S12.LT.0.0D0) THEN
         S12=-S12
         DO 5051 II=1,NQ
 5051    SUR(II)=-SUR(II)
      END IF
CWA
      WRITE(ICHECK,1151)
      WRITE(IOUT,1151)
      DO 1153 II=1,NQ
        WRITE(IOUT,1152) SUQ(II),SUR(II)
 1153 WRITE(ICHECK,1152) SUQ(II),SUR(II)
 1152 FORMAT(8X,2F12.8)
 1151 FORMAT(//'  THE TWO OPEN SHELLS BEFORE ORTHOGONALIZING:'/
     1'             Q           R ')
CWA   WRITE OUT NONORTHOGONAL CONVERGED OPEN SHELL ORBITALS TO IT48.
      CALL SREW(IT48)
      IN48=5
      CALL SWRIT(IT48,IN48,1)
      CALL SWRIT(IT48,SUR,INTOWP(NQ))
      CALL SWRIT(IT48,SUR0,INTOWP(NQ))
      CALL SWRIT(IT48,SUQ,INTOWP(NQ))
C
C
CWA   FORM X AND Y ORBITALS FOR COMPUTATION OF OTHER ROOTS.
CWA
      XN1=A1/DSQRT(A2*(A1+S12))
      XN2=A1/DSQRT(A2*(A1-S12))
      DO 561 I=1,NQ
        VAL1=XN1*(SUQ(I)+SUR(I))
        VAL2=XN2*(SUQ(I)-SUR(I))
        SUQ(I)=(VAL1+VAL2)/DSQRT(2.0D0)
 561  SUR(I)=(VAL1-VAL2)/DSQRT(2.0D0)
C
CWA   FORM THE NEW OPEN SHELL DENSITY MATRICES. MULTIPLY WITH P AND Q
CWA   SUPERMATRICES.
C
      DO 4000 IJ=1,KKQ
        DR(IJ)=A0
        DQ(IJ)=A0
 4000 DAB(IJ)=A0
      IJ=KKQ
      DO 4010 I=1,NQ
        DO 4010 J=1,I
          IJ=IJ+1
          VAL=SUQ(I)*SUQ(J)*2.0D0
          IF (I.NE.J) VAL=VAL*2.0D+00
          DQ(IJ)=VAL
          VAL=(SUQ(I)*SUR(J)+SUQ(J)*SUR(I))
          IF (I.NE.J) VAL=VAL*2.0D+00
          DAB(IJ)=VAL
          VAL=SUR(I)*SUR(J)*2.0D0
          IF (I.NE.J) VAL=VAL*2.0D+00
 4010 DR(IJ)=VAL
      DO 4020 IJ2=IJ+1,NMAT
        DQ(IJ2)=A0
        DR(IJ2)=A0
 4020 DAB(IJ2)=A0
      CALL CONTR3 (BUFFER,IBUFFR,DC,DQ,DR,DAB,DCP,DQP,DRP,DQQ,DRQ,DQRP,
     1NMAT)
C
CWA   FORM THE 3X3 HAMILTONIAN MATRIX AND DIAGONALIZE.
C
      H11=REPNUC
      H22=REPNUC
      H33=REPNUC
      H21=0.0D0
      H31=0.0D0
      H32=0.0D0
      DO 4030  I=1,NMAT
      H22=H22+(DQ(I)+DR(I))*(H(I)+DCP(I))/2.0D0
      H22=H22+DC(I)*(H(I)+DCP(I)/2.0D0)+DQ(I)*(DRP(I)+DRQ(I))/4.0D0
      H31=H31+DRQ(I)*DQ(I)/2.0D0
      H11=H11+(DQ(I)+DC(I))*(H(I)+0.50D0*(DQP(I)+DCP(I)))
      H33=H33+(DR(I)+DC(I))*(H(I)+0.50D0*(DRP(I)+DCP(I)))
      H21=H21+DAB(I)*(H(I)+DQP(I)+DCP(I))/DSQRT(2.0D0)
 4030 H32=H32+DAB(I)*(H(I)+DRP(I)+DCP(I))/DSQRT(2.0D0)
      H22=H22+H31
      H3CFG(1)=H11
      H3CFG(2)=H21
      H3CFG(3)=H22
      H3CFG(4)=H31
      H3CFG(5)=H32
      H3CFG(6)=H33
      WRITE(IOUT,4055) '   3 CONFIGURATION H MATRIX    '
      WRITE(IOUT,4060) H11
      WRITE(IOUT,4060) H21,H22
      WRITE(IOUT,4060) H31,H32,H33
      CALL RSP(3,3,6,H3CFG,W3CFG,1,Z3CFG,FV1CFG,FV2CFG)
      WRITE(IOUT,4055) '   3 CONFIGURATION MCSCF ROOTS '
      WRITE(IOUT,4060) (W3CFG(I),I=1,3)
      WRITE(IOUT,4055) '   3 CONFIGURATION EIGENVECTORS'
      DO 4065  I=1,3
 4065 WRITE(IOUT,4060) (Z3CFG(I,J),J=1,3)
 4055 FORMAT(//,A31,/)
 4060 FORMAT(3(5X,F16.10))
C
CWA   FORM THE U AND V TCSCF ORBITALS FROM THE X AND Y ORBITALS
C     AND WRITE THEM OUT FOR DERIVATIVE CALCULATIONS.
C
      DO 4050  I=1,NQ
      VAL1=SUQ(I)+SUR(I)
      VAL2=SUQ(I)-SUR(I)
      SUQ(I)=VAL1/DSQRT(2.0D0)
 4050 SUR(I)=VAL2/DSQRT(2.0D0)
C
C
      ALP=DSQRT(A2*(A1+S12*S12))
      CI1=(A1+S12)/ALP
      CI2=-(A1-S12)/ALP
C
CWA   CONSTRUCT THE DENSITY MATRICES FOR THE U AND V ORBITALS IN
CWA   ORDER TO CHECK THE VIRIAL THEOREM.
C
      DO 4080 IJ=1,KKQ
        DR(IJ)=A0
 4080   DQ(IJ)=A0
      IJ=KKQ
      DO 4090 I=1,NQ
        DO 4090 J=1,I
          IJ=IJ+1
          VAL=SUQ(I)*SUQ(J)*2.0D0
          IF (I.NE.J) VAL=VAL*2.0D+00
          DQ(IJ)=VAL
          VAL=SUR(I)*SUR(J)*2.0D0
          IF (I.NE.J) VAL=VAL*2.0D+00
 4090 DR(IJ)=VAL
      DO 4095 IJ2=IJ+1,NMAT
        DQ(IJ2)=A0
 4095   DR(IJ2)=A0
C
      CALL SREW(ITAP49)
      CALL SREAD(ITAP49,DAB,INTOWP(NMAT))
      OVLP=A0
      EKIN=A0
      DO 5000 I=1,NMAT
           DQ(I)=DC(I)+CI1*CI1*DQ(I)+CI2*CI2*DR(I)
           OVLP=OVLP+DQ(I)*S(I)
 5000 EKIN=EKIN+DQ(I)*DAB(I)
      EPOT=ELAST-EKIN
      VIRIAL=EPOT/ELAST
      OVLP=OVLP/ELEC

cets053193 cphf wants file31, so stick the density matrices in there
c          someday someone will have to make sure that these are really
c          the correct matrices to be using
      call rfile(31)
      call mk31(dc,dq,nsym,nlamda)
      call rclose(31,3)

C
CWA
C
      OCI1=CI1
      OCI2=CI2
C
      KLI=QOFF+QALP
      KLII=QOFF+RALP
      CM(2,KLI)=2*CI1*CI1
      CM(2,KLII)=2*CI2*CI2
C
      IF (IAND(PRINT,2048) .NE. 0) THEN
        WRITE(ICHECK,901)
 901    FORMAT(/'  THE OPEN SHELL BEFORE RE-ORTHOGONALIZING:')
        CALL VIRTUL(NLAMDA,ITYP,SU,CM,EIG)
      END IF
      IADD=QOFFSQ+(QALP-1)*NQ
      DO 562 I=1,NQ
 562  SU(IADD+I)=SUQ(I)
      IADD=QOFFSQ+(RALP-1)*NQ
      DO 563 I=1,NQ
 563  SU(IADD+I)=SUR(I)
      CALL SCHMIT(NSYM,NV,1,THRSH,NLAMDA,SU,S,SD)
      IADD=QOFFSQ+(QALP-1)*NQ
      DO 564 I=1,NQ
 564  SUQ(I)=SU(IADD+I)
      IADD=QOFFSQ+(RALP-1)*NQ
      DO 565 I=1,NQ
 565  SUR(I)=SU(I+IADD)
      IF (TWOCON) THEN
C     PRINT, ' IN TWOCON LOOP. KEYCIF=',KEYCIF,'  ISCFT=',ISCFT,' EPS=',
C    1 EPS,' KEYCNV=',KEYCNV
        KEYCIF=KEYCIF+1
        IF (FLOAT(ISCFT)/CUT.GT.FLOAT(ISCF)) THEN
          IVECT=IVECTS
          GO TO 61
        END IF
        IF (KEYCIF.GT.1) THEN
          KEYCIF=0
          ISCFT=ISCFT+1
          EPS=(10.0D+00)**(-FLOAT(ISCFT)/CUT)
          E1CIP=E1
          E2CIP=E2
          WRITE(ICHECK,*) '  I AM IN A TWOCON LOOP!'
          CALL SCHMIT (NSYM,NV,1,THRSH,NLAMDA,SU,S,SD)
          KEYCNV=0
          GO TO 1210
        ELSE
          GOTO 20
        END IF
      END IF
      GO TO 61
C60   WRITE (ICHECK,68)
 61   TWOCON=.TRUE.
      CALL OUTPTX(SU,ALPHA,BETA,NLAMDA,NORBS,NC,NO,ITYP,CM,IEIG,
     1ELAST,TWOCON,KLI,KLII,CI1,CI2,IALPHA,IBETA,ISUQ)
      TWOCON=.FALSE.
C     IF(ITPREP.EQ.0) GO TO 63
C     WRITE(ITPREP)E1,E2,ELAST,DE,DE1,KEYF,DEAVG,INEW,DEP,NEXT,
C    1(SF11(I),I=1,NMAT),(SF12(I),I=1,NMAT),(SF21(I),I=1,NMAT),
C    2(SF22(I),I=1,NMAT),DAMPSV
C     REWIND ITPREP
C     CALL SFILE(ITPREP)
C     CALL SREW(ITPREP)
C     WRITE (IOUT,62) ITPREP
C     IF(IFLAG3.GT.0) WRITE(ICHECK,62) ITPREP
C62   FORMAT (53H0ITERATION CONTINUATION DATA HAS BEEN WRITTEN ON UNIT,I
C    13)
 63   IF(IVECT.GT.0) THEN
        WRITE(ICHECK,64)
 64     FORMAT (1H1)
        CALL CPRINT(NEXT,NV,NLAMDA,ITYP,SU,EIG)
      END IF
      IF(IVECT.GE.0) THEN
        CALL VIRTUL(NLAMDA,ITYP,SU,CM,EIG)
      ELSE IF(IVECT.GT.-2) THEN
        CALL CPRINT(NEXT,NV,NLAMDA,ITYP,SU,EIG)
      END IF
      WRITE(IOUT,800) CI1,CI2
 800  FORMAT(//2X,' CI COEFFICIENTS:',21X,2F18.8/)
 801  FORMAT(2X,'ORBITAL OCCUPANCIES FOR GVB ORBITALS:',2F18.8//)
      IF (TWOCON)WRITE(IOUT,801) 2*CI1*CI1,2*CI2*CI2
      WRITE(IOUT,71) E1,E2,ELAST,EKIN,EPOT,VIRIAL,OVLP
      IF(KEYCNV.NE.1) WRITE (IOUT,68)
      IF(IFLAG3.GT.0) THEN
        WRITE(ICHECK,800) CI1,CI2
        IF (TWOCON) WRITE(ICHECK,801) 2*CI1*CI1, 2*CI2*CI2
        WRITE(ICHECK,71) E1,E2,ELAST,EKIN,EPOT,VIRIAL,OVLP
        IF(KEYCNV.NE.1) WRITE (ICHECK,68)
      END IF
CWA
CWA
C
C *********  THIS DOES THE ORBITAL ROTATION FOR A CI GRADIENT *******
C
      irot = 1
      CALL LOCATE(IR,'# TFOCK ##',IERROR)
Crawdad.122192
      IF (IERROR.EQ.0)  then
         READ(IR,5005) CALTYP,CITYP,DERTYP
 5005    FORMAT(A6,4X,A6,4X,A6)
	 if(cityp.eq.'SCF   '.or.dertyp.eq.'SECOND') irot = 0
      else
	 dertyp = 'FIRST '
	 cityp = 'SCF   '

	 errcod = frdc('WFN',cityp)
	 errcod = frdc('DERTYPE',dertyp)

	 if(dertyp.ne.'FIRST '.and.dertyp.ne.'NONE  ') irot=0
         if(cityp.eq.'SCF   ') irot=0

      endif
C     CITYP = ' '
C     WRITE(*,*) ' CITYPE ',CITYP
Crawdad      IF (CITYP.NE.'CI    '.AND.CITYP.NE.'GVBCI ') GOTO 5012
      if(cityp.eq.'SCF   '.or.irot.eq.0) goto 5012
      CALL CONTR2(BUFFER,IBUFFR,DQ,DR,DQP,DRP,NMAT,TWOCON)
      DO 5010 II=1,NMAT
 5010 SFR(II)=H(II)+DQP(II)
      KK=0
      ISU=0
      L0=0
C
      DO 5020 L=1,NSYM
        NN=NLAMDA(L)
        IF (NN .EQ. 0) GOTO 5020
        CALL TRITRN(NN,ISU,KK,SFC,SFR,SU,SD)
        IJ=0
        DO 5030 IOR=1,NN
          CIP=CM(1,L0+IOR)+CM(2,L0+IOR)
          DO 5030 JOR=1,IOR
            IJ=IJ+1
            IF (CIP .NE. CM(1,L0+JOR)+CM(2,L0+JOR)) SFC(IJ)=0.0D+00
 5030   CONTINUE
C
        WRITE(ICHECK,*) '  FC BEFORE:'
        CALL PRINTS(SFC,NN*(NN+1)/2,NN,ICHECK)
CWA
        IRDRWA=0
CWA
        CALL ERDUW(SFC,SU(ISU+1),NN,EPSLON,CM(1,L0+1),IRDRWA)
        CALL PRINTS(SFC,NN*(NN+1)/2,NN,ICHECK)
        DO 5040 II=1,NN
          IIJJ=II*(II+1)/2
 5040   EIG(II+L0)=SFC(IIJJ)
        L0=L0+NN
        KK=KK+IPQ(NN+1)
        ISU=ISU+NN*NN
 5020 CONTINUE
      WRITE(IOUT,5045)
 5045 FORMAT(/'  THE VECTOR HAS BEEN ROTATED FOR THE CI GRADIENT.'/)
      CALL OUTPTX(SU,ALPHA,BETA,NLAMDA,NORBS,NC,NO,ITYP,CM,IEIG,
     1ELAST,.TRUE.,KLI,KLII,CI1,CI2,IALPHA,IBETA,ISUQ)
      CALL VIRTUL(NLAMDA,ITYP,SU,CM,EIG)
5012  CONTINUE
CWA
CWA
C
C     ***** THESE ADDED STATEMENTS ARE FOR OPEN-SHELL DERIVATIVE PROGRAM
C     *****                            Y. OSAMURA
C
      IF(IOPEN.EQ.0) GO TO 600
      DO 570 IJ=1,KKQ
        DR(IJ)=A0
        DQ(IJ)=A0
 570  DAB(IJ)=A0
      IJ=KKQ
      DO 571 I=1,NQ
        DO 571 J=1,I
          IJ=IJ+1
          VAL=SUQ(I)*SUQ(J)
          IF (I.NE.J) VAL=VAL*2.0D+00
          DQ(IJ)=VAL
          VAL=SUQ(I)*SUR(J)+SUQ(J)*SUR(I)
          IF (I.NE.J) VAL=VAL*2.0D+00
          DAB(IJ)=VAL
          VAL=SUR(I)*SUR(J)
          IF (I.NE.J) VAL=VAL*2.0D+00
 571  DR(IJ)=VAL
      DO 572 IJ2=IJ+1,NMAT
        DQ(IJ2)=A0
        DR(IJ2)=A0
 572  DAB(IJ2)=A0
      CALL DMAT1(NLAMDA,CM,SU,1,DC,DQ,IOPEN,SQDIF,NEXT,ALL,ICOUNT)
      CALL CONTR3(BUFFER,IBUFFR,DC,DQ,DR,DAB,DCP,DQP,DRP,DQQ,DRQ,
     1DQRP,NMAT)
C
      DO 580 IJ=1,NMAT
        SFC(IJ)=H(IJ)+DCP(IJ)+A2*CI1*CI1*DQP(IJ)+A2*CI2*CI2*DRP(IJ)
        SFQ(IJ)=CI1*CI1*H(IJ)+CI1*CI1*DCP(IJ)+
     1  CI1*CI1*(DQP(IJ)+DQQ(IJ))+A2*CI1*CI2*DRQ(IJ)
        SFR(IJ)=CI2*CI2*H(IJ)+CI2*CI2*DCP(IJ)+
     1  CI2*CI2*(DRP(IJ)+DRQ(IJ))+A2*CI1*CI2*DQQ(IJ)
 580  CONTINUE
      KK=0
      ISU=0
      CALL SREW(ITAP49)
      CALL SWRIT(ITAP49,SU,INTOWP(MXCOEF))
      CALL SWRIT(ITAP49,EIG,INTOWP(NTOTAL))
      DO 559 L=1,NSYM
        NN=NLAMDA(L)
        NDET=NN*(NN+1)/2
 851    FORMAT(/'  G0 MATRIX FOR SYMMETRY',I5)
C
CC    CALL TRITRN(NN,ISU,KK,G0,H,SU,SD)
CC    CALL PRINT0(G0,NDET,NN)
CC    CALL TRITRN(NN,ISU,KK,G0,DCP,SU,SD)
CC    CALL PRINT0(G0,NDET,NN)
CC    CALL TRITRN(NN,ISU,KK,G0,DQP,SU,SD)
CC    CALL PRINT0(G0,NDET,NN)
CC    CALL TRITRN(NN,ISU,KK,G0,DQQ,SU,SD)
CC    CALL PRINT0(G0,NDET,NN)
CC    CALL TRITRN(NN,ISU,KK,G0,DRP,SU,SD)
CC    CALL PRINT0(G0,NDET,NN)
CC    CALL TRITRN(NN,ISU,KK,G0,DRQ,SU,SD)
CC    CALL PRINT0(G0,NDET,NN)
C
        CALL TRITRN(NN,ISU,KK,G0,SFC,SU,SD)
        CALL SWRIT(ITAP49,G0,INTOWP(NDET))
CCC   WRITE(ICHECK,851) L
CCC   CALL PRINT0(G0,NDET,NN)
C
        CALL TRITRN(NN,ISU,KK,G0,SFQ,SU,SD)
        CALL SWRIT(ITAP49,G0,INTOWP(NDET))
CCC   WRITE(ICHECK,851) L
CCC   CALL PRINT0(G0,NDET,NN)
C
        CALL TRITRN(NN,ISU,KK,G0,SFR,SU,SD)
        CALL SWRIT(ITAP49,G0,INTOWP(NDET))
CCC   WRITE(ICHECK,851) L
CCC   CALL PRINT0(G0,NDET,NN)
C
        KK=KK+NDET
        ISU=ISU+NN*NN
  559 CONTINUE
      CALL SREW(ITAP49)
C
  600 CONTINUE
C
C     ... END OF INSERT CARDS FOR OPEN-SHELL DERIVATIVE ...
C
 67   RETURN
 68   FORMAT (30H0CALCULATION HAS NOT CONVERGED)
 69   FORMAT (9H1P-MATRIX/(7G18.8))
 70   FORMAT (9H0Q-MATRIX/(7G18.8))
 71   FORMAT(5X,21HONE-ELECTRON ENERGY =,F16.10/5X,
     1     21HTWO-ELECTRON ENERGY =,F16.10/5X,
     2     14HTOTAL ENERGY =,F23.10/5X,
     3     16HKINETIC ENERGY =,F21.10/5X,
     4  18HPOTENTIAL ENERGY =,F19.10/5X,16HVIRIAL THEOREM =,F21.10/5X,
     5  19HWAVEFUNCTION NORM =,F18.10)
 72   FORMAT (1X,I5,5X,G19.11,2(2X,E14.5),2X,F14.10,2(3X,G19.11))
 73   FORMAT (25H0CLOSED-SHELL FOCK MATRIX/(7G18.8))
 74   FORMAT (25H0  OPEN-SHELL FOCK MATRIX/(7G18.8))
 75   FORMAT (19H0     TOTAL DENSITY/(7G18.8))
 76   FORMAT (19H0OPEN-SHELL DENSITY/(7G18.8))
      END
