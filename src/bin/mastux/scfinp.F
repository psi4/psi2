      SUBROUTINE SCFINP(EIG,OCC,ESO,UAS,EAO,EE,CHGS,XX)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS),EE(NBFAO*NBFAO)
      DIMENSION ESO(NBFSO,NBFSO),UAS(NBFAO,NBFSO),EAO(NBFAO,NBFSO)
      DIMENSION CHGS(NATOM),XX(3,NATOM)
      DIMENSION A30(200)
      DIMENSION NLAMDA(10),NCLOSD(10),NOPEN(10),OCT(10)
      CHARACTER*8 SCFTYP,CITYP,DERTYP
      COMMON/BASIS/NBASIS,NTRI,NST,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/COUPL/ALPC(15),BETC(15),ALPT(15),BETT(15)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FLAGS/MCONST,MPOINT,NCALCS,MXCOEF
      COMMON/FUNCS/NTYPES,NATOM,N3N
      COMMON/SIGNS/IPQ(256),IPRNT
      COMMON/TEMPS/I30(400)
      COMMON/TYPES/SCFTYP,CITYP,DERTYP
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      EQUIVALENCE (I30,A30)
      DATA A00,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' AO-SO MATRIX'/)
    2 FORMAT(//,2X,' ENUC = ',F20.10/
     1          2X,' ESCF = ',F20.10/)
    3 FORMAT(//,2X,' NATOM IS ',I5)
    4 FORMAT(2X,I5,4F20.10,5X,2I5)
    5 FORMAT(//,2X,' ESO MATRIX'/)
    6 FORMAT(//,2X,' EAO MATRIX'/)
C
      ITAP30=30
      JUNK=101+MCONST
      CALL WREADW(ITAP30,I30,MPOINT,JUNK,JUNK)
C
C   READ IN NUCLEAR CHARGE
      CALL WREADW(ITAP30,CHGS,NATOM*2,I30(1),JUNK)
C
C   READ IN AO-SO MATRIX
      CALL WREADW(ITAP30,UAS,NBFAO*NBFSO*2,I30(29),JUNK)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL MATOUT(UAS,NBFAO,NBFSO,NBFAO,NBFSO,6)
C
C   READ IN GEOMETRY
  201 CONTINUE
      JUNK=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,JUNK,JUNK)
      CALL WREADW(ITAP30,I30,60,LOCCAL,LOCCAL)
      CALL WREADW(ITAP30,I30,20,LOCCAL,JUNK)
      LOCVEC=I30(1)
      LOCCAL=LOCCAL+20
      CALL WREADW(ITAP30,XX,NATOM*6,LOCCAL,LOCCAL)
C
C   READ IN SCF ENERGY
      CALL WREADW(ITAP30,I30,20,LOCCAL,LOCCAL)
      ENUC=A30(1)
      ESCF=A30(2)
      IF(IPRNT.GE.2)
     *WRITE(6,2) ENUC,ESCF
C
      IF(IPRNT.LE.3) GO TO 202
      WRITE(6,3) NATOM
      DO 101 I=1,NATOM
  101 WRITE(6,4) I,XX(1,I),XX(2,I),XX(3,I),CHGS(I)
C
C   READ IN SO-MO EIGENVECTORS
  202 CONTINUE
      CALL WREADW(ITAP30,EE,MXCOEF*2,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,EIG,NBFSO*2,LOCVEC,LOCVEC)
      LOCVEC=LOCVEC+NSYM
      CALL WREADW(ITAP30,NLAMDA,NSYM,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,NCLOSD,NSYM,LOCVEC,LOCVEC)
      WRITE(3,28) (NLAMDA(I),I=1,NSYM)
      IF(IPRNT.GT.2)
     *WRITE(6,28) (NLAMDA(I),I=1,NSYM)
   28 FORMAT(2X,' NLAMDA = ',10I5/)
      WRITE(3,29) (NCLOSD(I),I=1,NSYM)
      IF(IPRNT.GT.2)
     *WRITE(6,29) (NCLOSD(I),I=1,NSYM)
   29 FORMAT(2X,' NCLOSD = ',10I5/)
C
C   READ IN COUPLING CONSTANTS FOR OPEN SHELLS
      CALL ZERO(ALPT,15)
      CALL ZERO(BETT,15)
      KOPEN=IABS(IOPEN)
      WRITE(3,30) IOPEN,KOPEN
      IF(IPRNT.GT.2)
     *WRITE(6,30) IOPEN,KOPEN
   30 FORMAT(2X,' IOPEN = ',I5,' KOPEN = ',I5/)
      IF(IOPEN.NE.0) THEN
      CALL WREADW(ITAP30,NOPEN,NSYM,LOCVEC,LOCVEC)
      WRITE(3,31) (NOPEN(I),I=1,NSYM)
      IF(IPRNT.GT.2)
     *WRITE(6,31) (NOPEN(I),I=1,NSYM)
   31 FORMAT(2X,' NOPEN = ',10I5/)
      CALL WREADW(ITAP30,ALPT,KOPEN*2,LOCVEC,LOCVEC)
      WRITE(3,32) (ALPT(I),I=1,KOPEN)
      IF(IPRNT.GT.2)
     *WRITE(6,32) (ALPT(I),I=1,KOPEN)
   32 FORMAT(2X,' ALPT = ',10F10.5/)
      CALL WREADW(ITAP30,BETT,KOPEN*2,LOCVEC,LOCVEC)
      WRITE(3,33) (BETT(I),I=1,KOPEN)
      IF(IPRNT.GT.2)
     *WRITE(6,33) (BETT(I),I=1,KOPEN)
   33 FORMAT(2X,' BETT = ',10F10.5/)
      END IF
      IF(SCFTYP.NE.'TCSCF   ') GO TO 203
      IF(IOPEN.GE.0) GO TO 203
      OCT(1)=TWO/(ONE-ALPT(1))
      OCT(2)=TWO/(ONE-ALPT(3))
C
C   FORM OCCUPATION VECTOR
  203 CONTINUE
      CALL ZERO(OCC,NBASIS)
      ITC=0
      I=0
      DO 107 ISM=1,NSYM
      DO 104 J=I+1,I+NCLOSD(ISM)
      OCC(J)=TWO
  104 CONTINUE
      K=I+NCLOSD(ISM)
      IF(SCFTYP.EQ.'TCSCF   '.AND.NOPEN(ISM).NE.0) GO TO 204
      IF(IOPEN.EQ.0) GO TO 206
      DO 105 J=K+1,K+NOPEN(ISM)
      OCC(J)=ONE
  105 CONTINUE
      GO TO 206
  204 CONTINUE
      DO 106 J=K+1,K+NOPEN(ISM)
      IF(IOPEN.GT.0) GO TO 205
      ITC=ITC+1
      OCC(J)=OCT(ITC)
      GO TO 106
  205 OCC(J)=ONE
  106 CONTINUE
  206 CONTINUE
      I=I+NLAMDA(ISM)
  107 CONTINUE
C
C   FORM SO-MO EIGENVECTOR MATRIX
      CALL ZERO(ESO,NBFSO*NBFSO)
      I=0
      J=0
      DO 115 ISYM=1,NSYM
      N=NLAMDA(ISYM)
      DO 114 K=J+1,J+N
      DO 113 L=J+1,J+N
      I=I+1
      ESO(L,K)=EE(I)
  113 CONTINUE
  114 CONTINUE
      J=J+N
  115 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 207
      WRITE(6,5)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBFSO,NBASIS,NBASIS,6)
C
C   TRANSFORM EIGENVECTORS FROM SO TO AO BASIS
  207 CONTINUE
      DO 117 I=1,NBFAO
      DO 117 J=1,NBASIS
      VALU=A00
      DO 116 K=1,NBFSO
      VALU=VALU+UAS(I,K)*ESO(K,J)
  116 CONTINUE
      EAO(I,J)=VALU
  117 CONTINUE
      IF(IPRNT.LE.3) GO TO 208
      WRITE(6,6)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBFSO,NBFAO,NBFSO,6)
  208 CONTINUE
C
      RETURN
      END
