      SUBROUTINE CONVEF(NEG,CNVGRD,TVEC)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION TVEC(1)
c     DIMENSION TVEC(1),IRESLT(3)
      character*3 ireslt
      LOGICAL PRNT,NRFLAG,DUMP,CNVGRD,stre
      common/astre/stre(50)
      COMMON/IO/IN,IOUT
c     COMMON/PHYCON/TOANG,PHYCON(29)
      COMMON/GRDNT/ENERGY,F(50),FRCNST(1275),NVAR,IGETFC
      COMMON/OPTEF/
     $             ES,DMAX,DD,CONVF,CNVFMX,CONVX,CNVXMX,
     $             EIGMAX,EIGMIN,vmode(50),
     $             X(50),XNAME(50),OLDF(50),D(50),HESS(50,50),
     $             IC(50),MODE,NSTEP,MXSTEP,IHESS,IS,
     $             NEGREQ,IUPDAT,
     $             MXHESS,PRNT,NRFLAG,DUMP,IDUM
c     COMMON/ZMAT/IANZ(50),IZ(50,4),BL(50),ALPHA(50),BETA(50),
c    $            LBL(50),LALPHA(50),LBETA(50),NZ,NVARRD
C
c     DATA IOZMAT/507/,LZMAT/351/
      data toang/0.52917706d0/, todeg/57.296d0/
C
C  PRINT OUT CURRENT X, CURRENT GRADIENTS, DISPLACEMENTS
C  AND NEWX
C
      WRITE(IOUT,1000)
      WRITE(IOUT,1010)
      DO 20 I=1,NVAR
      TVEC(I)=X(I)+D(I)
      if(stre(i)) then
          temp = tvec(i) * toang
      else
          temp = tvec(i) * todeg
      endif
      WRITE(IOUT,1020) I,X(I),F(I),D(I),TVEC(I),temp
   20 CONTINUE
C
C  FIND MAXIMUM AND RMS GRADIENTS AND DISPLACEMENTS
C
      FMAX=DABS(F(1))
      DXMAX=DABS(D(1))
      IF(NVAR.GT.1) THEN
      DO 30 I=2,NVAR
      IF(DABS(F(I)).GT.FMAX) FMAX=DABS(F(I))
      IF(DABS(D(I)).GT.DXMAX) DXMAX=DABS(D(I))
   30 CONTINUE
      ENDIF
C
      FSQ=DVTV(F,F,NVAR)
      FRMS=DSQRT(FSQ/NVAR)
      DXRMS=DSQRT(DD*DD/NVAR)
C
C  CHECK CONVERGENCE
C
      WRITE(IOUT,1030)
      CALL CONVGD(FMAX,CNVFMX,IRESLT)
      WRITE(IOUT,1032) FMAX,CNVFMX,IRESLT
      CALL CONVGD(FRMS,CONVF,IRESLT)
      WRITE(IOUT,1034) FRMS,CONVF,IRESLT
      CALL CONVGD(DXMAX,CNVXMX,IRESLT)
      WRITE(IOUT,1036) DXMAX,CNVXMX,IRESLT
      CALL CONVGD(DXRMS,CONVX,IRESLT)
      WRITE(IOUT,1038) DXRMS,CONVX,IRESLT
C
C  SET CONVERGENCE FLAG AND TEST FOR MAXIMUM ITERATIONS
C  EXCEEDED
C
      IF(FMAX.GT.CNVFMX.OR.FRMS.GT.CONVF.OR.
     $   DXMAX.GT.CNVXMX.OR.DXRMS.GT.CONVX) THEN
      CNVGRD=.FALSE.
c     IF(NSTEP.GE.MXSTEP) THEN
c     WRITE(IOUT,1040)
c     CALL ILSW(1,25,0)
c     CALL ILSW(1,27,1)
c     CNVGRD=.TRUE.
c     ENDIF
      RETURN
      ENDIF
C
C  CONVERGED. PRINT FINAL SOLUTION
C
      CNVGRD=.TRUE.
      WRITE(IOUT,1050)
C
C  TEST IF THE HESSIAN HAS THE REQUIRED NUMBER OF
C  NEGATIVE EIGENVALUES
C
      IF(NEG.NE.NEGREQ) WRITE(IOUT,1060)
C
C  PRINT FINAL PARAMETERS
C
c     CALL TREAD(IOZMAT,IANZ,LZMAT,1,LZMAT,1,0)
c     DO 40 I=1,NVAR
c     IC(I)=99
c  40 CONTINUE
C
c     CALL PRMTBL(1,XNAME,X,IC,F,NVAR,LBL,NZ,TOANG)
C
      RETURN
C
1000  FORMAT(//'CURRENT PARAMETER VALUES (INTERNAL COORDINATES)',
     $       17x,'Angstrom')
C
1010  FORMAT(3X,'I',8X,'X',9X,'GRADIENT',4X,
     $       'DISPLACEMENT',7X,'NEWX',5x,'or degrees')
C
1020  FORMAT(I4,4(2X,F10.6,2X),3x,f9.4)
C
1030  FORMAT(//8X,4HITEM,15X,5HVALUE,5X,9HTHRESHOLD,2X,
     $       10HCONVERGED?)
C
1032  FORMAT(/14H MAXIMUM FORCE,12X,F8.6,5X,F8.6,5X,a3)
C
1034  FORMAT(14H RMS     FORCE,12X,F8.6,5X,F8.6,5X,a3)
C
1036  FORMAT(21H MAXIMUM DISPLACEMENT,5X,F8.6,5X,F8.6,5X,a3)
C
1038  FORMAT(21H RMS     DISPLACEMENT,5X,F8.6,5X,F8.6,5X,a3)
C
1040  FORMAT(//' ***********************************'/
     $         ' **     OPTIMIZATION STOPPED      **'/
     $         ' **  MAXIMUM ITERATIONS EXCEEDED  **'/
     $         ' ***********************************'//)
C
1050  FORMAT(//' *************************************************'/
     $         ' **  CONVERGENCE CRITERIA APPARENTLY SATISFIED  **'/
     $         ' *************************************************'//)
C
1060  FORMAT(//'|| WARNING: THE HESSIAN HAS THE WRONG NUMBER OF',
     $       ' NEGATIVE EIGENVALUES ||'/)
C
      END
