      SUBROUTINE OPTEFC(CORE)
      IMPLICIT REAL*8(A-H,O-Z)
C
C
C  **************************************************************
C  *                                                            *
C  *  DRIVER FOR EIGENVECTOR FOLLOWING TRANSITION STATE SEARCH  *
C  *  BASED ON "ON FINDING TRANSITION STATES" BY CERJAN AND     *
C  *  MILLER (J.CHEM.PHYS. 75 (1981) 2800);   "WALKING ON       *
C  *  POTENTIAL ENERGY SURFACES" BY SIMONS, JORGENSON, TAYLOR   *
C  *  AND OZMENT (J.PHYS.CHEM. 87 (1983) 2745)  AND  "SEARCH    *
C  *  FOR STATIONARY POINTS ON SURFACES" BY BANERJEE, ADAMS,    *
C  *  SIMONS AND SHEPARD (J.PHYS.CHEM. 89 (1985) 52).           *
C  *                                                            *
C  *  ORIGINAL VAX CODE BY JON BAKER          JB MARCH 1985     *
C  *                                                            *
C  **************************************************************
C
C
C  OPTIONS          COMMON/IOP/
C
C  IOP(5)     NATURE OF REQUIRED STATIONARY POINT
C             0    FIND A TS                            (DEFAULT)
C             1    FIND A MINIMUM
C
C  IOP(6)     MAXIMUM NUMBER OF STEPS ALLOWED
C             0    MIN(40,NVAR+20)                      (DEFAULT)
C                  (WHERE NVAR = NUMBER OF VARIABLES)
C             N    N STEPS
C
C  IOP(7)     CONVERGENCE CRITERIA ON RMS GRADIENT
C             0    0.0003                               (DEFAULT)
C             N    0.001/N
C             NOTE: THE OTHER CONVERGENCE CRITERIA ARE
C             MAXIMUM GRADIENT = 1.5 * RMS GRADIENT
C             RMS DISPLACEMENT = 4.0 * RMS GRADIENT
C             MAX DISPLACEMENT = 1.5 * RMS DISPLACEMENT
C
C  IOP(8)     MAXIMUM STEPSIZE ALLOWED DURING OPTIMIZATION
C             0    DMAX = 0.3                           (DEFAULT)
C             N    DMAX = 0.01*N
C
C  IOP(10)    INPUT OF INITIAL SECOND DERIVATIVE MATRIX
C             ALL VALUES MUST BE IN ATOMIC UNITS
C             0    ESTIMATE ENTIRE HESSIAN NUMERICALLY     (TS DEFAULT)
C                  ESTIMATE DIAGONAL ELEMENTS ONLY        (MIN DEFAULT)
C             1    READ IN FULL FRCNST MATRIX (LOWER TRIANGLE)
C                  FORMAT (8F10.6)
C             2    READ IN SELECTED ELEMENTS OF FRCNST
C                  READ I,J,FRCNST(I,J)        2I3, F20.0
C             3    READ FRCNST MATRIX FROM THE CHECKPOINT FILE
C             4    CALCULATE HESSIAN ANALYTICALLY
C             5    READ CARTESIAN FORCE CONSTANTS FROM CHECKPOINT FILE
C
C  IOP(11)    HESSIAN RECALCULATION
C             0    UPDATE THE HESSIAN ONLY              (DEFAULT)
C             N    RECALCULATE THE HESSIAN (ANALYTICALLY IF
C                  POSSIBLE, ELSE NUMERICALLY) EVERY N POINTS
C             (OBS!  IF THIS OPTION IS INVOKED, RESTARTS FROM THE
C              CHECKPOINT FILE SHOULD NOT BE ATTEMPTED EXCEPT VIA A
C              NON-STANDARD ROUTE. EXCEPTION: ANALYTICAL DERIVATIVES
C              AT ALL POINTS VIA "CALCALL" CAN BE RESTARTED)
C
C  IOP(13)    TYPE OF HESSIAN UPDATE
C             0    POWELL UPDATE                        (DEFAULT)
C             1    BFGS UPDATE (USED IN CONJUNCTION WITH MIN)
C             2    BFGS UPDATE WITH SAFEGUARDS TO ENSURE RETENTION
C                  OF POSITIVE DEFINITENESS
C
C  IOP(16)    MAXIMUM ALLOWABLE MAGNITUDE OF HESSIAN EIGENVALUES
C             IF THIS MAGNITUDE IS EXCEEDED, THE EIGENVALUE IS REPLACED
C             0    EIGMAX = 25.0                        (DEFAULT)
C             N    EIGMAX = 0.1*N
C
C  IOP(17)    MINIMUM ALLOWABLE MAGNITUDE OF HESSIAN EIGENVALUES
C             SIMILAR TO IOP(16)
C             0    EIGMIN = 0.0001                      (DEFAULT)
C             N    EIGMIN = 1.0/N
C
C  IOP(19)    SEARCH SELECTION
C             0    P-RFO OR RFO STEP ONLY               (DEFAULT)
C             1    P-RFO OR RFO STEP FOR "WRONG" HESSIAN
C                  OTHERWISE NEWTON-RAPHSON
C
C  IOP(21)    EXPERT SWITCH
C             0    NORMAL MODE                          (DEFAULT)
C             1    EXPERT MODE
C                  CERTAIN CUTOFFS TO CONTROL OPTIMIZATION RELAXED
C
C  IOP(33)    PRINT OPTION
C             0    ON                                   (DEFAULT)
C             1    OFF  TURNS OFF EXTRA PRINTING
C             (DEFAULT OF "ON" BY POPULAR REQUEST)
C
C  IOP(34)    DUMP OPTION
C             0    OFF                                  (DEFAULT)
C             1    ON   TURNS ON DEBUG PRINTING
C
C  IOP(35)    RESTART OPTION
C             0    NORMAL OPTIMIZATION                  (DEFAULT)
C             1    FIRST POINT OF A RESTART
C                  RECOVER GEOMETRY ETC.. FROM CHECKPOINT FILE
C
C  IOP(36)    CHECKPOINT OPTION
C             0    CHECKPOINTING AS NORMAL              (DEFAULT)
C             1    SUPPRESS CHECKPOINTING
C
C  IOP(37)    D2E CLEANUP OPTION
C             0    NO SPECIAL ACTION TAKEN              (DEFAULT)
C             1    THIS IS THE LAST POINT AT WHICH ANALYTICAL
C                  DERIVATIVES ARE AVAILABLE; CLEAN UP THE RWF
C
C
C  MODE FOLLOWING:  MODE FOLLOWING IS TURNED ON VIA THE IC ARRAY, WHICH
C  IS INPUT WITH THE Z-MATRIX VARIABLES IN LINK 101. ADDING 4 TO THE IC
C  ENTRY FOR A PARTICULAR VARIABLE WILL CAUSE A TRANSITION STATE SEARCH
C  TO FOLLOW THE HESSIAN MODE WITH THE LARGEST MAGNITUDE COMPONENT FOR
C  THAT VARIABLE. ADDING 10 TO THE IC ENTRY FOR THE KTH VARIABLE WILL
C  FOLLOW THE KTH HESSIAN MODE. ONLY ONE IC ENTRY SHOULD BE MODIFIED IN
C  THIS WAY  I.E. ONLY ONE MODE SHOULD BE FOLLOWED AT A TIME.
C
C
      REAL*8 U(50,50),HESSC(50,50),EIGVAL(50),FX(50),TVEC(50),tvec2(50)
      LOGICAL PRNT,NRFLAG,DUMP,CNVGRD,last
      COMMON/IOP/IOP(50)
      COMMON/IO/IN,IOUT
      COMMON/GRDNT/ENERGY,F(50),FRCNST(1275),NVAR,IGETFC
      COMMON/OPTEF/
     $             ES,DMAX,DD,CONVF,CNVFMX,CONVX,CNVXMX,
     $             EIGMAX,EIGMIN,vmode(50),
     $             X(50),XNAME(50),OLDF(50),D(50),HESS(50,50),
     $             IC(50),MODE,NSTEP,MXSTEP,IHESS,IS,
     $             NEGREQ,IUPDAT,
     $             MXHESS,PRNT,NRFLAG,DUMP,IDUM
      EQUIVALENCE (FX(1),TVEC(1))
C
      DATA ZERO/0.0D0/, ONE/1.0D0/
C
C
      WRITE(IOUT,1000)
C
C  READ IN DATA AND INITIALIZE OPTIMIZATION
C
      IF(IOP(5).EQ.0) WRITE(IOUT,1005)
      IF(IOP(5).NE.0) WRITE(IOUT,1006)
c     WRITE(IOUT,1010)
      CALL INITEF(CORE)
c     CALL EXITEF(0)
C
      CALL DNEGV(F,NVAR)
C
      IF(nstep.gt.0 .and. iop(13).ge.0) CALL UPDATE(EIGVAL,TVEC)
C
C  HESSIAN READY FOR USE
C  START OPTIMIZATION PROPER
C
      NSTEP=NSTEP+1
      WRITE(IOUT,1025) NSTEP
c     IHESS=IHESS+1
C
      call cntrct(hessc,hess,nvar)
      call rsp(50,nvar,2500,hessc,eigval,1,u,tvec,tvec2)
C
C  PRINT THE HESSIAN, ITS EIGENVECTORS AND EIGENVALUES IF
C  REQUESTED. VECTORS ARE IN U, EIGENVALUES IN EIGVAL
C
      IF(PRNT) THEN
        IF(DUMP) WRITE(IOUT,1030)
        IF(DUMP) CALL DMPRNT(HESS,NVAR,IOUT)
        WRITE(IOUT,1035)
        last = .false.
        nstar = 1
   10   nend = nstar + 5
        if(nend.ge.nvar) then
           last = .true.
           nend = nvar
        endif
        write(iout,1045) (eigval(l),l=nstar,nend)
        write(iout,1045)
        do 997 i=1,nvar
          write(iout,1045) (u(i,l),l=nstar,nend)
  997   continue
        write(iout,1045)
        nstar = nend + 1
        if(.not.last) go to 10
      ELSE
        WRITE(IOUT,1040)
        WRITE(IOUT,1045) (EIGVAL(L),L=1,NVAR)
      ENDIF
C
C  CHECK FOR MAXIMUM AND MINIMUM ALLOWED MAGNITUDES
C  FOR THE HESSIAN EIGENVALUES
C
      CALL MAGCHK(EIGVAL,NVAR)
C
C  CALCULATE NEG, THE NUMBER OF NEGATIVE EIGENVALUES
C
      CALL FNDNEG(EIGVAL,NEG,NVAR)
C
C  FORM THE FX VECTOR
C  (THE COMPONENT OF F ALONG THE LOCAL EIGENDIRECTIONS U)
C
      DO 20 I=1,NVAR
        FX(I)=DVTV(U(1,I),F,NVAR)
   20 CONTINUE
C
C  IF WE ARE IN THE "RIGHT" REGION OF THE ENERGY SURFACE
C  I.E. THE HESSIAN HAS THE REQUIRED NUMBER OF NEGATIVE EIGENVALUES
C  AND NRFLAG IS ON, TAKE THE NEWTON-RAPHSON STEP
C
      IF(NRFLAG.AND.NEG.EQ.NEGREQ) THEN
        WRITE(IOUT,1050)
        CALL FORMNR(U,EIGVAL,FX,D,NVAR)
      ELSE
C
C  TAKE THE P-RFO STEP FOR A TS SEARCH AND
C  THE SIMPLE RFO STEP FOR A MINIMUM SEARCH
C
        IF(NEG.EQ.NEGREQ.AND.NEGREQ.EQ.1) WRITE(IOUT,1055)
        IF(NEG.EQ.NEGREQ.AND.NEGREQ.EQ.0) WRITE(IOUT,1056)
        IF(NEG.NE.NEGREQ.AND.NEGREQ.EQ.1) WRITE(IOUT,1057)
        IF(NEG.NE.NEGREQ.AND.NEGREQ.EQ.0) WRITE(IOUT,1058)
        CALL FORMD(U,EIGVAL,FX,NVAR)
      ENDIF
C
C  WE NOW HAVE A NEW STEP IN D
C  CHECK THAT THE STEPSIZE DOES NOT EXCEED DMAX
C  IF SO, SCALE
C
      CALL CHECKD(D,DMAX,DD,SKAL,NVAR)
C
C  PREDICT THE CHANGE IN ENERGY
C
      CALL ESTIME(EIGVAL,FX,DD,SKAL,CHNGE,NVAR)
C
C  TEST FOR CONVERGENCE AND PRINT OUT CURRENT PARAMETER VALUES
C
      CALL CONVEF(NEG,CNVGRD,TVEC)
      WRITE(IOUT,1060) CHNGE
C
C
      IF(CNVGRD) THEN
        write(iout,1000)
        RETURN
      ENDIF
 
      write(iout,1000)
 
      RETURN
 
1000  FORMAT(/24('EF-'))
1005  FORMAT(//'EIGENVECTOR FOLLOWING TRANSITION STATE SEARCH')
1006  FORMAT(//'EIGENVECTOR FOLLOWING MINIMUM SEARCH')
1010  FORMAT(' INITIALIZATION PASS')
1015  FORMAT(//' NUMERICALLY ESTIMATING SECOND DERIVATIVES')
1020  FORMAT(' ITERATION ',I3,' VARIABLE ',I2)
1025  FORMAT(//'ITERATION ',I3)
1030  FORMAT(//' HESSIAN MATRIX')
1035  FORMAT('EIGENVECTORS AND EIGENVALUES'/)
1040  FORMAT(//'EIGENVALUES OF THE HESSIAN')
c1045  FORMAT(5X,6F12.6)
1045  FORMAT(6F12.6)
1050  FORMAT(' HESSIAN HAS REQUIRED LOCAL STRUCTURE'/
     $       ' TAKING NEWTON-RAPHSON STEP')
1055  FORMAT(' TS SEARCH. TAKING P-RFO STEP')
1056  FORMAT(' MINIMUM SEARCH. TAKING SIMPLE RFO STEP')
1057  FORMAT(' HESSIAN DOES NOT HAVE THE DESIRED LOCAL STRUCTURE'/
     $       ' TAKING P-RFO STEP')
1058  FORMAT(' HESSIAN DOES NOT HAVE THE DESIRED LOCAL STRUCTURE'/
     $       ' TAKING SIMPLE RFO STEP')
1060  FORMAT(' PREDICTED CHANGE IN ENERGY  ',F9.6)

      END
