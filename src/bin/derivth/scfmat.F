      SUBROUTINE SCFMAT(WAO,EIG,OCC,EAO,UAS,ESO,EE,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
cets030691
#include <error.h>
      integer ip, prcntr
      DIMENSION NLAMDA(10),NCLOSD(10),NOPEN(10),OCT(2)
      DIMENSION ALPT(15),BETT(15)
      DIMENSION I30(200),A30(100)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2,NTRI,NTRI2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COUPL/ALPA(5,5),BETA(5,5),ALPC(15),BETC(15)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/OPEN1/NUNIQ,LOPN(5),MOPN(5,5)
      COMMON/OPEN2/GOCC(10)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10),NSORB(10),NSTR(10),NEND(10),MOTYP(256)
      COMMON/TCSCF/SOCC1,SOCC2,SOCC12
      COMMON/TOLER/DLIM
      DIMENSION WAO(NBATRI)
      DIMENSION UAS(NBFAO,NBASIS),EIG(NBASIS),OCC(NBASIS)
      DIMENSION ESO(NBASIS,NBASIS),EAO(NBFAO,NBASIS)
      DIMENSION EE(NBFAO*NBFAO),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      EQUIVALENCE (I30,A30)
      DATA ZERO,QURT,HALF,ONE,TWO / 0.0D+00 , 0.25D+00 , 0.5D+00 ,
     1                              1.0D+00 , 2.0D+00  /
    1 FORMAT(//,2X,' UAS MATRIX'/)
    2 FORMAT(//,2X,' NOPEN = ',10I5/)
    3 FORMAT(//,2X,' ALPT = ',10F10.6/)
    4 FORMAT(//,2X,' BETT = ',10F10.6/)
    5 FORMAT(//,2X,' ESO MATRIX'/)
    6 FORMAT(//,2X,' EAO MATRIX'/)
    7 FORMAT(//,2X,' WAO MATRIX (MO BASIS)'/)
    8 FORMAT(//,2X,' WAO MATRIX (AO BASIS)'/)
    9 FORMAT(//,2X,' ALPA MATRIX'/)
   10 FORMAT(//,2X,' BETA MATRIX'/)
C
C   GET CONSTANTS FROM TAPE30
      ITAP30=30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
C
      IEND    = I30(1)
      MPOINT  = I30(2)
      MCONST  = I30(3)
      MCALCS  = I30(4)
      NCALCS  = I30(5)
      MXCOEF  = I30(42)
      IOPEN   = I30(43)
C
C   READ IN AO-SO MATRIX
      IPOS=101+MCONST
      CALL WREADW(ITAP30,I30,MPOINT,IPOS,JUNK)
      CALL WREADW(ITAP30,UAS,NBFAO*NBASIS*2,I30(29),JUNK)
cets030691      IF(IPRNT.LE.3) GO TO 201
      ip = prcntr('IS_ON DEBUG')
      if(ip.eq.1) then
        WRITE(6,1)
        CALL MATOUT(UAS,NBFAO,NBASIS,NBFAO,NBASIS,6)
      endif
C
c 201 CONTINUE
      IPOS=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,IPOS,JUNK)
      IPOS=LOCCAL+60
      CALL WREADW(ITAP30,I30,20,IPOS,JUNK)
      LOCVEC=I30(1)
C
C   READ IN SO-MO EIGENVECTORS
      CALL WREADW(ITAP30,EE,MXCOEF*2,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,EIG,NBASIS*2,LOCVEC,LOCVEC)
      LOCVEC=LOCVEC+NSYM
      CALL WREADW(ITAP30,NLAMDA,NSYM,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,NCLOSD,NSYM,LOCVEC,LOCVEC)
C
C   READ IN COUPLING CONSTANTS FOR OPEN SHELLS
      IF(IOPEN.NE.0) THEN
        KOPEN=IABS(IOPEN)
        CALL WREADW(ITAP30,NOPEN,NSYM,LOCVEC,LOCVEC)
        CALL WREADW(ITAP30,ALPT,KOPEN*2,LOCVEC,LOCVEC)
        CALL WREADW(ITAP30,BETT,KOPEN*2,LOCVEC,LOCVEC)
        ip = prcntr('IS_ON DEBUG')
        if(ip.eq.1) then
          WRITE(6,2) (NOPEN(I),I=1,NSYM)
          WRITE(6,3) (ALPT(I),I=1,KOPEN)
          WRITE(6,4) (BETT(I),I=1,KOPEN)
        endif
      END IF
C
C   READ IN COUPLING CONSTANTS FOR TCSCF
      IF(IOPEN.GE.0) GO TO 301
      COEF1=ONE-ALPT(1)
      COEF2=ONE-ALPT(3)
      OCT(1)=TWO/COEF1
      OCT(2)=TWO/COEF2
      SOCC1=COEF1*HALF
      SOCC2=COEF2*HALF
      SOCC12=-DSQRT(SOCC1*SOCC2)*TWO
C
C   FORM OCCUPATION VECTOR
  301 CONTINUE
      DO 101 I=1,NBASIS
  101 OCC(I)=ZERO
      ITC=0
      I=0
      DO 105 ISM=1,NSYM
      DO 103 J=I+1,I+NCLOSD(ISM)
      OCC(J)=TWO
  103 CONTINUE
      K=I+NCLOSD(ISM)
      IF(ISTYPE.EQ.5.AND.NOPEN(ISM).NE.0) GO TO 302
      IF(ISTYPE.EQ.6.AND.NOPEN(ISM).NE.0) GO TO 302
      IF(IOPEN.EQ.0) GO TO 303
      DO 104 J=K+1,K+NOPEN(ISM)
      OCC(J)=ONE
  104 CONTINUE
      GO TO 303
  302 CONTINUE
CWA
      DO 305 IWA=1,NOPEN(ISM)
      ITC=ITC+1
  305 OCC(K+IWA)=OCT(ITC)
  303 CONTINUE
      I=I+NLAMDA(ISM)
  105 CONTINUE
C
C   FORM SO-MO EIGENVECTOR MATRIX
      DO 106 I=1,NBASIS
      DO 106 J=1,NBASIS
      ESO(I,J)=ZERO
  106 CONTINUE
      I=0
      J=0
      DO 108 ISYM=1,NSYM
      N=NLAMDA(ISYM)
      DO 107 K=J+1,J+N
      DO 107 L=J+1,J+N
      I=I+1
      ESO(L,K)=EE(I)
  107 CONTINUE
      J=J+N
  108 CONTINUE
C
cets030691      IF(IPRNT.LE.3) GO TO 202
      ip = prcntr('IS_ON DEBUG')
      if(ip.eq.1) then
        WRITE(6,5)
        CALL EIGOUT(ESO,EIG,OCC,NBASIS,NBASIS,NBASIS,NBASIS,6)
      endif
C
C   TRANSFORM EIGENVECTORS FROM SO TO AO BASIS
  202 CONTINUE
      DO 110 I=1,NBFAO
      DO 110 J=1,NBASIS
      VALU=ZERO
      DO 109 K=1,NBASIS
      VALU=VALU+UAS(I,K)*ESO(K,J)
      if(dabs(uas(i,k)).gt.100.d0.or.dabs(eso(k,j)).gt.100.d0)
     .    write(6,*)'problems in uas-eso',uas(i,k),eso(k,j)
  109 CONTINUE
      EAO(I,J)=VALU
  110 CONTINUE
cets030691      IF(IPRNT.LE.3) GO TO 203
      ip = prcntr('IS_ON DEBUG')
      if(ip.eq.1) then
        WRITE(6,6)
        CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
      endif
C
C   READ IN THE LAGRANGIAN MATRIX
  203 CONTINUE
c12-1 CALL WREADW(ITAP30,EE,NBATR2,LOCVEC,JUNK)
      CALL WREADW(ITAP30,EE,NTRI2,LOCVEC,JUNK)
cets030691      IF(IPRNT.LE.3) GO TO 204
      ip = prcntr('IS_ON DEBUG')
      if(ip.eq.1) then
        WRITE(6,7)
        CALL PRINT(EE,NBASIS*NBASIS,NBASIS,6)
      endif
C
C   TRANSFORM THE LAGRANGIAN MATRIX FROM MO TO AO BASIS
  204 CONTINUE
      IJ=0
      DO 111 I=1,NBASIS
      DO 111 J=1,I
      IJ=IJ+1
      T(I,J)=EE(IJ)
      T(J,I)=EE(IJ)
  111 CONTINUE
      DO 113 I=1,NBASIS
      DO 113 JJ=1,NBFAO
      VALU=ZERO
      DO 112 J=1,NBASIS
      VALU=VALU+EAO(JJ,J)*T(I,J)
  112 CONTINUE
      U(I,JJ)=VALU
  113 CONTINUE
      IIJJ=0
      DO 115 II=1,NBFAO
      DO 115 JJ=1,II
      IIJJ=IIJJ+1
      VALU=ZERO
      DO 114 I=1,NBASIS
      VALU=VALU+EAO(II,I)*U(I,JJ)
  114 CONTINUE
      WAO(IIJJ)=VALU*TWO
  115 CONTINUE
cets030691      IF(IPRNT.LE.3) GO TO 205
      ip=prcntr('IS_ON DEBUG')
      if(ip.eq.1) then
        WRITE(6,8)
        CALL PRINT(WAO,NBATRI,NBFAO,6)
      endif
C
C   FORM THE COUPLING CONSTANT MATRICES
  205 CONTINUE
      NNP=IOFF(NTYPES+2)
      DO 116 I=1,NNP
      ALPC(I)=ZERO
      BETC(I)=ZERO
  116 CONTINUE
C
C   FOR CLOSED SHELL
      FOCC(1)=TWO
C
C   FOR OPEN-SHELL
      IF(ISTYPE.EQ.5.OR.ISTYPE.EQ.6) GO TO 206
      II=1
      IF(NUNIQ.EQ.0) GO TO 207
      DO 117 I=1,NUNIQ
      II=II+1
      FOCC(II)=GOCC(I)
  117 CONTINUE
      DO 118 I=1,NUNIQ
      II=I+1
      K=MOPN(I,1)
      DO 118 J=1,I
      JJ=J+1
      L=MOPN(J,1)
      IIJJ=IOFF(II)+JJ
      KL=IOFF(MAX0(K,L))+MIN0(K,L)
      ALPC(IIJJ)=ALPT(KL)
      BETC(IIJJ)=BETT(KL)
  118 CONTINUE
      GO TO 207
C
C FOR TCSCF-GR
  206 CONTINUE
      FOCC(2)=OCT(1)
      FOCC(3)=OCT(2)
      ALPC(3)=ONE-ONE/FOCC(2)
      ALPC(5)=ONE
      ALPC(6)=ONE-ONE/FOCC(3)
      BETC(3)=ONE
      BETC(5)=BETT(2)
      BETC(6)=ONE
C
C   VIRTUAL
  207 CONTINUE
      FOCC(II+1)=ZERO
C
      DO 119 I=1,NTYPEP
      DO 119 J=1,NTYPEP
      ALPA(I,J)=ZERO
      BETA(I,J)=ZERO
  119 CONTINUE
      IJ=0
      DO 120 I=1,NTYPES
      DO 120 J=1,I
      IJ=IJ+1
      ALPA(I,J)= (ONE-ALPC(IJ))*FOCC(I)*FOCC(J)*HALF
      BETA(I,J)=-(ONE-BETC(IJ))*FOCC(I)*FOCC(J)*QURT
      IF(I.EQ.J) GO TO 120
      ALPA(J,I)=ALPA(I,J)
      BETA(J,I)=BETA(I,J)
  120 CONTINUE
cets030691      IF(IPRNT.LE.2) GO TO 210
      ip=prcntr('IS_ON DEBUG')
      if(ip.eq.1) then
        WRITE(6,9)
        CALL MATOUT(ALPA,5,5,NTYPEP,NTYPEP,6)
        WRITE(6,10)
        CALL MATOUT(BETA,5,5,NTYPEP,NTYPEP,6)
      endif
  210 CONTINUE
C
      CALL RCLOSE(ITAP30,3)
      RETURN
      END
