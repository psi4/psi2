      SUBROUTINE SYMM(FORCEP,FORCEN,DISP2,FLAG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER SYM,TYPE,FLAG
      REAL*8 MDYNE
       COMMON /PARAM/VECT(60),ANGS,FRCS,MDYNE
     1,SYM(60),ICEN,N,ISYM,ITYPE(20),IATNO(20),ITAPE5
       DIMENSION FORCEP(N,N),FORCEN(N,N),DISP2(N)
      DIMENSION SMAT(3,3),SMATT(3,3),TEMPP(3,3),TEMPN(3,3)
      DIMENSION IPOS1(20),PROD(3,3)
      DIMENSION DIF(60)
       KNT = 1
       NSYMS=0
 10    IF(SYM(KNT).EQ.0) GO TO 100
       NSYMS=NSYMS+1
      TYPE=SYM(KNT)
      INUM=2
      NPAIR=SYM(KNT+1)
      IF(TYPE.GT.1)INUM=SYM(KNT+2)
      CALL SYMMAT(SMAT,KNT,TYPE,INUM,NSYMS)
      IF(TYPE.GT.2) INUM=2
      INUM=ABS(INUM)
      DO 15 I=1,3
      DO 15 J=1,3
   15 SMATT(J,I)=SMAT(I,J)
      J1=KNT+INUM*NPAIR-1
      DO 30 J=KNT,J1
      DO 20 I=1,ICEN
   20 IF(ITYPE(I).EQ.SYM(J)) GO TO 30
      WRITE(6,21)NSYMS,SYM(KNT)
 21   FORMAT( ' PROCESSING SYMMETRY SET',I3/
     *,' PROBLEMS WITH SYMMETRY INFORMATION...',I5)
      ISTOP=0
      IF(ISTOP.EQ.0)STOP
   30 IPOS1(J-KNT+1)=3*(I-1)
      DO 90 IPAIR=1,NPAIR
      IPAIR1=INUM*(IPAIR-1)
      IPOS=IPOS1(IPAIR1+1)
      KNT=KNT+INUM
      DO 80 K1=2,INUM
      JPOS=IPOS1(K1+IPAIR1)
      DO 40 L=1,3
  40  DISP2(JPOS+L)=DISP2(IPOS+L)
      DO 70 L=1,N,3
      LL1=L+2
      DO 60 LL=L,LL1
      DO 60 M=1,3
      II=IPOS+M
      K=LL-L+1
      TEMPP(K,M)=FORCEP(LL,II)
   60 TEMPN(K,M)=FORCEN(LL,II)
      CALL MMULT(TEMPP,SMAT,PROD,3,3,3)
      CALL MMULT(SMATT,PROD,TEMPP,3,3,3)
      CALL MMULT(TEMPN,SMAT,PROD,3,3,3)
      CALL MMULT(SMATT,PROD,TEMPN,3,3,3)
      DO 70 LL=L,LL1
      DO 70 M=1,3
      JJ=JPOS+M
      K=LL-L+1
      FORCEP(LL,JJ)=TEMPP(K,M)
   70 FORCEN(LL,JJ)=TEMPN(K,M)
      DO 79 JPAIR=1,NPAIR
      JPAIR1=INUM*(JPAIR-1)
      DO 77 J=1,3
      JJ=JPOS+J
      DO 72 I=1,3
      II=IPOS1(INUM*JPAIR)+I
      TEMPP(I,J)=FORCEP(II,JJ)
   72 TEMPN(I,J)=FORCEN(II,JJ)
      DO 75 K2=INUM,2,-1
      DO 75 I=1,3
      II=IPOS1(JPAIR1+K2)+I
      NN=IPOS1(JPAIR1+K2-1)+I
      FORCEP(II,JJ)=FORCEP(NN,JJ)
   75 FORCEN(II,JJ)=FORCEN(NN,JJ)
      DO 77 I=1,3
      II=IPOS1(JPAIR1+1)+I
       FORCEP(II,JJ)=TEMPP(I,J)
   77  FORCEN(II,JJ)=TEMPN(I,J)
   79  CONTINUE
   80  IPOS=JPOS
   90  CONTINUE
       GO TO 10
 100   WRITE(6,101)
 101   FORMAT(//,'    SYMMETRY COMPLETED MATRIX OF POSITIVE DISPLACEMENT
     $ MATRICES',/)
       CALL PRINMA(N,FORCEP)
      IF(FLAG.GT.0) GO TO 125
      WRITE(6,105)
  105 FORMAT(//,'    DIFFERENCES BETWEEN LOWER AND UPPER HALVES OF THE P
     +OSITIVE DISPLACEMENT FORCE MATRIX')
      DO 120 I=1,N
      DO 110 J=1,I
  110   DIF(J)=FORCEP(I,J)-FORCEP(J,I)
      WRITE(6,115)(DIF(J),J=1,I)
  115 FORMAT( /,(10(F10.8,3X),/))
  120 CONTINUE
  125 WRITE(6,130)
  130 FORMAT(//,'    SYMMETRY COMPLETED MATRIX OF NEGATIVE DISPLACEMENT
     +MATRICES',/)
       CALL PRINMA(N,FORCEN)
      IF(FLAG.GT.0) GO TO 150
      WRITE(6,135)
  135 FORMAT(//,'    DIFFERENCES BETWEEN LOWER AND UPPER HALVES OF THE N
     +EGATIVE DISPLACEMENT FORCE MATRIX')
      DO 145 I=1,N
      DO 140 J=1,I
  140   DIF(J)=FORCEN(I,J)-FORCEN(J,I)
  145 WRITE(6,115)(DIF(J),J=1,I)
  150 CONTINUE
       RETURN
       END
