      SUBROUTINE NUCTWO(D1N,D2N)
      IMPLICIT REAL*8 (A-H,O-Z)
cets030691
#include <error.h>
      integer ip, prcntr
      CHARACTER*52 TITLE
      COMMON/COORD/ZAN(50),C(3,50)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
      COMMON/TOLER/DLIM
      DIMENSION D1N(3,NATOM),D2N(N3N,N3N)
    1 FORMAT (//,' INFINITE REPULSION, CENTERS',I3,' AND',I3)
      DATA ZERO,THREE / 0.0D+00 , 3.0D+00 /
      DATA RLIM / 1.0D-7 /
C
C   CALCULATE NUCLEAR REPULSION AND DERIVATIVES
C
      DO 101 I=1,NATOM
        DO 101 J=1,3
          D1N(J,I)=ZERO
  101 CONTINUE
      IF(NDERIV.GE.2) THEN
        DO 102 I=1,N3N
          DO 102 J=1,N3N
  102       D2N(I,J)=ZERO
      END IF
C
      DO 104 I=2,NATOM
      CHGI=ZAN(I)
      IF(DABS(CHGI).GT.RLIM) THEN
      XI=C(1,I)
      YI=C(2,I)
      ZI=C(3,I)
      DO 103 J=1,I-1
      CHGJ=ZAN(J)
      IF(DABS(CHGJ).GT.RLIM) THEN
      XJ=C(1,J)
      YJ=C(2,J)
      ZJ=C(3,J)
      XIJ=XI-XJ
      YIJ=YI-YJ
      ZIJ=ZI-ZJ
      RR=XIJ*XIJ+YIJ*YIJ+ZIJ*ZIJ
        IF(RR.EQ.ZERO) THEN
        WRITE(6,1) I,J
        CALL qabort
        END IF
      R=DSQRT(RR)
      REP=CHGI*CHGJ/R
      ENERGY=ENERGY+REP
C
      REP3S2=REP/RR
      D1N(1,I)=D1N(1,I)-XIJ*REP3S2
      D1N(2,I)=D1N(2,I)-YIJ*REP3S2
      D1N(3,I)=D1N(3,I)-ZIJ*REP3S2
      D1N(1,J)=D1N(1,J)+XIJ*REP3S2
      D1N(2,J)=D1N(2,J)+YIJ*REP3S2
      D1N(3,J)=D1N(3,J)+ZIJ*REP3S2
C
      IF(NDERIV.LE.1) GO TO 201
      REP5S2=REP3S2/RR
      REP5SS=REP5S2*THREE
      IPT=(I-1)*3+1
      JPT=(J-1)*3+1
      DRDXDX=-REP3S2+REP5SS*XIJ*XIJ
      DRDXDY=        REP5SS*XIJ*YIJ
      DRDXDZ=        REP5SS*XIJ*ZIJ
      DRDYDY=-REP3S2+REP5SS*YIJ*YIJ
      DRDYDZ=        REP5SS*YIJ*ZIJ
      DRDZDZ=-REP3S2+REP5SS*ZIJ*ZIJ
      D2N(IPT  ,IPT  )=D2N(IPT  ,IPT  )+DRDXDX
      D2N(IPT  ,IPT+1)=D2N(IPT  ,IPT+1)+DRDXDY
      D2N(IPT  ,IPT+2)=D2N(IPT  ,IPT+2)+DRDXDZ
      D2N(IPT+1,IPT+1)=D2N(IPT+1,IPT+1)+DRDYDY
      D2N(IPT+1,IPT+2)=D2N(IPT+1,IPT+2)+DRDYDZ
      D2N(IPT+2,IPT+2)=D2N(IPT+2,IPT+2)+DRDZDZ
      D2N(IPT  ,JPT  )=D2N(IPT  ,JPT  )-DRDXDX
      D2N(IPT  ,JPT+1)=D2N(IPT  ,JPT+1)-DRDXDY
      D2N(IPT  ,JPT+2)=D2N(IPT  ,JPT+2)-DRDXDZ
      D2N(IPT+1,JPT  )=D2N(IPT+1,JPT  )-DRDXDY
      D2N(IPT+1,JPT+1)=D2N(IPT+1,JPT+1)-DRDYDY
      D2N(IPT+1,JPT+2)=D2N(IPT+1,JPT+2)-DRDYDZ
      D2N(IPT+2,JPT  )=D2N(IPT+2,JPT  )-DRDXDZ
      D2N(IPT+2,JPT+1)=D2N(IPT+2,JPT+1)-DRDYDZ
      D2N(IPT+2,JPT+2)=D2N(IPT+2,JPT+2)-DRDZDZ
      D2N(JPT  ,JPT  )=D2N(JPT  ,JPT  )+DRDXDX
      D2N(JPT  ,JPT+1)=D2N(JPT  ,JPT+1)+DRDXDY
      D2N(JPT  ,JPT+2)=D2N(JPT  ,JPT+2)+DRDXDZ
      D2N(JPT+1,JPT+1)=D2N(JPT+1,JPT+1)+DRDYDY
      D2N(JPT+1,JPT+2)=D2N(JPT+1,JPT+2)+DRDYDZ
      D2N(JPT+2,JPT+2)=D2N(JPT+2,JPT+2)+DRDZDZ
  201 CONTINUE
      END IF
  103 CONTINUE
      END IF
  104 CONTINUE
C
      TITLE='NUCLEAR CONTRIBUTION TO FIRST DERIVATIVES          '
cets030691
      ip = prcntr('IS_ON BRIEF')
      if(ip.eq.0) CALL PRNONE(TITLE,D1N)
C
      IF(NDERIV.GE.2) THEN
        CALL FOLD(D2N,N3N)
        TITLE='NUCLEAR CONTRIBUTION TO SECOND DERIVATIVES         '
cets030691
        ip = prcntr('IS_ON BRIEF')
        if(ip.eq.0) CALL PRNTWO(TITLE,D2N)
      END IF
C
      RETURN
      END
