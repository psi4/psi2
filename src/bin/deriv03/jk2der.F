c
ctest
c
C***********************************************************************
C* LAST UPDATED FEBRUARY 22, 1989 BY GUSTAVO SCUSERIA                  *
C*  INCLUDE CC FIRST DERIVATIVES                                       *
C***********************************************************************
C* CALL MCDENS IF CI GRADIENT.  MAKE CHANGES IN MBMAT FOR CI GRADIENT. *
C* ALSO PUT IN CANONICAL ORDERING TO MAKE ORDER THAT THE TWO PARTICLE  *
C* DENSITY MATRIX ELEMENTS ARE ACCESSED IN THE SAME ORDER AS IN FILE55.*
C* CHANGES MADE BY TRACY HAMILTON  DECEMBER 1, 1988   SEARCH C12-1-88. *
C***********************************************************************
C* For array size changes from/to  (50625) or (10000) search C11-14-88 *
C* (50625) is for running in 15Mb while (10000) is for 7Mb.    RBR     *
C***********************************************************************
C* THIS SMALL CORE VERSION FOR THE 9370 CAN ONLY DO UP TO F FUNCTIONS. *
C* CHANGE ABDENS(50625) TO (10000), DERINT(50625,9) TO (10000,9)       *
C***********************************************************************
C* LAST UPDATED NOVEMBER 11, 1988 BY TRACY HAMILTON FOR D5,D6,F7,F10,  *
C* G9,G15 FUNCTIONS.  SEARCH FOR CTPH FOR CHANGES MADE.                *
C***********************************************************************
C* LAST UPDATED NOVEMBER 11, 1987 BY RICHARD REMINGTON                 *
C* VARIABLE DLIM CHANGED FROM 1.0E-10 TO 1.0E-16 FOR BETTER PRECISION; *
C* ALSO PUT DLIM IN COMMON TOLER                                       *
C***********************************************************************
C* LAST UPDATED ON APRIL 27, 1985 BY YUKIO YAMAGUCHI                   *
C***********************************************************************
      SUBROUTINE JK2DER(DTYP,DT,D1T,D2T,BMAT,IJOFF,KLOFF,KLSIZ,ISHIZ,
     1                  RDMBF,IMOSHL,ABTEMP,NST)
      IMPLICIT REAL*8 (A-H,O-Z)
cets030691
#include <error.h>
      integer errcod,frdboo
      integer dlt55
      integer ip, prcntr
c
      LOGICAL IANDJ,KANDL,SAME,EQUAL,DFOCK1,DFOCK2,IDOUBL
CTPH  COMMON/ABDEN/ABDENS(1296)
c11-14-88  (For  7Mb)  COMMON/ABDEN/ABDENS(10000)
c11-14-88  (For 15Mb)  COMMON/ABDEN/ABDENS(50625)
      COMMON/ABDEN/ABDENS(10000)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COORD/ZAN(50),C(3,50)
      COMMON/COUPL/ALPA(5,5),BETA(5,5),ALPC(15),BETC(15)
CTPH  COMMON/DERIN/DERINT(1296,9)
C11-14-88  (For  7Mb) COMMON/DERIN/DERINT(10000,9)
C11-14-88  (For 15Mb) COMMON/DERIN/DERINT(50625,9)
      COMMON/DERIN/DERINT(10000,9)
CTPH  COMMON/DIJPR/PIJ(100),DIJ(100),XIJ(100),YIJ(100),ZIJ(100),
CTPH 1             AIJ(100),BIJ(100),ABIJ(100),TIJ(100)
      COMMON/DIJPR/PIJ(400),DIJ(400),XIJ(400),YIJ(400),ZIJ(400),
     1             AIJ(400),BIJ(400),ABIJ(400),TIJ(400)
ctph  COMMON/DINDX/IJX(100),IJY(100),IJZ(100),KLX(100),KLY(100),KLZ(100)
      COMMON/DINDX/IJX(225),IJY(225),IJZ(225),KLX(225),KLY(225),KLZ(225)
      COMMON/D1INT/DD1(9)
      COMMON/D2INT/DD2(45)
      COMMON/DMISC/IANDJ,KANDL,LOCI,LOCJ,LOCK,LOCL,IOFSET
      COMMON/EXPNT/AIT,BJT,CKT,AIBJT,CKDLT,RHOTSQ,AI,BJ,CK,PPIJ,PPKL
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSA/ZS(200),CS(200)
      COMMON/GAUSB/KNUC(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
CTPH  COMMON/GAUSE/MXSPDF(50),MINSH(3,50),MAXSH(3,50)
      COMMON/GAUSE/MXSPDF(50),MINSH(5,50),MAXSH(5,50)
      COMMON/GEOIN/XAB,YAB,ZAB,XCD,YCD,ZCD,PXX,PYY,PZZ
      COMMON/ISPAC/INDIN(120),INDOUT(30)
      COMMON/MINS /MINI,MAXI,MINJ,MAXJ,MINK,MAXK,MINL,MAXL
      COMMON/NDERS/NDERIV
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/PARA4/MIJ,MKL,ISAME(100)
ctph  COMMON/POSIX/IPOS(100),JPOS(100),KPOS(100),LPOS(100),IMUL(100)
      COMMON/POSIX/IPOS(225),JPOS(225),KPOS(225),LPOS(225),IMUL(225)
ctph  COMMON/ROOT /XX,U(9),WT(9),NROOTS
      COMMON/ROOT /XX,U(10),WT(10),NROOTS
      COMMON/ROOTS/NONZER
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NIJMAX,NKLMAX,IOFFST
      COMMON/SHELL/ISH,JSH,KSH,LSH
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10)
      COMMON/TOLER/DLIM
CTPH  COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
CTPH  COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
CTPH  COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
CTPH  COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      COMMON/TWOD0/XIN(6250),YIN(6250),ZIN(6250)
      COMMON/TWODI/DXI(6250),DYI(6250),DZI(6250)
      COMMON/TWODJ/DXJ(6250),DYJ(6250),DZJ(6250)
      COMMON/TWODK/DXK(6250),DYK(6250),DZK(6250)
      DIMENSION DTYP(NBATRI,NTYPEP),DT(NBATRI),D1T(3,NATOM),D2T(N3N,N3N)
      DIMENSION BMAT(NBATRI,3,NATOM,NTREAD)
      DIMENSION M0(8),M1(8),M2(8),M3(8)
CTPH  DIMENSION IX(10),IY(10),IZ(10),LX(20),LY(20),LZ(20),
CTPH 1          KX(10),KY(10),KZ(10),JX(10),JY(10),JZ(10)
      DIMENSION IX(35),IY(35),IZ(35),LX(35),LY(35),LZ(35),
     1          KX(35),KY(35),KZ(35),JX(35),JY(35),JZ(35)
      DIMENSION IJOFF(1),KLOFF(1),KLSIZ(1),ISHIZ(1),RDMBF(1),ABTEMP(1),
     1          IMOSHL(1)
      DATA ZERO,HALF,ONE,TEN / 0.0D+00 , 0.5D+00 , 1.0D+00 , 10.0D+00 /
      DATA PI252 / 34.986836655250D+00 /
      DATA ITOL / 20 /
CTPH  DATA KX / 1,65, 1, 1,129, 1, 1,65,65, 1
CTPH 1,       193, 1, 1,129,129,65, 1,65, 1,65/
CTPH  DATA KY / 1, 1,65, 1, 1,129, 1,65, 1,65
CTPH 1,        1,193, 1,65, 1,129,129, 1,65,65/
CTPH  DATA KZ / 1, 1, 1,65, 1, 1,129, 1,65,65
CTPH 1,        1, 1,193, 1,65, 1,65,129,129,65/
      DATA KX / 1,126,  1,  1,251,  1,  1,126,126,  1,
     1        376,  1,  1,251,251,126,  1,126,  1,126,
     2        501,1,1,376,376,126,  1,126,  1,251,251,  1,251,126,126/
      DATA KY / 1,  1,126,  1,  1,251,  1,126,  1,126,
     1          1,376,  1,126,  1,251,251,  1,126,126,
     2        1,501,1,126,  1,376,376,  1,126,251,  1,251,126,251,126/
      DATA KZ / 1,  1,  1,126,  1,  1,251,  1,126,126,
     1          1,  1,376,  1,126,  1,126,251,251,126,
     2        1,1,501,  1,126,  1,126,376,376,  1,251,251,126,126,251/
CTPH  DATA JX / 0,16, 0, 0,32, 0, 0,16,16, 0
CTPH 1,        48, 0, 0,32,32,16, 0,16, 0,16/
CTPH  DATA JY / 0, 0,16, 0, 0,32, 0,16, 0,16
CTPH 1,        0, 48, 0,16, 0,32,32, 0,16,16/
CTPH  DATA JZ / 0, 0, 0,16, 0, 0,32, 0,16,16
CTPH 1,        0, 0, 48, 0,16, 0,16,32,32,16/
      DATA JX/ 0, 25,0,0, 50,0,0,25,25,0, 75,0,0,50,50,25,0,25,0,25,
     1         100,  0,  0,75,75,25, 0,25, 0,50,50, 0,50,25,25/
      DATA JY/ 0, 0,25,0, 0,50,0,25,0,25, 0,75,0,25,0,50,50,0,25,25,
     1           0,100,  0,25, 0,75,75, 0,25,50, 0,50,25,50,25/
      DATA JZ/ 0, 0,0,25, 0,0,50,0,25,25, 0,0,75,0,25,0,25,50,50,25,
     1           0,  0,100, 0,25, 0,25,75,75, 0,50,50,25,25,50/
CTPH  DATA LX / 0, 4, 0, 0, 8, 0, 0, 4, 4, 0
CTPH 1,        12, 0, 0, 8, 8, 4, 0, 4, 0, 4/
CTPH  DATA LY / 0, 0, 4, 0, 0, 8, 0, 4, 0, 4
CTPH 1,        0, 12, 0, 4, 0, 8, 8, 0, 4, 4/
CTPH  DATA LZ / 0, 0, 0, 4, 0, 0, 8, 0, 4, 4
CTPH 1,        0, 0, 12, 0, 4, 0, 4, 8, 8, 4/
      DATA LX / 0, 5, 0, 0,10, 0, 0, 5, 5, 0
     1,        15, 0, 0,10,10, 5, 0, 5, 0, 5
     2,        20, 0, 0,15,15, 5, 0, 5, 0,10,10, 0,10, 5, 5/
      DATA LY / 0, 0, 5, 0, 0,10, 0, 5, 0, 5
     1,        0, 15, 0, 5, 0,10,10, 0, 5, 5
     2,        0, 20, 0, 5, 0,15,15, 0, 5,10, 0,10, 5,10, 5/
      DATA LZ / 0, 0, 0, 5, 0, 0,10, 0, 5, 5
     1,        0, 0, 15, 0, 5, 0, 5,10,10, 5
     2,        0, 0, 20, 0, 5, 0, 5,15,15, 0,10,10, 5, 5,10/
ctph  DATA IX/0, 1, 0, 0, 2, 0, 0, 1, 1, 0/
ctph  DATA IY/0, 0, 1, 0, 0, 2, 0, 1, 0, 1/
ctph  DATA IZ/0, 0, 0, 1, 0, 0, 2, 0, 1, 1/
      DATA IX/ 0, 1,0,0, 2,0,0,1,1,0, 3,0,0,2,2,1,0,1,0,1,
     1         4,0,0,3,3,1,0,1,0,2,2,0,2,1,1/
      DATA IY/ 0, 0,1,0, 0,2,0,1,0,1, 0,3,0,1,0,2,2,0,1,1,
     1         0,4,0,1,0,3,3,0,1,2,0,2,1,2,1/
      DATA IZ/ 0, 0,0,1, 0,0,2,0,1,1, 0,0,3,0,1,0,1,2,2,1,
     1         0,0,4,0,1,0,1,3,3,0,2,2,1,1,2/
C
C   CALCULATE TWO ELECTRON CONTRIBUTIONS TO THE DERIVATIVES
C
      TOL=ITOL*2.30258D+00
C
      ICOUNT=0
      DFOCK1=IDFOCK.GE.1
      DFOCK2=IDFOCK.GE.2
C
      DO 101 I=1,NATOM
      DO 101 J=1,3
      D1T(J,I)=ZERO
  101 CONTINUE
      IF(DFOCK1) THEN
      DO 102 I=1,NBATRI
      DO 102 J=1,3
      DO 102 K=1,NATOM
cbug reported by tracy ix-26-90
c     DO 102 L=1,NTYPEP
      DO 102 L=1,ntread
      BMAT(I,J,K,L)=ZERO
  102 CONTINUE
      END IF
      IF(NDERIV.GE.2) THEN
      DO 103 I=1,N3N
      DO 103 J=1,N3N
      D2T(I,J)=ZERO
  103 CONTINUE
      END IF
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C  READ INFO OFF OF FILE 55                 $
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
CGES  IF(ICTYPE.EQ.2) THEN
      IF(ICTYPE.EQ.2.OR.ICTYPE.EQ.9) THEN
        IT55=55
        CALL RFILE(IT55)
        DO 104 I = 1,NSHELL
          I1 = KLOC(I)
          I2 = I1 + KMAX(I)-KMIN(I)
          DO 104 J = I1,I2
            IMOSHL(J) = I
  104   CONTINUE
        CALL WREADW(IT55,ISHIZ,NSHELL,1,JUNK)
        CALL WREADW(IT55,IJOFF,NST,JUNK,JUNK)
        CALL WREADW(IT55,KLOFF,NST,JUNK,JUNK)
        CALL WREADW(IT55,KLSIZ,NST,JUNK,IOFSET)
      ENDIF
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C  SHELL  CANONICAL ORDERING                $
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C
C################
C#####ISHELL#####
C################
C
      DO 1000 II=1,NSHELL
C
      DO 111 IT=1,NISO
  111 INDOUT(IT)=ISO(II,IT)
cges  CALL ISOOUT
      call ysoout
      DO 112 IT=1,NT
      ID=INDIN(IT)
      IF(ID.GT.II) GO TO 1000
      M0(IT)=ID
  112 CONTINUE
C
C################
C#####JSHELL#####
C################
C
      DO 900 JJ=1,II
C
      DO 113 IT=1,NISO
  113 INDOUT(IT)=ISO(JJ,IT)
cges  CALL ISOOUT
      call ysoout
      DO 114 IT=1,NT
      IDT=M0(IT)
      JDT=INDIN(IT)
      IF(JDT.GT.II) GO TO 900
      ID=MAX0(IDT,JDT)
      JD=MIN0(IDT,JDT)
      IF(ID.EQ.II.AND.JD.GT.JJ) GO TO 900
      M1(IT)=ID
      M2(IT)=JD
  114 CONTINUE
C
C################
C#####KSHELL#####
C################
C
      DO 800 KK=1,II
C
      DO 115 IT=1,NISO
  115 INDOUT(IT)=ISO(KK,IT)
cges  CALL ISOOUT
      call ysoout
      DO 116 IT=1,NT
      KD=INDIN(IT)
      IF(KD.GT.II) GO TO 800
      M3(IT)=KD
  116 CONTINUE
C
C################
C#####LSHELL#####
C################
C
      DO 700 LL=1,KK
C
      DO 117 IT=1,NISO
  117 INDOUT(IT)=ISO(LL,IT)
cges  CALL ISOOUT
      call ysoout
      N4=0
      DO 118 IT=1,NT
      LDT=INDIN(IT)
      IF(LDT.GT.II) GO TO 700
      KDT=M3(IT)
      KD=MAX0(KDT,LDT)
      LD=MIN0(KDT,LDT)
      ID=M1(IT)
      JD=M2(IT)
      IF(ID.NE.II.AND.KD.NE.II) GO TO 118
      IF(KD.LT.ID) GO TO 201
      IF(KD.EQ.ID.AND.LD.LE.JD) GO TO 201
      ND=ID
      ID=KD
      KD=ND
      ND=JD
      JD=LD
      LD=ND
  201 IF(JD.LT.JJ) GO TO 118
      IF(JD.GT.JJ) GO TO 700
      IF(KD.LT.KK) GO TO 118
      IF(KD.GT.KK) GO TO 700
      IF(LD.LT.LL) GO TO 118
      IF(LD.GT.LL) GO TO 700
      N4=N4+1
  118 CONTINUE
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C  INSURE CANONICAL ORDERING                $
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      IF(II.EQ.KK.AND.JJ.LT.LL) GO TO 650
C
      Q4=DFLOAT(NT)/DFLOAT(N4)
      CALL REDUN2(II,JJ,KK,LL,Q4,KNUC)
      IF(NPASS.EQ.0) GO TO 700
C
      IANDJ=ISH.EQ.JSH
C
      IATOM=KNUC(ISH)
      AX=C(1,IATOM)
      AY=C(2,IATOM)
      AZ=C(3,IATOM)
      IGMIN=KSTART(ISH)
      IGMAX=IGMIN+KNG(ISH)-1
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      LOCI=KLOC(ISH)
C
      JATOM=KNUC(JSH)
      BX=C(1,JATOM)
      BY=C(2,JATOM)
      BZ=C(3,JATOM)
      JGMIN=KSTART(JSH)
      JGMAX=JGMIN+KNG(JSH)-1
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      LOCJ=KLOC(JSH)
C
      EQUAL=IATOM.EQ.JATOM
C
      MIJ=0
      JMAX=MAXJ
      III=-1
      DO 122 I=MINI,MAXI
      III=III+1
      JJJ=-1
      NX=IX(I)
      NY=IY(I)
      NZ=IZ(I)
C***  IF(IANDJ) JMAX=I
      DO 121 J=MINJ,JMAX
      JJJ=JJJ+1
      MIJ=MIJ+1
      NFAC=1
      IF(IANDJ.AND.I.EQ.J) NFAC=2
      IMUL(MIJ)=NFAC
      IJX(MIJ)=NX+JX(J)
      IJY(MIJ)=NY+JY(J)
      IJZ(MIJ)=NZ+JZ(J)
      IPOS(MIJ)=LOCI+III
      JPOS(MIJ)=LOCJ+JJJ
  121 CONTINUE
  122 CONTINUE
C
      XAB=AX-BX
      YAB=AY-BY
      ZAB=AZ-BZ
      RAB=XAB*XAB+YAB*YAB+ZAB*ZAB
C
      NIJ=0
      DO 124 IG=IGMIN,IGMAX
      CSI=CS(IG)
      AI=ZS(IG)
      AXI=AI*AX
      AYI=AI*AY
      AZI=AI*AZ
C***  IF(IANDJ) JGMAX=IG
      DO 123 JG=JGMIN,JGMAX
      CSJ=CS(JG)
      BJ=ZS(JG)
      BXJ=BJ*BX
      BYJ=BJ*BY
      BZJ=BJ*BZ
      PPIJ=AI+BJ
      AXB=AI*BJ
      TTIJ=ONE/PPIJ
      TMPIJ=(AXB*RAB)*TTIJ
      IF(TMPIJ.GT.TOL) GO TO 123
      NIJ=NIJ+1
      AIJ(NIJ)=AI
      BIJ(NIJ)=BJ
      ABIJ(NIJ)=AXB
      PIJ(NIJ)=PPIJ
      TIJ(NIJ)=TTIJ
      PXIJ=(AXI+BXJ)*TTIJ
      PYIJ=(AYI+BYJ)*TTIJ
      PZIJ=(AZI+BZJ)*TTIJ
      XIJ(NIJ)=PXIJ
      YIJ(NIJ)=PYIJ
      ZIJ(NIJ)=PZIJ
      DD=CSI*CSJ*TTIJ*DEXP(-TMPIJ)*PI252
C***  IF(IANDJ.AND.IG.NE.JG) THEN
C***  DIJ(NIJ)=DD+DD
C***  ELSE
      DIJ(NIJ)=DD
C***  END IF
  123 CONTINUE
  124 CONTINUE
C
      IF(NIJ.EQ.0) GO TO 700
C
      KANDL=KSH.EQ.LSH
C***  SAME=ISH.EQ.KSH.AND.JSH.EQ.LSH
C
      KATOM=KNUC(KSH)
      CX=C(1,KATOM)
      CY=C(2,KATOM)
      CZ=C(3,KATOM)
      KGMIN=KSTART(KSH)
      KGMAX=KGMIN+KNG(KSH)-1
      LKT=KTYPE(KSH)
      MINK=KMIN(KSH)
      MAXK=KMAX(KSH)
      LOCK=KLOC(KSH)
C
      LATOM=KNUC(LSH)
      DX=C(1,LATOM)
      DY=C(2,LATOM)
      DZ=C(3,LATOM)
      LGMIN=KSTART(LSH)
      LGMAX=LGMIN+KNG(LSH)-1
      LLT=KTYPE(LSH)
      MINL=KMIN(LSH)
      MAXL=KMAX(LSH)
      LOCL=KLOC(LSH)
C
      MKL=0
      LMAX=MAXL
      KKK=-1
      DO 126 K=MINK,MAXK
      KKK=KKK+1
      LLL=-1
      NX=KX(K)
      NY=KY(K)
      NZ=KZ(K)
      IF(KANDL) LMAX=K
      DO 125 L=MINL,LMAX
      LLL=LLL+1
      MKL=MKL+1
      KLX(MKL)=NX+LX(L)
      KLY(MKL)=NY+LY(L)
      KLZ(MKL)=NZ+LZ(L)
      KPOS(MKL)=LOCK+KKK
      LPOS(MKL)=LOCL+LLL
  125 CONTINUE
  126 CONTINUE
C
      XCD=CX-DX
      YCD=CY-DY
      ZCD=CZ-DZ
      RCD=XCD*XCD+YCD*YCD+ZCD*ZCD
C
C***  MAXIND=MKL
C***  DO 128 I=1,MIJ
C***  IF(SAME) MAXIND=I
C***  ISAME(I)=MAXIND
C*128 CONTINUE
C
      NIMAX=LIT-1
      NJMAX=LJT-1
      NKMAX=LKT-1
      NLMAX=LLT-1
      NIJMAX=NIMAX+NJMAX
      NKLMAX=NKMAX+NLMAX
C
C     ----- CALCULATE NUMBER OF ROOTS FOR DERIVATIVES -----
C
      NROOTS=(LIT+LJT+LKT+LLT-2+NDERIV)/2
C
C     ----- FORM PRODUCTS OF DENSITY MATRIX ELEMENTS -----
C
CTPH  WRITE(6,*) 'II',II,'JJ',JJ,'KK',KK,'LL',LL
      IF(ICTYPE.EQ.1) THEN
        CALL DAB(DTYP,DT,Q4)
      ELSE
        LOCI=LOCI-MINI
        LOCJ=LOCJ-MINJ
        LOCK=LOCK-MINK
        LOCL=LOCL-MINL
        CALL MCDENS(II,JJ,KK,LL,Q4,RDMBF,ABTEMP,IJOFF,KLOFF,KLSIZ,
     1              ISHIZ,IMOSHL)
      ENDIF
      IF(Q4.EQ.ZERO) GO TO 700
CTPH  WRITE(6,*) 'II',II,'JJ',JJ,'KK',KK,'LL',LL
C
      IF(IDFOCK.GE.1) THEN
      IF(NPASS.EQ.1) THEN
      MAXD=9
      ELSE IF(NPASS.EQ.4) THEN
      MAXD=3
      ELSE
      MAXD=6
      END IF
      MIJKL=MIJ*MKL
      DO 130 I=1,MIJKL
      DO 130 J=1,MAXD
      DERINT(I,J)=ZERO
  130 CONTINUE
      END IF
      DO 131 I=1,9
  131 DD1(I)=ZERO
      IF(NDERIV.GE.2) THEN
      DO 132 I=1,45
  132 DD2(I)=ZERO
      END IF
C
C========================
C===K AND L PRIMITIVES===
C========================
C
      MAXLG=LGMAX
      DO 600 KG=KGMIN,KGMAX
      CSK=CS(KG)
      CK=ZS(KG)
      CXK=CK*CX
      CYK=CK*CY
      CZK=CK*CZ
C
      IF(KANDL) MAXLG=KG
      DO 500 LG=LGMIN,MAXLG
      CSL=CS(LG)
      DL=ZS(LG)
      DXL=DL*DX
      DYL=DL*DY
      DZL=DL*DZ
      PPKL=CK+DL
      CXD=CK*DL
      TTKL=ONE/PPKL
      CKT=CK*TTKL
      CKDLT=CXD*TTKL
      TMPKL=(CK*DL*RCD)*TTKL
      IF(TMPKL.GT.TOL) GO TO 500
      PXKL=(CXK+DXL)*TTKL
      PYKL=(CYK+DYL)*TTKL
      PZKL=(CZK+DZL)*TTKL
      PAXKL=(PXKL-AX)*PPKL
      PAYKL=(PYKL-AY)*PPKL
      PAZKL=(PZKL-AZ)*PPKL
      PCXKL=(PXKL-CX)*PPKL
      PCYKL=(PYKL-CY)*PPKL
      PCZKL=(PZKL-CZ)*PPKL
      DD=CSK*CSL*TTKL*DEXP(-TMPKL)
      IF(KANDL.AND.KG.NE.LG) THEN
      DKL=DD+DD
      ELSE
      DKL=DD
      END IF
C
C============================
C===PAIR OF I,J PRIMITIVES===
C============================
C
      DO 400 IJG=1,NIJ
      AI=AIJ(IJG)
      BJ=BIJ(IJG)
      AXB=ABIJ(IJG)
      PPIJ=PIJ(IJG)
      TTIJ=TIJ(IJG)
      AIT=AI*TTIJ
      BJT=BJ*TTIJ
      AIBJT=AXB*TTIJ
      PPP=PPIJ*PPKL
      PSUM=PPIJ+PPKL
      PPT=ONE/PSUM
      PPQ=DSQRT(PPT)
      DENS=DIJ(IJG)*DKL*PPQ
ctest
C     IF(II.EQ.10.AND.JJ.EQ.10.AND.KK.EQ.8.AND.LL.EQ.6) THEN
C     WRITE(6,*) 'II JJ KK LL MIJKL',II,JJ,KK,LL,MIJKL
C     WRITE(6,*) 'DENSITY',DENS,DIJ(IJG),DKL,PPQ
C     WRITE(6,*) 'CSI CSJ',CSI,CSJ
C     WRITE(6,*) 'CSK CSL',CSK,CSL
C     ENDIF
ctest
      RHO=PPP*PPT
      PXIJ=XIJ(IJG)
      PYIJ=YIJ(IJG)
      PZIJ=ZIJ(IJG)
      PXX=PXIJ-PXKL
      PYY=PYIJ-PYKL
      PZZ=PZIJ-PZKL
ctest
C     IF(II.EQ.10.AND.JJ.EQ.10.AND.KK.EQ.8.AND.LL.EQ.6) THEN
C     WRITE(6,*) 'PXIJ PYIJ PZIJ',PXIJ,PYIJ,PZIJ
C     WRITE(6,*) 'PXKL PYKL PZKL',PXKL,PYKL,PZKL
C     WRITE(6,*) 'PXX PYY PZZ',PXX,PYY,PZZ
C     ENDIF
ctest
      XX=RHO*(PXX*PXX+PYY*PYY+PZZ*PZZ)
      PAXIJ=(PXIJ-AX)*PPIJ
      PAYIJ=(PYIJ-AY)*PPIJ
      PAZIJ=(PZIJ-AZ)*PPIJ
      PCXIJ=(PXIJ-CX)*PPIJ
      PCYIJ=(PYIJ-CY)*PPIJ
      PCZIJ=(PZIJ-CZ)*PPIJ
      C1X=PCXIJ+PCXKL
      C2X=PCXKL*PPIJ
      C3X=PAXIJ+PAXKL
      C4X=PAXIJ*PPKL
      C1Y=PCYIJ+PCYKL
      C2Y=PCYKL*PPIJ
      C3Y=PAYIJ+PAYKL
      C4Y=PAYIJ*PPKL
      C1Z=PCZIJ+PCZKL
      C2Z=PCZKL*PPIJ
      C3Z=PAZIJ+PAZKL
      C4Z=PAZIJ*PPKL
C
C     ----- ROOTS AND WEIGHTS FOR QUADRATURE
C
      IF(NROOTS.LE.3) THEN
      CALL RT123
      ELSE IF(NROOTS.EQ.4) THEN
      CALL ROOT4
      ELSE IF(NROOTS.EQ.5) THEN
      CALL ROOT5
ctph  ELSE IF(NROOTS.GT.5.AND.NROOTS.LE.9) THEN
      ELSE IF(NROOTS.GT.5.AND.NROOTS.LE.10) THEN
      CALL DROOT
      ELSE
      STOP ' WEIRD NUMBER OF ROOTS'
      END IF
      IOFFST=0
      NONZER=0
ctest
C     IF(II.EQ.10.AND.JJ.EQ.10.AND.KK.EQ.8.AND.LL.EQ.6) THEN
C     WRITE(6,*) 'RHO XRYS',RHO,XX
C     ENDIF
ctest
C
C:::::::::::::::::::::
C:::::---ROOTS---:::::
C:::::::::::::::::::::
C
      DO 300 IROOT=1,NROOTS
      U2=U(IROOT)*RHO
      RHOTSQ=U2*RHO/(RHO+U2)
      F00=DENS*WT(IROOT)
      NONZER=NONZER+1
      DUM=PPP+U2*PSUM
      DUMT=ONE/DUM
      DUMTH=DUMT*HALF
      BP01=(PPIJ+U2)*DUMTH
      B00=U2*DUMTH
      B10=(PPKL+U2)*DUMTH
      XCP00=(U2*C1X+C2X)*DUMT
      XC00 =(U2*C3X+C4X)*DUMT
      YCP00=(U2*C1Y+C2Y)*DUMT
      YC00 =(U2*C3Y+C4Y)*DUMT
      ZCP00=(U2*C1Z+C2Z)*DUMT
      ZC00 =(U2*C3Z+C4Z)*DUMT
C
      IF(NDERIV.GE.2) GO TO 220
C   FOR FIRST DERIVATIVES
      GO TO (211,212,213,214),NPASS
      STOP ' WEIRD NUMBER OF NPASS'
  211 CONTINUE
      CALL XYZIJK
      GO TO 215
  212 CONTINUE
      CALL XYZIJ
      GO TO 215
  213 CONTINUE
      CALL XYZIK
      GO TO 215
  214 CONTINUE
      CALL XYZI
  215 CONTINUE
CTPH  IOFFST=IOFFST+256
      IOFFST=IOFFST+625
      GO TO 300
C
C   FOR SECOND DERIVATIVES
  220 CONTINUE
      GO TO (221,222,223,224),NPASS
      STOP ' WEIRD NUMBER OF NPASS'
  221 CONTINUE
      CALL TWOIJK
      CALL MK2IJK
      GO TO 225
  222 CONTINUE
      CALL TWOIJ
      CALL MK2IJ
      GO TO 225
  223 CONTINUE
      CALL TWOIK
      CALL MK2IK
      GO TO 225
  224 CONTINUE
      CALL TWOI
      CALL MK2I
  225 CONTINUE
C
  300 CONTINUE
C
C::::::::::::::::::::::::::::
C:::::---END OF ROOTS---:::::
C::::::::::::::::::::::::::::
C
      IF(NDERIV.GE.2) GO TO 400
      IF(NONZER.EQ.0) GO TO 400
      IF(IDFOCK.NE.0) GO TO 240
C
C  TWO-ELECTRON FIRST DERIVATIVES ONLY
      GO TO (231,232,233,234),NPASS
      STOP ' WEIRD NUMBER OF PASS'
  231 CONTINUE
      CALL FRMIJK
      GO TO 400
  232 CONTINUE
ctest
C     IF(II.EQ.10.AND.JJ.EQ.10.AND.KK.EQ.8.AND.LL.EQ.6) THEN
C     MIJKL=MIJ*MKL
C     WRITE(6,*) 'II JJ KK LL MIJKL',II,JJ,KK,LL,MIJKL
C     WRITE(6,*) 'DENSITY',(ABDENS(I),I=1,MIJKL)
C     WRITE(6,*) 'AX DERIVATIVES'
C     WRITE(6,*) (DD1(1))
C     WRITE(6,*) 'AY DERIVATIVES'
C     WRITE(6,*) (DD1(2))
C     WRITE(6,*) 'AZ DERIVATIVES'
C     WRITE(6,*) (DD1(3))
C     WRITE(6,*) 'BX DERIVATIVES'
C     WRITE(6,*) (DD1(4))
C     WRITE(6,*) 'BY DERIVATIVES'
C     WRITE(6,*) (DD1(5))
C     WRITE(6,*) 'BZ DERIVATIVES'
C     WRITE(6,*) (DD1(6))
C     WRITE(6,*) 'CX DERIVATIVES'
C     WRITE(6,*) (DD1(7))
C     WRITE(6,*) 'CY DERIVATIVES'
C     WRITE(6,*) (DD1(8))
C     WRITE(6,*) 'CZ DERIVATIVES'
C     WRITE(6,*) (DD1(9))
C     ENDIF
ctest
      CALL FRMIJ
ctest
C     IF(II.EQ.10.AND.JJ.EQ.10.AND.KK.EQ.8.AND.LL.EQ.6) THEN
C     MIJKL=MIJ*MKL
C     WRITE(6,*) 'II JJ KK LL MIJKL',II,JJ,KK,LL,MIJKL
C     WRITE(6,*) 'DENSITY',(ABDENS(I),I=1,MIJKL)
C     WRITE(6,*) 'AX DERIVATIVES'
C     WRITE(6,*) (DD1(1))
C     WRITE(6,*) 'AY DERIVATIVES'
C     WRITE(6,*) (DD1(2))
C     WRITE(6,*) 'AZ DERIVATIVES'
C     WRITE(6,*) (DD1(3))
C     WRITE(6,*) 'BX DERIVATIVES'
C     WRITE(6,*) (DD1(4))
C     WRITE(6,*) 'BY DERIVATIVES'
C     WRITE(6,*) (DD1(5))
C     WRITE(6,*) 'BZ DERIVATIVES'
C     WRITE(6,*) (DD1(6))
C     WRITE(6,*) 'CX DERIVATIVES'
C     WRITE(6,*) (DD1(7))
C     WRITE(6,*) 'CY DERIVATIVES'
C     WRITE(6,*) (DD1(8))
C     WRITE(6,*) 'CZ DERIVATIVES'
C     WRITE(6,*) (DD1(9))
C     ENDIF
ctest
      GO TO 400
  233 CONTINUE
      CALL FRMIK
      GO TO 400
  234 CONTINUE
      CALL FRMI
      GO TO 400
C
C   TWO-ELECTRON FIRST DERIVATIVES AND DERIVATIVE FOCK
  240 CONTINUE
      GO TO (241,242,243,244),NPASS
  241 CONTINUE
      CALL MAKIJK
      GO TO 400
  242 CONTINUE
      CALL MAKIJ
      GO TO 400
  243 CONTINUE
      CALL MAKIK
      GO TO 400
  244 CONTINUE
      CALL MAKI
  400 CONTINUE
  500 CONTINUE
  600 CONTINUE
C
      IF(IDFOCK.NE.0) THEN
      CALL MAKGRD(MIJKL)
      CALL MAKEB(BMAT,DTYP,DT,Q4)
      END IF
C***  ICOUNT=ICOUNT+1
      CALL FORMEG(D1T)
ctph  WRITE(6,*) 'II,JJ,KK,LL',II,JJ,KK,LL
      IF(NDERIV.GE.2) THEN
      CALL FORME2(D2T)
      END IF
C
C===========================
C=====END OF PRIMITIVES=====
C===========================
C
  650 CONTINUE
  700 CONTINUE
  800 CONTINUE
  900 CONTINUE
 1000 CONTINUE
C
C#######################
C#####END OF SHELLS#####
C#######################
C
      IF(DFOCK1) THEN
        DO 140 ITYP=1,NTREAD
        DO 140 IABC=1,NATOM
        DO 140 IXYZ=1,3
          IJ=0
ctph      DO 139 I=1,NBASIS
          DO 139 I=1,NBFAO
          DO 139 J=1,I
            IJ=IJ+1
            IF(I.EQ.J) GO TO 139
            BMAT(IJ,IXYZ,IABC,ITYP)=BMAT(IJ,IXYZ,IABC,ITYP)*HALF
  139     CONTINUE
c12-1
          ip = prcntr('IS_ON DEBUG')
          if(ip.eq.1) then
            WRITE(6,*) 'in jk2der:  ITYP,IABC,IXYZ ',ITYP,IABC,IXYZ
            CALL PRINT(BMAT(1,IXYZ,IABC,ITYP),NBATRI,NBASIS,6)
          endif
  140   CONTINUE
c
        ip = prcntr('IS_ON DEBUG')
        if(ip.eq.1) then
          WRITE(6,*) 'in jk2der:  DT  '
          CALL PRINT(DT,NBATRI,NBASIS,6)
          DO 141 ITYPEP=1,NTYPEP
            WRITE(6,*) ' DTYP  ',ITYPEP
            CALL PRINT(DTYP(1,ITYPEP),NBATRI,NBASIS,6)
  141     CONTINUE
        endif
      END IF
C
cets030691 read 'DELETE55' to see if file55 should be removed. default=yes
c
      dlt55=1
      errcod = frdboo('DELETE55',dlt55)
c
cges get rid of file55
c
      if(ictype.eq.2.or.ictype.eq.9) then
        if(dlt55.eq.1) then
          call rclose(it55,4)
        else
          call rclose(it55,3)
        endif
      endif
c
      RETURN
      END
