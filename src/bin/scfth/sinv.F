      SUBROUTINE SINV(S,SMHALF,U,EIGVAL,T1,T2,NSYM,NNPBLK,NUMSYM,
     #                IPRINT,NUMBLK,NUM,TRIANG,IOUT)
C
C***PURPOSE: TO FORM S**(-1/2) MATRIX.
C
C  PAUL SAXE               27 JULY 1984                    LANL
C
C 31 OCTOBER 1984  MODIFIED TO HANDLE SYMMETRY BLOCKED MATRICES   PWS
C
C 28 NOVEMBER 1984 MODIFIED TO RUN IN PITZER'S SCF  UCB           PWS
C
      IMPLICIT INTEGER (A-Z)
C
      REAL*8 S(NNPBLK),SMHALF(NNPBLK),U(NUMBLK),T1(*),T2(*),EIGVAL(NUM)
      REAL*8 TRIANG(*)
      INTEGER NUMSYM(NSYM)
      LOGICAL BTEST
C
C     ----- STATEMENT FUNCTIONS -----
C
      OFFSET(I,J)=I*(I-1)/2+J
C
C     ----- PRINT THE OVERLAP MATRIX IF REQUESTED -----
C
      IF (BTEST(IPRINT,0)) THEN
CP       WRITE (IOUT,1)
CP  1    FORMAT (//,' THE A.O. OVERLAP MATRIX',/)
CP       CALL BLKPRT(S,NNPBLK,NUMSYM,NSYM,IOUT)
      END IF
C
C     ----- DIAGONALIZE S AND GET EIGENVALUES AND VECTORS -----
C
      PTEIG=1
      PTTRI=1
      PTSQR=1
      DO 3 SYM=1,NSYM
         NUMS=NUMSYM(SYM)
         IF (NUMS.LE.0) GO TO 3
         NNPS=OFFSET(NUMS,NUMS)
         CALL VMOVE(TRIANG,S(PTTRI),NNPS)
         CALL RSP(NUMS,NUMS,NNPS,TRIANG,EIGVAL(PTEIG),1,U(PTSQR),T1,T2)
C
C        ----- INVERT THE EIGENVALUES AND TRANSFORM BACK -----
C
 
         CALL ZERO(T1,NUMS**2)
         II=1
         DO 2 I=1,NUMS
            T1(II)=1.0D+00/SQRT(EIGVAL(PTEIG+I-1))
            II=II+NUMS+1
    2    CONTINUE
         CALL EBCT(T2,T1,U(PTSQR),NUMS,NUMS,NUMS)
         CALL EBC(T1,U(PTSQR),T2,NUMS,NUMS,NUMS)
         CALL SQTOTR(SMHALF(PTTRI),T1,NUMS,NNPS)
      CALL EBC(T2,T1,T1,NUMS,NUMS,NUMS)
      CALL TRTOSQ(T1,S(PTTRI),NUMS,NNPS)
      CALL EBC(U(PTSQR),T1,T2,NUMS,NUMS,NUMS)
         PTEIG=PTEIG+NUMS
         PTTRI=PTTRI+NNPS
         PTSQR=PTSQR+NUMS**2
    3 CONTINUE
C
C     ----- PRINT EIGENVECTORS AND EIGENVALUES OF S IF REQUESTED -----
C
      IF (BTEST(IPRINT,1)) THEN
C        WRITE (IOUT,4)
C   4    FORMAT (//,' EIGENVECTORS AND VALUES OF THE OVERLAP MATRIX',/)
C        CALL VECOUT(U,EIGVAL,NUMBLK,NUM,NUMSYM,NSYM,IOUT)
      END IF
C
C     ----- PRINT S**(-1/2) IF REQUESTED -----
C
      IF (BTEST(IPRINT,2)) THEN
CP       WRITE (IOUT,5)
CP  5    FORMAT (//,' S**(-1/2) MATRIX ',/)
CP       CALL BLKPRT(SMHALF,NNPBLK,NUMSYM,NSYM,IOUT)
      END IF
C
C
      RETURN
      END
