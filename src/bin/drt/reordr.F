      SUBROUTINE REORDR(NTYPE,BFNUM,NUMSYM,BFSYM,BFCODE,ORBTBF
     #,                 IOUT,ORBSYM)
C
C***********************************************************************
C     THIS SUBROUTINE DETERMINES THE ORDER OF THE ORBITALS IN THE CI   *
C     PORTION OF THE CALCULATION. THE ORDER IS SET IN THE BLOCK DATA   *
C     DRTCOD -- 1 APPEARS AT THE BOTTOM OF TE GRAPH, HIGHEST NUMBER    *
C     AT THE TOP. IOUT(N) GIVES CI NUMBER OF NTH SCF ORBITAL, WITH     *
C     A -1 FOR FROZEN CORES AND 0 FOR FROZEN VIRTUAL. ORBTBF(N) GIVES  *
C     THE SCF NUMBER FOR THE NTH CI ORBITAL.                           *
C***********************************************************************
C
      IMPLICIT INTEGER (A-Z)
      INTEGER NUMINT
      CHARACTER*1 MULTRF,VALENC,BFKEY
      CHARACTER*3 CODES,WORDS
C
      COMMON /CBFKEY/ BFKEY(1000)
      COMMON /DIMENS/ NBF,NSYM,NORBS,NROWSP,NROW4P,NROWS,NROWS4
     #,               NLEVS,NREFS,NROWOC,NROW4O,NWKS,NWKSOC,NLEVOC
     #,               ORBFRM,SYMORB,NUMIJ,NGROUP,NUMINT,NMAX,NSPC,NVREF
     #,               NIJVIR
      COMMON /TAPES/  OUT,ERROUT,INPUT,DRTTAP
      COMMON /DRTCOD/ NCODES,DELA(9),DELB(9),DELELE(9)
     #,               NTYPES,VIRTUL,OCCUPD,VALOCC,RESCOR,RESVIR,FROZEN
     #,               VALVIR,OPENSH,MULTI,SPESHL,MULTRF,VALENC
     #,               WORDS(6,9),CODES(9)
      COMMON /CODE/  FZC, FZV, COR, VIR, DOC, UOC, ALP, BET, SPE
      COMMON /DRTINF/ NA,NB,NS,NESPEC,MAXB,LEVFRM,LEVVAL,LEVOPN,LEVMUL
     #,               LEVOCC,SPEC,SSPESH,VAL
C
      DIMENSION NTYPE(NTYPES),BFNUM(NTYPES,NBF),NUMSYM(NTYPES,NSYM)
      DIMENSION BFSYM(NBF),BFCODE(NREFS,NBF),ORBTBF(NORBS)
      DIMENSION IOUT(NBF),ORBSYM(NORBS)
C
      ORB=0
      NA=0
      NB=0
      NS=0
      LEVFRM=0
      LEVOCC=-999999
      LEVOPN=999999
      LEVMUL=999999
      LEVVAL=999999
C
      DO 7 TYPE=1,NTYPES
         NTP=NTYPE(TYPE)
         IF (NTP.LE.0) GO TO 6
         IF (TYPE.EQ.SPESHL.AND.LEVOPN.EQ.999999) LEVOPN=ORB+1
         IF (TYPE.EQ.OPENSH) LEVOPN=ORB+1
         IF (TYPE.EQ.MULTI ) LEVMUL=ORB+1
         IF (TYPE.EQ.VALOCC) LEVOCC=ORB+1
         IF (TYPE.EQ.VALVIR) LEVVAL=ORB+2
         DO 5 OLDSYM=1,NSYM
            IF ((TYPE.EQ.MULTI).AND.OLDSYM.NE.1) GO TO 5
            SYM=NSYM-OLDSYM
            IF (TYPE.EQ.VIRTUL) SYM=OLDSYM-1
            DO 4 JUNK=1,NTP
               NUM=NTP-JUNK+1
               BF=BFNUM(TYPE,NUM)
               IF (TYPE.EQ.MULTI) SYM=BFSYM(BF)
               IF (SYM.NE.BFSYM(BF)) GO TO 3
               CODE=BFCODE(1,BF)
               IF (TYPE.NE.FROZEN) GO TO 1
               IF (CODE.EQ.FZC) IOUT(BF)=-1
               IF (CODE.EQ.FZV) IOUT(BF)=0
               GO TO 2
    1          ORB=ORB+1
               IOUT(BF)=ORB
               ORBSYM(ORB)=SYM+1
               NA=NA+DELA(CODE)
               NB=NB+DELB(CODE)
               IF (DELELE(CODE).EQ.1) NS=IEOR(NS,SYM)
               ORBTBF(ORB)=BF
    2          CONTINUE
    3          CONTINUE
    4       CONTINUE
    5    CONTINUE
    6    CONTINUE
         IF (TYPE.EQ.VIRTUL) LEVFRM=ORB+1
    7 CONTINUE
C
      IF (LEVOCC.EQ.-999999) LEVOCC=LEVFRM
      ORBFRM=LEVFRM-1
C
      RETURN
      END
