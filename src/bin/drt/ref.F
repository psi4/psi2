      SUBROUTINE REF(ARC,WGHT,LEVNR,LEVPT,ORBTBF,BFCODE,
     #CSAV,ROWSV,WTSAV,REFWT,MXREF)
C
C
C
      IMPLICIT INTEGER (A-Z)
      LOGICAL INTRAC
      CHARACTER*1 MULTRF,VALENC,BFKEY
      CHARACTER*3 CODES,WORDS
      CHARACTER*4 LABEL
C
      COMMON /CBFKEY/ BFKEY(1000)
      COMMON /DRTCOD/ NCODES,DELA(9),DELB(9),DELELE(9)
     #,               NTYPES,VIRTUL,OCCUPD,VALOCC,RESCOR,RESVIR,FROZEN
     #,               VALVIR,OPENSH,MULTI,SPESHL,MULTRF,VALENC
     #,               WORDS(6,9),CODES(9)
      COMMON /DIMENS/ NBF,NSYM,NORBS,NROWSP,NROW4P,NROWS,NROWS4
     #,               NLEVS,NREFS,NROWOC,NROW4O,NWKS,NWKSOC,NLEVOC
     #,               ORBFRM,SYMORB,NUMIJ,NGROUP,NUMINT,NMAX,NSPC,NVREF
     #,               NIJVIR
      COMMON /DRTINF/ NA,NB,NS,NESPEC,MAXB,LEVFRM,LEVVAL,LEVOPN,LEVMUL
     #,               LEVOCC,SPEC,SSPESH,VAL
      COMMON /TAPES/  OUT,ERROUT,INPUT,DRTTAP
      COMMON /OPTION/ OPTION(16),IDENT(26),LABEL(26)
      COMMON /CASES/  CASEV(9)
C
      DIMENSION ORBTBF(NORBS),BFCODE(NREFS,NBF)
      DIMENSION ARC(4,NROWS)
      DIMENSION LEVNR(NLEVS),LEVPT(NLEVS)
      DIMENSION WGHT(4,NROWS)
      DIMENSION ROWSV(NLEVS),CSAV(NLEVS),WTSAV(NLEVS),REFWT(MXREF)
C
      IF (LEVVAL.LE.10000) GO TO 110
      DO 100 REFER=1,NREFS
         WT=1
         ROW=1
         DO 50 ORB=NORBS,1,-1
            LEV=ORB+1
            CASE=CASEV(BFCODE(REFER,ORBTBF(ORB)))
            WT=WT+WGHT(CASE,LEVPT(LEV)+ROW)
            ROW=ARC(CASE,LEVPT(LEV)+ROW)
   50    CONTINUE
C
         REFWT(REFER)=WT
         WRITE (OUT,51) REFER,WT
   51    FORMAT ('  REFERENCE #',I4,' IS WALK',I8)
  100 CONTINUE
      NVREF=NREFS
C
      goto 9999
C
  110 CONTINUE
C
      ROW=1
      DO 150 ORB=NORBS,LEVVAL-1,-1
         LEV=ORB+1
         ROW=ARC(CASEV(BFCODE(1,ORBTBF(ORB))),LEVPT(ORB+1)+ROW)
  150 CONTINUE
C
      WRITE (OUT,151) ORB+1,ROW
  151 FORMAT (' LEVVAL PT',3I5)
C
      BOTTOM=LEV-1
      ROWM1=ROW
      ROWSV(BOTTOM)=ROWM1
      NVREF=0
C
      WT=1
      DO 155 I=LEVVAL-2,1,-1
         CASE=CASEV(BFCODE(1,ORBTBF(I)))
         WT=WT+WGHT(CASE,LEVPT(I+1)+ROW)
         ROW=ARC(CASE,LEVPT(I+1)+ROW)
  155 CONTINUE
C
      MINC=1
  159 CONTINUE
      MIN=LEVPT(LEV)+1
      MAX=LEVPT(LEV)+LEVNR(LEV)
  160 CONTINUE
      DO 165 ROW=MIN,MAX
      DO 164 CS=MINC,4
         IF (ARC(CS,ROW).EQ.ROWM1) GO TO 170
  164 CONTINUE
      MINC=1
  165 CONTINUE
  166 CONTINUE
      LEV=LEV-1
      WT=WTSAV(LEV)
      IF (LEV.LE.BOTTOM) goto 9999
      ROWM1=ROWSV(LEV-1)
      MIN=LEVPT(LEV)+ROWSV(LEV)
      MAX=LEVPT(LEV)+LEVNR(LEV)
      MINC=CSAV(LEV)+1
      GO TO 160
C
  170 CONTINUE
      CSAV(LEV)=CS
      ROWSV(LEV)=ROW-LEVPT(LEV)
      WTSAV(LEV)=WT
      WT=WT+WGHT(CS,ROW)
      IF (LEV.GE.NLEVS) GO TO 200
      ROWM1=ROW-LEVPT(LEV)
      LEV=LEV+1
      GO TO 159
C
  200 CONTINUE
      NVREF=NVREF+1
      REFWT(NVREF)=WT
      if (nvref.le.20) then
        WRITE (OUT,201) NVREF,WT
  201   FORMAT (' VALENCE EXCITATION #',I5,' IS WALK ',I8)
      else if (nvref.eq.21) then 
        write(OUT,*) '   ... and there are more valence walks'
        endif
      GO TO 166

c  Branch to here just before return
 9999 continue
      write(OUT,*)
      write(OUT,*) ' The number of valence walks is ',nvref
C
      END
