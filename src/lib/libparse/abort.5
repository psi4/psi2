.TH print_control 5 "28 March, 1991" "Psi Release 2.0" "\*(]D"
.SH NAME
mabort, qabort, jabort, and pabort \- abort a Fortran 77 program

.SH SYNOPSIS
.nf
subroutine mabort()

subroutine qabort()

subroutine jabort()

subroutine pabort()

.fi

.SH DESCRIPTION
.LP
These Fortran 77 routines provide an organized
way of printing out error messages
and stopping execution of a Psi job sequence.

.LP
The \fBqabort\fP routine is the quiet abort subprogram.  It does whatever
is necessary to return a nonzero exit status to the operating system which
is running the Psi application.  The \fBpsi\fP program or a shell
script which is running a sequence of Psi applications can then stop
and not run the remaining steps in the sequence.  This is in contrast
to a normal exit which is accomplished with the Fortran STOP statement.

.LP
The \fBqabort\fP subprogram prints out nothing, it simply stops execution.
It is up to the programmer to supply an informative error message
before calling \fBqabort\fP.
The \fBqabort\fP routine will not return.

.LP
The \fBjabort\fP subprogram is provided by the programmer to print out job
specific information at abort time.  Additionally, it may flush out
I/O buffers or do other cleanup tasks.  If the programmer does not
provide a \fBjabort\fP routine, then a dummy routine which does nothing
is linked in from the Psi libraries.
The \fBjabort\fP routine should return, to allow calls to several abort
routines at abort time.

.LP
The \fBpabort\fP routine is provided to print out the status of the
input file parser.  It displays a variety of useful information, such
as the most recent parser error message and the position in the input
file.  A common technique for aborting a program when an error in the
input file has been detected
is to first print out an informative message, then
call \fBpabort\fP, and finally call \fBqabort\fP.

.LP
The \fBmabort\fP routine is the main abort sequence.  It calls all of
the other abort sequences, with the call to \fBqabort\fP last.  This
routine is intended to be used when a program detects an unexplained
internal inconsistency.  It trys to print out as much information as
possible.  If the programmer knows what the problem is and why the
program should abort, then the \fBmabort\fP routine should not be used.
In this case, it would be best to print an informative message and
call the \fBqabort\fP routine.  This will help avoid confusing the
users of the Psi programs.
The \fBmabort\fP routine will not return, because it calls \fBqabort\fP.

